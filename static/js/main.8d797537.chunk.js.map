{"version":3,"sources":["utils/constants.js","components/layout/layout.js","components/playComputer/user_profile.js","utils/chessboard/ChessboardMoveInput.js","utils/chessboard/ChessboardPiecesAnimation.js","utils/chessboard/ChessboardView.js","utils/chessboard/ChessboardState.js","utils/chessboard/Chessboard.js","assets/sounds/Capture1.mp3","assets/sounds/Check.mp3","assets/sounds/Move.mp3","assets/sounds/Defeat.mp3","assets/sounds/Victory.mp3","utils/gameSound.js","assets/images/chessboard-sprite-staunty.svg","utils/engineGame.js","utils/displayPgn.js","components/playComputer/game.js","components/home/index.js","utils/puzzleParse.js","assets/images/wK.svg","assets/images/bK.svg","components/puzzles/index.js","components/practice/index.js","assets/pieces/wR.svg","assets/pieces/wN.svg","assets/pieces/wB.svg","assets/pieces/wK.svg","assets/pieces/wQ.svg","assets/pieces/wP.svg","assets/pieces/bR.svg","assets/pieces/bN.svg","assets/pieces/bB.svg","assets/pieces/bK.svg","assets/pieces/bQ.svg","assets/pieces/bP.svg","utils/pieceTheme.js","components/practice/basics.js","utils/index.js","components/practice/practice.js","utils/fen_editor/index.js","components/boardEditor/index.js","App.js","reportWebVitals.js","index.js"],"names":["APP_ROUTES","Layout","children","openSideBar","document","querySelector","classList","toggle","className","onClick","to","UserProfile","user","username","id","STATE","waitForInputStart","pieceClickedThreshold","clickTo","secondClickThreshold","dragTo","clickDragTo","moveDone","reset","MOVE_CANCELED_REASON","ChessboardMoveInput","view","moveStartCallback","moveDoneCallback","moveCanceledCallback","this","chessboard","setMoveInputState","newState","params","undefined","prevState","moveInputState","Error","pointerMoveListener","window","removeEventListener","type","pointerUpListener","startIndex","index","endIndex","movedPiece","piece","updateStartEndMarkers","startPoint","point","onPointerMove","bind","addEventListener","onPointerUp","draggablePiece","Svg","removeElement","setPieceVisibility","state","inputEnabled","createDraggablePiece","indexOf","prevSquares","squares","slice","setPiece","animatePieces","drawPieces","pieceName","createSvg","body","add","setAttribute","squareWidth","squareHeight","name","spriteUrl","props","sprite","cache","url","addElement","href","scaling","size","transformScale","createSVGTransform","setScale","transform","baseVal","appendItem","x","y","e","button","color","target","getAttribute","pieceElement","getPiece","substr","inputWhiteEnabled","inputBlackEnabled","preventDefault","clientX","clientY","touches","SQUARE_COORDINATES","pieceColor","startPieceName","startPieceColor","pageX","pageY","elementFromPoint","Math","abs","moveDraggablePiece","parentElement","boardGroup","changedTouches","moveStartIndex","style","moveFromMarker","removeMarkers","moveToMarker","addMarker","drawMarkers","CHANGE_TYPE","ChessboardPiecesAnimation","fromSquares","toSquares","duration","callback","animatedElements","createAnimation","frameHandle","requestAnimationFrame","animationStep","appearedList","disappearedList","changes","i","previousSquare","newSquare","push","forEach","appeared","shortestDistance","foundMoved","disappeared","moveDistance","squareDistance","splice","atIndex","toIndex","seekChanges","change","animatedItem","element","atPoint","squareIndexToPoint","toPoint","drawPiece","opacity","time","startTime","timeDiff","cancelAnimationFrame","t","min","progress","removeItem","svg","setTranslate","console","warn","index1","index2","file1","rank1","floor","file2","rank2","max","ChessboardView","callbackAfterCreation","animationRunning","currentAnimation","moveInput","animationQueue","cacheSprite","responsive","ResizeObserver","resizeObserver","handleResize","observe","resizeListener","pointerDownListener","pointerDownHandler","createSvgAndGroups","updateMetrics","onPointerDown","destroy","unobserve","wrapperId","getElementById","wrapper","createElement","display","appendChild","xhr","XMLHttpRequest","open","onload","insertAdjacentHTML","response","send","cssClass","borderType","class","coordinatesGroup","markersGroup","piecesGroup","width","clientWidth","height","clientHeight","BORDER_TYPE","frame","borderSize","thin","innerWidth","innerHeight","scalingX","scalingY","pieceXTranslate","aspectRatio","redraw","drawBoard","drawCoordinates","setCursor","firstChild","removeChild","lastChild","none","innerPos","orientation","COLOR","white","fieldClass","squareRect","showCoordinates","inline","file","textElement","textContent","String","fromCharCode","rank","childNodes","Array","from","childNode","pieceGroup","pieceUse","transformTranslate","visible","markers","marker","drawMarker","markerGroup","markerUse","nextPieceAnimationInQueue","nextAnimation","shift","animationDuration","length","eventHandler","black","moveInputCallback","INPUT_EVENT_TYPE","moveStart","square","fromIndex","squareFrom","squareTo","reason","moveCanceled","squareSelectEnabled","SVG_NAMESPACE","containerElement","createElementNS","parent","attributes","attribute","hasOwnProperty","value","split","setAttributeNS","parentNode","ChessboardState","fill","filter","fen","parts","replace","part","row","str","numSpaces","parseInt","ret","c","char","toUpperCase","toLowerCase","spaceCounter","join","charCodeAt","SQUARE_SELECT_TYPE","MARKER_TYPE","dot","circle","FEN_START_POSITION","FEN_EMPTY_POSITION","Chessboard","defaultProps","position","moveMarker","hoverMarker","Object","assign","offsetWidth","setPosition","squareToIndex","animated","Promise","resolve","reject","pieceFrom","currentFen","getPosition","error","markersFound","markerSquare","squareSelectListener","enableMoveInput","disableMoveInput","enableSquareSelect","event","disableSquareSelect","music","capture","Audio","check","move","defeat","Defeat","victory","$","selector","elements","querySelectorAll","addClass","removeClass","remove","html","innerHTML","text","engineGame","options","showEvaluation","board","announced_game_over","game","Chess","engine","Worker","evaler","engineStatus","displayScore","wtime","btime","winc","binc","playerColor","clockTimeoutID","isEngineRunning","evaluation_el","gameMusic","uciCmd","cmd","which","log","postMessage","displayStatus","status","engineLoaded","engineReady","search","score","displayClock","clockColor","Date","now","sec","ceil","hours","updateClock","clockTick","setTimeout","get_moves","moves","history","verbose","promotion","prepareMove","p","clearTimeout","elapsed","stopClock","pgn","turn","game_over","depth","nodes","setInterval","alert","onmessage","line","data","evaluation","match","highlightMove","flags","includes","play","toFixed","pieceSet","source","onDrop","flip","getOrientation","setOrientation","setSkillLevel","loadPgn","load_pgn","setPlayerColor","skill","err_prob","level","round","setTime","baseTime","inc","setDepth","setNodes","setContempt","contempt","setAggressiveness","setDisplayScore","flag","start","undo","replay","h","update","clearInterval","r","Game","React","useState","player2","profileImage","player1","isPlaying","isGameOver","gameState","setGameState","useRef","useEffect","current","gameInfoTab","setGameInfoTab","title","onScroll","preserveAspectRatio","viewBox","d","Home","PuzzleParser","puzzleString","tokens","puzzleId","rating","ratingDeviation","popularity","nbPlays","themes","gameUr","currentMove","Puzzle","solve","setSolve","puzzle","complete","setComplete","chess","getCurrentMove","setMove","destination","cMove","san","src","wK","bK","alt","Practice","nagigator","useNavigate","keys","map","key","Fragment","item","pathname","hash","fromPopup","Card","description","pieceTheme","wb","wk","wn","wp","wr","wq","bb","br","bk","bq","bp","bn","Basics","icon","drawArrow","p1","p2","sqSize","x1","x2","y1","y2","PracticeLessons","highlightedSquare","timeId","arrowState","arrowGroup","currentLesson","setLesson","randomMove","random","newMove","m","put","selectedCategory","selectedItem","rook","lessons","load","action","markPosibleMoves","rMove","moveTo","arrow","lesson","updateLesson","instruction","expanded","openListItem","EDIT_MODE","FenEditor","conf","arrowMarkers","editMode","markerType","eleId","arrowMarkersGroup","getMarkers","onboardChange","mode","BoardEditor","gameInfo","enPassant","fullMove","halfMove","bCL","bCS","wCL","wCS","casling","Q","K","q","k","setCasling","caslingChange","v","checked","genFen","fenEditor","setEditMode","setCurrentFen","updateEditMove","s","casling_","boardChange","_position","onChange","defaultChecked","htmlFor","for","setMarker","selected","App","markerWidth","markerHeight","refX","refY","orient","points","stroke","cx","cy","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+/KAAaA,EACL,IADKA,EAEG,kBAFHA,EAGF,YAHEA,EAID,aAJCA,EAMH,UANGA,EAOL,UAPKA,EAQE,iBARFA,EASG,kBATHA,EAUF,mB,OC4EIC,MAjFf,YAA+B,IAAbC,EAAY,EAAZA,SACVC,EAAc,WAClBC,SAASC,cAAc,YAAYC,UAAUC,OAAO,SAGtD,OACE,sBAAKC,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAUC,QAASN,EAAlC,UACE,sBAAKK,UAAU,eAAf,UACE,+BACE,oBAAIA,UAAU,SAAd,mBACA,6BACE,eAAC,IAAD,CAAME,GAAIV,EAAV,UACE,sBAAMQ,UAAU,iBAAhB,uBADF,eAIF,6BACE,eAAC,IAAD,CAAME,GAAIV,EAAV,UACE,sBAAMQ,UAAU,iBAAhB,8BAAyD,IAD3D,gBAKF,6BACE,eAAC,IAAD,CAAME,GAAIV,EAAV,UACE,sBAAMQ,UAAU,iBAAhB,2BADF,mBAMJ,+BACE,oBAAIA,UAAU,SAAd,kBACA,6BACE,eAAC,IAAD,CAAME,GAAIV,EAAV,UACE,sBAAMQ,UAAU,iBAAhB,sBADF,oBAKJ,+BACE,oBAAIA,UAAU,SAAd,wBACA,6BACE,eAAC,IAAD,CAAME,GAAIV,EAAV,UACE,sBAAMQ,UAAU,iBAAhB,4BADF,uBAOJ,+BACE,oBAAIA,UAAU,SAAd,mBACA,6BACE,eAAC,IAAD,CAAME,GAAIV,EAAV,UACE,sBAAMQ,UAAU,iBAAhB,gCADF,qBAKF,6BACE,eAAC,IAAD,CAAME,GAAIV,EAAV,UACE,sBAAMQ,UAAU,iBAAhB,uBADF,0BAMN,sBAAKA,UAAU,UAAf,UACE,2CACA,sBAAMA,UAAU,iBAAhB,4BAGJ,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,mBAAGA,UAAU,iBAAiBC,QAASN,EAAvC,sBAKHD,S,oBC7DMS,MAff,YAAgC,IAATC,EAAQ,EAARA,KAEnB,OACI,sBAAKJ,UAAU,aAAf,UACI,qBAAKA,UAAU,GAAf,SACI,qBAAKA,UAAU,OAAf,SAAuBI,EAAKC,aAEhC,8BACI,qBAAKL,UAAU,MAAMM,GAAI,OAASF,EAAKE,GAAvC,2B,cCJVC,EAAQ,CACZC,kBAAmB,EACnBC,sBAAuB,EACvBC,QAAS,EACTC,qBAAsB,EACtBC,OAAQ,EACRC,YAAa,EACbC,SAAU,EACVC,MAAO,GAGIC,EACE,cADFA,EAEM,kBAFNA,EAGE,cAHFA,EAIU,sBAKVC,EAAb,WACE,WAAYC,EAAMC,EAAmBC,EAAkBC,GAAuB,oBAC5EC,KAAKJ,KAAOA,EACZI,KAAKC,WAAaL,EAAKK,WACvBD,KAAKH,kBAAoBA,EACzBG,KAAKF,iBAAmBA,EACxBE,KAAKD,qBAAuBA,EAC5BC,KAAKE,kBAAkBjB,EAAMC,mBAPjC,qDAUE,SAAkBiB,GAA+B,IAAD,OAApBC,EAAoB,4DAAXC,EAG7BC,EAAYN,KAAKO,eAGvB,OAFAP,KAAKO,eAAiBJ,EAEdA,GACN,KAAKlB,EAAMC,kBACT,MAEF,KAAKD,EAAME,sBACT,GACEF,EAAMC,oBAAsBoB,GAC5BrB,EAAMG,UAAYkB,EAElB,MAAM,IAAIE,MAAM,kBAqBlB,GAnBIR,KAAKS,sBACPC,OAAOC,oBACLX,KAAKS,oBAAoBG,KACzBZ,KAAKS,qBAEPT,KAAKS,yBAAsBJ,GAEzBL,KAAKa,oBACPH,OAAOC,oBACLX,KAAKa,kBAAkBD,KACvBZ,KAAKa,mBAEPb,KAAKa,uBAAoBR,GAE3BL,KAAKc,WAAaV,EAAOW,MACzBf,KAAKgB,cAAWX,EAChBL,KAAKiB,WAAab,EAAOc,MACzBlB,KAAKmB,wBACLnB,KAAKoB,WAAahB,EAAOiB,MACpBrB,KAAKS,qBAAwBT,KAAKa,kBAqBrC,MAAML,MAAM,8CApBZ,GAAoB,cAAhBJ,EAAOQ,KACTZ,KAAKS,oBAAsBT,KAAKsB,cAAcC,KAAKvB,MACnDA,KAAKS,oBAAoBG,KAAO,YAChCF,OAAOc,iBAAiB,YAAaxB,KAAKS,qBAE1CT,KAAKa,kBAAoBb,KAAKyB,YAAYF,KAAKvB,MAC/CA,KAAKa,kBAAkBD,KAAO,UAC9BF,OAAOc,iBAAiB,UAAWxB,KAAKa,uBACnC,IAAoB,eAAhBT,EAAOQ,KAShB,MAAMJ,MAAM,cARZR,KAAKS,oBAAsBT,KAAKsB,cAAcC,KAAKvB,MACnDA,KAAKS,oBAAoBG,KAAO,YAChCF,OAAOc,iBAAiB,YAAaxB,KAAKS,qBAE1CT,KAAKa,kBAAoBb,KAAKyB,YAAYF,KAAKvB,MAC/CA,KAAKa,kBAAkBD,KAAO,WAC9BF,OAAOc,iBAAiB,WAAYxB,KAAKa,mBAO7C,MAEF,KAAK5B,EAAMG,QACLY,KAAK0B,iBACPC,EAAIC,cAAc5B,KAAK0B,gBACvB1B,KAAK0B,oBAAiBrB,GAEpBC,IAAcrB,EAAMK,QACtBU,KAAKJ,KAAKiC,mBAAmBzB,EAAOW,OAEtC,MAEF,KAAK9B,EAAMI,qBACT,GAAIJ,EAAMG,UAAYkB,EACpB,MAAM,IAAIE,MAAM,kBAElBR,KAAKoB,WAAahB,EAAOiB,MACzB,MAEF,KAAKpC,EAAMK,OACT,GAAIL,EAAME,wBAA0BmB,EAClC,MAAM,IAAIE,MAAM,kBAEdR,KAAKJ,KAAKK,WAAW6B,MAAMC,eAC7B/B,KAAKJ,KAAKiC,mBAAmBzB,EAAOW,OAAO,GAC3Cf,KAAKgC,qBAAqB5B,EAAOc,QAEnC,MAEF,KAAKjC,EAAMM,YACT,GAAIN,EAAMI,uBAAyBiB,EACjC,MAAM,IAAIE,MAAM,kBAEdR,KAAKJ,KAAKK,WAAW6B,MAAMC,eAC7B/B,KAAKJ,KAAKiC,mBAAmBzB,EAAOW,OAAO,GAC3Cf,KAAKgC,qBAAqB5B,EAAOc,QAEnC,MAEF,KAAKjC,EAAMO,SACT,IAGS,IAFP,CAACP,EAAMK,OAAQL,EAAMG,QAASH,EAAMM,aAAa0C,QAC/C3B,GAGF,MAAM,IAAIE,MAAM,kBAGlB,GADAR,KAAKgB,SAAWZ,EAAOW,MAErBf,KAAKgB,UACLhB,KAAKF,iBAAiBE,KAAKc,WAAYd,KAAKgB,UAC5C,CACA,IAAMkB,EAAclC,KAAKC,WAAW6B,MAAMK,QAAQC,MAAM,GACxDpC,KAAKC,WAAW6B,MAAMO,SAASrC,KAAKc,gBAAYT,GAChDL,KAAKC,WAAW6B,MAAMO,SAASrC,KAAKgB,SAAUhB,KAAKiB,YAC/CX,IAAcrB,EAAMG,SACtBY,KAAKmB,wBACLnB,KAAKJ,KAAK0C,cACRJ,EACAlC,KAAKC,WAAW6B,MAAMK,QAAQC,MAAM,IACpC,WACE,EAAKlC,kBAAkBjB,EAAMQ,YAIjCO,KAAKJ,KAAK2C,WAAWvC,KAAKC,WAAW6B,MAAMK,SAC3CnC,KAAKE,kBAAkBjB,EAAMQ,aAG/BO,KAAKJ,KAAK2C,aACVvC,KAAKE,kBAAkBjB,EAAMQ,OAE/B,MAEF,KAAKR,EAAMQ,MACLO,KAAKc,aAAed,KAAKgB,UAAYhB,KAAKiB,YAC5CjB,KAAKC,WAAW6B,MAAMO,SAASrC,KAAKc,WAAYd,KAAKiB,YAEvDjB,KAAKc,gBAAaT,EAClBL,KAAKgB,cAAWX,EAChBL,KAAKiB,gBAAaZ,EAClBL,KAAKmB,wBACDnB,KAAK0B,iBACPC,EAAIC,cAAc5B,KAAK0B,gBACvB1B,KAAK0B,oBAAiBrB,GAEpBL,KAAKS,sBACPC,OAAOC,oBACLX,KAAKS,oBAAoBG,KACzBZ,KAAKS,qBAEPT,KAAKS,yBAAsBJ,GAEzBL,KAAKa,oBACPH,OAAOC,oBACLX,KAAKa,kBAAkBD,KACvBZ,KAAKa,mBAEPb,KAAKa,uBAAoBR,GAE3BL,KAAKE,kBAAkBjB,EAAMC,mBAC7B,MAEF,QACE,MAAMsB,MAAM,kBAAD,OAAmBL,OA7KtC,kCAiLE,SAAqBqC,GACnB,GAAIxC,KAAK0B,eACP,MAAMlB,MAAM,yBAEdR,KAAK0B,eAAiBC,EAAIc,UAAUnE,SAASoE,MAC7C1C,KAAK0B,eAAelD,UAAUmE,IAAI,iCAClC3C,KAAK0B,eAAekB,aAAa,QAAS5C,KAAKJ,KAAKiD,aACpD7C,KAAK0B,eAAekB,aAAa,SAAU5C,KAAKJ,KAAKkD,cACrD9C,KAAK0B,eAAekB,aAAa,QAAS,wBAC1C5C,KAAK0B,eAAeqB,KAAOP,EAC3B,IAAMQ,EAAYhD,KAAKC,WAAWgD,MAAMC,OAAOC,MAC3C,GACAnD,KAAKC,WAAWgD,MAAMC,OAAOE,IAC3BlC,EAAQS,EAAI0B,WAAWrD,KAAK0B,eAAgB,MAAO,CACvD4B,KAAK,GAAD,OAAKN,EAAL,YAAkBR,KAElBe,EAAUvD,KAAKJ,KAAKkD,aAAe9C,KAAKC,WAAWgD,MAAMC,OAAOM,KAChEC,EAAiBzD,KAAK0B,eAAegC,qBAC3CD,EAAeE,SAASJ,EAASA,GACjCrC,EAAM0C,UAAUC,QAAQC,WAAWL,KApMvC,gCAuME,SAAmBM,EAAGC,GACpBhE,KAAK0B,eAAekB,aAClB,QADF,0DAGImB,EAAI/D,KAAKJ,KAAKkD,aAAe,EAHjC,oBAIckB,EAAIhE,KAAKJ,KAAKkD,aAAe,EAJ3C,SAxMJ,2BAgNE,SAAcmB,GACZ,GAAgB,cAAXA,EAAErD,MAAqC,IAAbqD,EAAEC,QAA4B,eAAXD,EAAErD,KAAuB,CACzE,IAEI4B,EAAW2B,EAmBP9C,EArBFN,EAAQkD,EAAEG,OAAOC,aAAa,cAC9BC,EAAetE,KAAKJ,KAAK2E,SAASxD,GAaxC,GAXIuD,IAKW,OAHbH,GADA3B,EAAY8B,EAAaD,aAAa,eAClB7B,EAAUgC,OAAO,EAAG,QAAKnE,IAGzBL,KAAKC,WAAW6B,MAAM2C,mBAC7B,MAAVN,GAAiBnE,KAAKC,WAAW6B,MAAM4C,oBAExCT,EAAEU,iBAGF5D,EAEF,GACEf,KAAKO,iBAAmBtB,EAAMC,mBAC7Bc,KAAKC,WAAW6B,MAAM2C,mBAA+B,MAAVN,GAC3CnE,KAAKC,WAAW6B,MAAM4C,mBAA+B,MAAVP,EAQ5C,GALe,cAAXF,EAAErD,KACJS,EAAQ,CAAE0C,EAAGE,EAAEW,QAASZ,EAAGC,EAAEY,SACT,eAAXZ,EAAErD,OACXS,EAAQ,CAAE0C,EAAGE,EAAEa,QAAQ,GAAGF,QAASZ,EAAGC,EAAEa,QAAQ,GAAGD,UAGnD7E,KAAKO,iBAAmBtB,EAAMC,mBAC9BsD,GACAxC,KAAKH,kBAAkBkB,GAEvBf,KAAKE,kBAAkBjB,EAAME,sBAAuB,CAClD4B,MAAOA,EACPG,MAAOsB,EACPnB,MAAOA,EACPT,KAAMqD,EAAErD,YAEL,GAAIZ,KAAKO,iBAAmBtB,EAAMG,QACvC,GAAI2B,IAAUf,KAAKc,WACjBd,KAAKE,kBAAkBjB,EAAMI,qBAAsB,CACjD0B,MAAOA,EACPG,MAAOsB,EACPnB,MAAOA,EACPT,KAAMqD,EAAErD,WAEL,CACL,IAAM4B,EAAYxC,KAAKC,WAAWsE,SAChCQ,EAAmBhE,IAEfiE,EAAaxC,EAAYA,EAAUgC,OAAO,EAAG,QAAKnE,EAClD4E,EAAiBjF,KAAKC,WAAWsE,SACrCQ,EAAmB/E,KAAKc,aAEpBoE,EAAkBD,EACpBA,EAAeT,OAAO,EAAG,QACzBnE,EACA8D,GAASe,IAAoBF,GAE/BhF,KAAKD,qBACHL,EACAM,KAAKc,WACLC,GAEEf,KAAKH,kBAAkBkB,GACzBf,KAAKE,kBAAkBjB,EAAME,sBAAuB,CAClD4B,MAAOA,EACPG,MAAOsB,EACPnB,MAAOA,EACPT,KAAMqD,EAAErD,OAGVZ,KAAKE,kBAAkBjB,EAAMQ,QAG/BO,KAAKE,kBAAkBjB,EAAMO,SAAU,CAAEuB,MAAOA,QA7RhE,2BAsSE,SAAckD,GACZ,IAAIkB,EAAOC,EAAOR,EAASC,EAAST,EAcpC,GAbe,cAAXH,EAAErD,MACJgE,EAAUX,EAAEW,QACZC,EAAUZ,EAAEY,QACZM,EAAQlB,EAAEkB,MACVC,EAAQnB,EAAEmB,MACVhB,EAASH,EAAEG,QACS,cAAXH,EAAErD,OACXgE,EAAUX,EAAEa,QAAQ,GAAGF,QACvBC,EAAUZ,EAAEa,QAAQ,GAAGD,QACvBM,EAAQlB,EAAEa,QAAQ,GAAGK,MACrBC,EAAQnB,EAAEa,QAAQ,GAAGM,MACrBhB,EAAS9F,SAAS+G,iBAAiBT,EAASC,IAG5C7E,KAAKO,iBAAmBtB,EAAME,uBAC9Ba,KAAKO,iBAAmBtB,EAAMI,sBAG5BiG,KAAKC,IAAIvF,KAAKoB,WAAW2C,EAAIa,GA5Td,GA6TfU,KAAKC,IAAIvF,KAAKoB,WAAW4C,EAAIa,GA7Td,KA+TX7E,KAAKO,iBAAmBtB,EAAMI,qBAChCW,KAAKE,kBAAkBjB,EAAMM,YAAa,CACxCwB,MAAOf,KAAKc,WACZI,MAAOlB,KAAKiB,aAGdjB,KAAKE,kBAAkBjB,EAAMK,OAAQ,CACnCyB,MAAOf,KAAKc,WACZI,MAAOlB,KAAKiB,aAGZjB,KAAKJ,KAAKK,WAAW6B,MAAMC,cAC7B/B,KAAKwF,mBAAmBL,EAAOC,SAG9B,GACLpF,KAAKO,iBAAmBtB,EAAMK,QAC9BU,KAAKO,iBAAmBtB,EAAMM,aAC9BS,KAAKO,iBAAmBtB,EAAMG,QAC9B,CACA,GACEgF,GACAA,EAAOC,cACPD,EAAOqB,gBAAkBzF,KAAKJ,KAAK8F,WACnC,CACA,IAAM3E,EAAQqD,EAAOC,aAAa,cAC9BtD,IAAUf,KAAKc,YAAcC,IAAUf,KAAKgB,UAC9ChB,KAAKgB,SAAWD,EAChBf,KAAKmB,yBACIJ,IAAUf,KAAKc,iBAAgCT,IAAlBL,KAAKgB,WAC3ChB,KAAKgB,cAAWX,EAChBL,KAAKmB,mCAGed,IAAlBL,KAAKgB,WACPhB,KAAKgB,cAAWX,EAChBL,KAAKmB,0BAIPnB,KAAKJ,KAAKK,WAAW6B,MAAMC,cAC1B/B,KAAKO,iBAAmBtB,EAAMK,QAC7BU,KAAKO,iBAAmBtB,EAAMM,aAEhCS,KAAKwF,mBAAmBL,EAAOC,MAzWvC,yBA8WE,SAAYnB,GACV,IAAIG,EASJ,GARe,YAAXH,EAAErD,KACJwD,EAASH,EAAEG,OACS,aAAXH,EAAErD,OACXwD,EAAS9F,SAAS+G,iBAChBpB,EAAE0B,eAAe,GAAGf,QACpBX,EAAE0B,eAAe,GAAGd,UAGpBT,GAAUA,EAAOC,aAAc,CACjC,IAAMtD,EAAQqD,EAAOC,aAAa,cAElC,GAAItD,EAEAf,KAAKO,iBAAmBtB,EAAMK,QAC9BU,KAAKO,iBAAmBtB,EAAMM,YAE1BS,KAAKc,aAAeC,EAClBf,KAAKO,iBAAmBtB,EAAMM,aAChCS,KAAKC,WAAW6B,MAAMO,SAASrC,KAAKc,WAAYd,KAAKiB,YACrDjB,KAAKJ,KAAKiC,mBAAmB7B,KAAKc,YAClCd,KAAKD,qBACHL,EACAqB,EACAA,GAEFf,KAAKE,kBAAkBjB,EAAMQ,QAE7BO,KAAKE,kBAAkBjB,EAAMG,QAAS,CAAE2B,MAAOA,IAGjDf,KAAKE,kBAAkBjB,EAAMO,SAAU,CAAEuB,MAAOA,IAEzCf,KAAKO,iBAAmBtB,EAAME,sBACvCa,KAAKE,kBAAkBjB,EAAMG,QAAS,CAAE2B,MAAOA,IACtCf,KAAKO,iBAAmBtB,EAAMI,uBACvCW,KAAKE,kBAAkBjB,EAAMQ,OAC7BO,KAAKD,qBACHL,EACAqB,EACAA,QAGC,CACLf,KAAKJ,KAAK2C,aACV,IAAMqD,EAAiB5F,KAAKc,WAC5Bd,KAAKE,kBAAkBjB,EAAMQ,OAC7BO,KAAKD,qBACHL,EACAkG,OACAvF,SAIJL,KAAKJ,KAAK2C,aACVvC,KAAKE,kBAAkBjB,EAAMQ,SAtanC,mCA0aE,WACMO,KAAKC,WAAWgD,MAAM4C,MAAMC,gBAC9B9F,KAAKC,WAAW6B,MAAMiE,mBACpB1F,EACAL,KAAKC,WAAWgD,MAAM4C,MAAMC,gBAG5B9F,KAAKC,WAAWgD,MAAM4C,MAAMG,cAC9BhG,KAAKC,WAAW6B,MAAMiE,mBACpB1F,EACAL,KAAKC,WAAWgD,MAAM4C,MAAMG,cAG5BhG,KAAKC,WAAWgD,MAAM4C,MAAMC,gBAC1B9F,KAAKc,YACPd,KAAKC,WAAW6B,MAAMmE,UACpBjG,KAAKc,WACLd,KAAKC,WAAWgD,MAAM4C,MAAMC,gBAI9B9F,KAAKC,WAAWgD,MAAM4C,MAAMG,cAC1BhG,KAAKgB,UACPhB,KAAKC,WAAW6B,MAAMmE,UACpBjG,KAAKgB,SACLhB,KAAKC,WAAWgD,MAAM4C,MAAMG,cAIlChG,KAAKJ,KAAKsG,gBAvcd,mBA0cE,WACElG,KAAKE,kBAAkBjB,EAAMQ,SA3cjC,qBA8cE,WACEO,KAAKP,YA/cT,KCtBM0G,EACI,EADJA,EAEM,EAFNA,EAGS,EAGFC,EAAb,WAEI,WAAYxG,EAAMyG,EAAaC,EAAWC,EAAUC,GAAW,oBAC3DxG,KAAKJ,KAAOA,EACRyG,GAAeC,IACftG,KAAKyG,iBAAmBzG,KAAK0G,gBAAgBL,EAAaC,GAC1DtG,KAAKuG,SAAWA,EAChBvG,KAAKwG,SAAWA,EAChBxG,KAAK2G,YAAcC,sBAAsB5G,KAAK6G,cAActF,KAAKvB,QAR7E,+CAYI,SAAYqG,EAAaC,GAErB,IAFiC,IAAD,OAC1BQ,EAAe,GAAIC,EAAkB,GAAIC,EAAU,GAChDC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAMC,EAAiBb,EAAYY,GAC7BE,EAAYb,EAAUW,GACxBE,IAAcD,IACVC,GACAL,EAAaM,KAAK,CAAClG,MAAOiG,EAAWpG,MAAOkG,IAE5CC,GACAH,EAAgBK,KAAK,CAAClG,MAAOgG,EAAgBnG,MAAOkG,KA+BhE,OA3BAH,EAAaO,SAAQ,SAACC,GAClB,IAAIC,EAAmB,EACnBC,OAAanH,EACjB0G,EAAgBM,SAAQ,SAACI,GACrB,GAAIH,EAASpG,QAAUuG,EAAYvG,MAAO,CACtC,IAAMwG,EAAe,EAAKC,eAAeL,EAASvG,MAAO0G,EAAY1G,OACjE2G,EAAeH,IACfC,EAAaC,EACbF,EAAmBG,OAI3BF,GACAT,EAAgBa,OAAOb,EAAgB9E,QAAQuF,GAAa,GAC5DR,EAAQI,KAAK,CACTxG,KAAMuF,EACNjF,MAAOoG,EAASpG,MAChB2G,QAASL,EAAWzG,MACpB+G,QAASR,EAASvG,SAGtBiG,EAAQI,KAAK,CAACxG,KAAMuF,EAAoBjF,MAAOoG,EAASpG,MAAO2G,QAASP,EAASvG,WAGzFgG,EAAgBM,SAAQ,SAACI,GACrBT,EAAQI,KAAK,CAACxG,KAAMuF,EAAuBjF,MAAOuG,EAAYvG,MAAO2G,QAASJ,EAAY1G,WAEvFiG,IArDf,6BAwDI,SAAgBX,EAAaC,GAAY,IAAD,OAC9BU,EAAUhH,KAAK+H,YAAY1B,EAAaC,GACxCG,EAAmB,GAqBzB,OApBAO,EAAQK,SAAQ,SAACW,GACb,IAAMC,EAAe,CACjBrH,KAAMoH,EAAOpH,MAEjB,OAAQoH,EAAOpH,MACX,KAAKuF,EACD8B,EAAaC,QAAU,EAAKtI,KAAK2E,SAASyD,EAAOH,SACjDI,EAAaE,QAAU,EAAKvI,KAAKwI,mBAAmBJ,EAAOH,SAC3DI,EAAaI,QAAU,EAAKzI,KAAKwI,mBAAmBJ,EAAOF,SAC3D,MACJ,KAAK3B,EACD8B,EAAaC,QAAU,EAAKtI,KAAK0I,UAAUN,EAAOH,QAASG,EAAO9G,OAClE+G,EAAaC,QAAQrC,MAAM0C,QAAU,EACrC,MACJ,KAAKpC,EACD8B,EAAaC,QAAU,EAAKtI,KAAK2E,SAASyD,EAAOH,SAGzDpB,EAAiBW,KAAKa,MAEnBxB,IA/Ef,2BAkFI,SAAc+B,GAAO,IAAD,OACXxI,KAAKyI,YACNzI,KAAKyI,UAAYD,GAErB,IAAME,EAAWF,EAAOxI,KAAKyI,UAC7B,KAAIC,GAAY1I,KAAKuG,UAKjB,OAFAoC,qBAAqB3I,KAAK2G,kBAC1B3G,KAAKwG,WAHLxG,KAAK2G,YAAcC,sBAAsB5G,KAAK6G,cAActF,KAAKvB,OAMrE,IAAM4I,EAAItD,KAAKuD,IAAI,EAAGH,EAAW1I,KAAKuG,UAChCuC,EAAWF,EAAI,GAAK,EAAIA,EAAIA,GAAU,EAAI,EAAIA,GAAKA,EAAlB,EACvC5I,KAAKyG,iBAAiBY,SAAQ,SAACY,GAC3B,GAAIA,EAAaC,QACb,OAAQD,EAAarH,MACjB,KAAKuF,EACD8B,EAAaC,QAAQtE,UAAUC,QAAQkF,WAAW,GAClD,IAAMnF,EAAa,EAAKhE,KAAKoJ,IAAItF,qBACjCE,EAAUqF,aACNhB,EAAaE,QAAQpE,GAAKkE,EAAaI,QAAQtE,EAAIkE,EAAaE,QAAQpE,GAAK+E,EAC7Eb,EAAaE,QAAQnE,GAAKiE,EAAaI,QAAQrE,EAAIiE,EAAaE,QAAQnE,GAAK8E,GACjFb,EAAaC,QAAQtE,UAAUC,QAAQC,WAAWF,GAClD,MACJ,KAAKuC,EACD8B,EAAaC,QAAQrC,MAAM0C,QAAUO,EACrC,MACJ,KAAK3C,EACD8B,EAAaC,QAAQrC,MAAM0C,QAAU,EAAIO,OAIjDI,QAAQC,KAAK,8BAA+BlB,QAnH5D,4BAwHI,SAAemB,EAAQC,GACnB,IAAMC,EAAQF,EAAS,EACjBG,EAAQjE,KAAKkE,MAAMJ,EAAS,GAC5BK,EAAQJ,EAAS,EACjBK,EAAQpE,KAAKkE,MAAMH,EAAS,GAClC,OAAO/D,KAAKqE,IAAIrE,KAAKC,IAAImE,EAAQH,GAAQjE,KAAKC,IAAIkE,EAAQH,QA7HlE,KCFavE,EAAqB,CAC9B,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAGjC6E,EAAb,WAEI,WAAY3J,EAAY4J,GAAwB,IAAD,2BAC3C7J,KAAK8J,kBAAmB,EACxB9J,KAAK+J,sBAAmB1J,EACxBL,KAAKC,WAAaA,EAClBD,KAAKgK,UAAY,IAAIrK,EAAoBK,KACrCA,KAAKH,kBAAkB0B,KAAKvB,MAC5BA,KAAKF,iBAAiByB,KAAKvB,MAC3BA,KAAKD,qBAAqBwB,KAAKvB,OAEnCA,KAAKiK,eAAiB,GAClBhK,EAAWgD,MAAMC,OAAOC,OACxBnD,KAAKkK,cAELjK,EAAWgD,MAAMkH,aAEa,qBAAnBC,gBAEPpK,KAAKqK,eAAiB,IAAID,gBAAe,WACrC,EAAKE,kBAETtK,KAAKqK,eAAeE,QAAQvK,KAAKC,WAAWiI,WAE5ClI,KAAKwK,eAAiBxK,KAAKsK,aAAa/I,KAAKvB,MAC7CU,OAAOc,iBAAiB,SAAUxB,KAAKwK,kBAI/CxK,KAAKyK,oBAAsBzK,KAAK0K,mBAAmBnJ,KAAKvB,MACxDA,KAAKC,WAAWiI,QAAQ1G,iBAAiB,YAAaxB,KAAKyK,qBAC3DzK,KAAKC,WAAWiI,QAAQ1G,iBAAiB,aAAcxB,KAAKyK,qBAE5DzK,KAAK2K,qBACL3K,KAAK4K,gBACLf,EAAsB7J,MAClBC,EAAWgD,MAAMkH,YACjBnK,KAAKsK,eArCjB,sDAyCI,SAAmBrG,GACfjE,KAAKgK,UAAUa,cAAc5G,KA1CrC,qBA6CI,WACIjE,KAAKgK,UAAUc,UACX9K,KAAKqK,gBACLrK,KAAKqK,eAAeU,UAAU/K,KAAKC,WAAWiI,SAE9ClI,KAAKwK,gBACL9J,OAAOC,oBAAoB,SAAUX,KAAKwK,gBAE9CxK,KAAKC,WAAWiI,QAAQvH,oBAAoB,YAAaX,KAAKyK,qBAC9DzK,KAAKC,WAAWiI,QAAQvH,oBAAoB,aAAcX,KAAKyK,qBAC/D9I,EAAIC,cAAc5B,KAAKgJ,KACvBhJ,KAAKiK,eAAiB,GAClBjK,KAAK+J,kBACLpB,qBAAqB3I,KAAK+J,iBAAiBpD,eA1DvD,yBAgEI,WACI,IAAMqE,EAAY,wBAClB,IAAK1M,SAAS2M,eAAeD,GAAY,CACrC,IAAME,EAAU5M,SAAS6M,cAAc,OACvCD,EAAQrF,MAAMuF,QAAU,OACxBF,EAAQlM,GAAKgM,EACb1M,SAASoE,KAAK2I,YAAYH,GAC1B,IAAMI,EAAM,IAAIC,eAChBD,EAAIE,KAAK,MAAOxL,KAAKC,WAAWgD,MAAMC,OAAOE,KAAK,GAClDkI,EAAIG,OAAS,WACTP,EAAQQ,mBAAmB,aAAcJ,EAAIK,WAEjDL,EAAIM,UA5EhB,gCAgFI,WACQ5L,KAAKgJ,KACLrH,EAAIC,cAAc5B,KAAKgJ,KAE3BhJ,KAAKgJ,IAAMrH,EAAIc,UAAUzC,KAAKC,WAAWiI,SACzC,IAAI2D,EAAW7L,KAAKC,WAAWgD,MAAM4C,MAAMgG,SAAW7L,KAAKC,WAAWgD,MAAM4C,MAAMgG,SAAW,UAC7F7L,KAAKgJ,IAAIpG,aAAa,QAAS,6BAA+B5C,KAAKC,WAAWgD,MAAM4C,MAAMiG,WAAa,IAAMD,GAC7G7L,KAAK4K,gBACL5K,KAAK0F,WAAa/D,EAAI0B,WAAWrD,KAAKgJ,IAAK,IAAK,CAAC+C,MAAO,UACxD/L,KAAKgM,iBAAmBrK,EAAI0B,WAAWrD,KAAKgJ,IAAK,IAAK,CAAC+C,MAAO,gBAC9D/L,KAAKiM,aAAetK,EAAI0B,WAAWrD,KAAKgJ,IAAK,IAAK,CAAC+C,MAAO,YAC1D/L,KAAKkM,YAAcvK,EAAI0B,WAAWrD,KAAKgJ,IAAK,IAAK,CAAC+C,MAAO,aA3FjE,2BA8FI,WACI/L,KAAKmM,MAAQnM,KAAKC,WAAWiI,QAAQkE,YACrCpM,KAAKqM,OAASrM,KAAKC,WAAWiI,QAAQoE,aAClCtM,KAAKC,WAAWgD,MAAM4C,MAAMiG,aAAeS,EAAYC,MACvDxM,KAAKyM,WAAazM,KAAKmM,MAAQ,GACxBnM,KAAKC,WAAWgD,MAAM4C,MAAMiG,aAAeS,EAAYG,KAC9D1M,KAAKyM,WAAazM,KAAKmM,MAAQ,IAE/BnM,KAAKyM,WAAa,EAEtBzM,KAAK2M,WAAa3M,KAAKmM,MAAQ,EAAInM,KAAKyM,WACxCzM,KAAK4M,YAAc5M,KAAKqM,OAAS,EAAIrM,KAAKyM,WAC1CzM,KAAK6C,YAAc7C,KAAK2M,WAAa,EACrC3M,KAAK8C,aAAe9C,KAAK4M,YAAc,EACvC5M,KAAK6M,SAAW7M,KAAK6C,YAAc7C,KAAKC,WAAWgD,MAAMC,OAAOM,KAChExD,KAAK8M,SAAW9M,KAAK8C,aAAe9C,KAAKC,WAAWgD,MAAMC,OAAOM,KACjExD,KAAK+M,gBAAmB/M,KAAK6C,YAAc,EAAI7C,KAAKC,WAAWgD,MAAMC,OAAOM,KAAOxD,KAAK8M,SAAW,IA9G3G,0BAiHI,WACQ9M,KAAKC,WAAWgD,MAAM4C,MAAMmH,cAC5BhN,KAAKC,WAAWiI,QAAQrC,MAAMwG,OAAUrM,KAAKC,WAAWiI,QAAQkE,YAAcpM,KAAKC,WAAWgD,MAAM4C,MAAMmH,YAAe,MAEzHhN,KAAKC,WAAWiI,QAAQkE,cAAgBpM,KAAKmM,OAC7CnM,KAAKC,WAAWiI,QAAQoE,eAAiBtM,KAAKqM,SAC9CrM,KAAK4K,gBACL5K,KAAKiN,UAETjN,KAAKgJ,IAAIpG,aAAa,QAAS,QAC/B5C,KAAKgJ,IAAIpG,aAAa,SAAU,UA3HxC,oBA8HI,WACI5C,KAAKkN,YACLlN,KAAKmN,kBACLnN,KAAKkG,cACLlG,KAAKoN,YACLpN,KAAKuC,WAAWvC,KAAKC,WAAW6B,MAAMK,WAnI9C,uBAwII,WACI,KAAOnC,KAAK0F,WAAW2H,YACnBrN,KAAK0F,WAAW4H,YAAYtN,KAAK0F,WAAW6H,WAEhD,GAAIvN,KAAKC,WAAWgD,MAAM4C,MAAMiG,aAAeS,EAAYiB,OACrC7L,EAAI0B,WAAWrD,KAAK0F,WAAY,OAAQ,CAACyG,MAAOnM,KAAKmM,MAAOE,OAAQrM,KAAKqM,SAC/EzJ,aAAa,QAAS,UAC9B5C,KAAKC,WAAWgD,MAAM4C,MAAMiG,aAAeS,EAAYC,OAAO,CAC9D,IAAMiB,EAAWzN,KAAKyM,WACJ9K,EAAI0B,WAAWrD,KAAK0F,WAAY,OAAQ,CACtD3B,EAAG0J,EACHzJ,EAAGyJ,EACHtB,MAAOnM,KAAKmM,MAAmB,EAAXsB,EACpBpB,OAAQrM,KAAKqM,OAAoB,EAAXoB,IAEd7K,aAAa,QAAS,gBAG1C,IAAK,IAAIqE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAMlG,EAAQf,KAAKC,WAAW6B,MAAM4L,cAAgBC,EAAMC,MAAQ3G,EAAI,GAAKA,EAErE4G,EAAU,iBAD0B,KAApB,EAAI9M,EAAS,GAAW,QAAU,SAElDM,EAAQrB,KAAKoI,mBAAmBrH,GAChC+M,EAAanM,EAAI0B,WAAWrD,KAAK0F,WAAY,OAAQ,CACvD3B,EAAG1C,EAAM0C,EAAGC,EAAG3C,EAAM2C,EAAGmI,MAAOnM,KAAK6C,YAAawJ,OAAQrM,KAAK8C,eAElEgL,EAAWlL,aAAa,QAASiL,GACjCC,EAAWlL,aAAa,aAAc,GAAK7B,MAnKvD,6BAuKI,WACI,GAAKf,KAAKC,WAAWgD,MAAM4C,MAAMkI,gBAAjC,CAGA,KAAO/N,KAAKgM,iBAAiBqB,YACzBrN,KAAKgM,iBAAiBsB,YAAYtN,KAAKgM,iBAAiBuB,WAG5D,IADA,IAAMS,EAAShO,KAAKC,WAAWgD,MAAM4C,MAAMiG,aAAeS,EAAYC,MAC7DyB,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CACjC,IAAIlK,EAAI/D,KAAKyM,YAAc,GAAKzM,KAAKC,WAAWgD,MAAMC,OAAOM,KAAOyK,GAAQjO,KAAK6M,SAC7E7I,EAAIhE,KAAKqM,OAAyB,IAAhBrM,KAAK8M,SACvBjB,EAAW,kBACXmC,IACAjK,GAAwB,KAAhB/D,KAAK6M,SACbhB,GAAYoC,EAAO,EAAI,SAAW,UAEtC,IAAMC,EAAcvM,EAAI0B,WAAWrD,KAAKgM,iBAAkB,OAAQ,CAC9DD,MAAOF,EACP9H,EAAGA,EACHC,EAAGA,EACH6B,MAAM,cAAD,OAAgC,GAAhB7F,KAAK8M,SAArB,QAEL9M,KAAKC,WAAW6B,MAAM4L,cAAgBC,EAAMC,MAC5CM,EAAYC,YAAcC,OAAOC,aAAa,GAAKJ,GAEnDC,EAAYC,YAAcC,OAAOC,aAAa,IAAMJ,GAG5D,IAAK,IAAIK,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CACjC,IAAIvK,EAAK/D,KAAKyM,WAAa,IACvBzI,EAAIhE,KAAKyM,WAAa,GAAKzM,KAAK8M,SAAWwB,EAAOtO,KAAK8C,aACvD+I,EAAW,kBACXmC,IACAnC,GAAYyC,EAAO,EAAI,SAAW,SAC9BtO,KAAKC,WAAWgD,MAAM4C,MAAMiG,aAAeS,EAAYC,OACvDzI,GAAwB,GAAhB/D,KAAK6M,SACb7I,GAAwB,GAAhBhE,KAAK8M,WAEb/I,GAAwB,EAAhB/D,KAAK6M,SACb7I,GAAwB,GAAhBhE,KAAK8M,WAGrB,IAAMoB,EAAcvM,EAAI0B,WAAWrD,KAAKgM,iBAAkB,OAAQ,CAC9DD,MAAOF,EACP9H,EAAGA,EACHC,EAAGA,EACH6B,MAAM,cAAD,OAAgC,GAAhB7F,KAAK8M,SAArB,QAEL9M,KAAKC,WAAW6B,MAAM4L,cAAgBC,EAAMC,MAC5CM,EAAYC,YAAc,IAAM,EAAIG,GAEpCJ,EAAYC,YAAc,IAAM,EAAIG,OA1NpD,wBAiOI,WAEI,IAFiD,IAA1CnM,EAAyC,uDAA/BnC,KAAKC,WAAW6B,MAAMK,QACjCoM,EAAaC,MAAMC,KAAKzO,KAAKkM,YAAYqC,YACtCtH,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAMzE,EAAYL,EAAQ8E,GACtBzE,GACAxC,KAAKsI,UAAUrB,EAAGzE,GAG1B,cAAwB+L,EAAxB,eAAoC,CAA/B,IAAMG,EAAS,KAChB1O,KAAKkM,YAAYoB,YAAYoB,MA1OzC,uBA8OI,SAAU3N,EAAOyB,GACb,IAAMmM,EAAahN,EAAI0B,WAAWrD,KAAKkM,YAAa,KACpDyC,EAAW/L,aAAa,aAAcJ,GACtCmM,EAAW/L,aAAa,aAAc7B,GACtC,IAAMM,EAAQrB,KAAKoI,mBAAmBrH,GAChC6C,EAAa5D,KAAKgJ,IAAItF,qBAC5BE,EAAUqF,aAAa5H,EAAM0C,EAAG1C,EAAM2C,GACtC2K,EAAW/K,UAAUC,QAAQC,WAAWF,GACxC,IAAMZ,EAAYhD,KAAKC,WAAWgD,MAAMC,OAAOC,MAAQ,GAAKnD,KAAKC,WAAWgD,MAAMC,OAAOE,IACnFwL,EAAWjN,EAAI0B,WAAWsL,EAAY,MAAO,CAC/CrL,KAAK,GAAD,OAAKN,EAAL,YAAkBR,GACtBuJ,MAAO,UAGL8C,EAAsB7O,KAAKgJ,IAAItF,qBACrCmL,EAAmB5F,aAAajJ,KAAK+M,gBAAiB,GACtD6B,EAAShL,UAAUC,QAAQC,WAAW+K,GAEtC,IAAMpL,EAAkBzD,KAAKgJ,IAAItF,qBAGjC,OAFAD,EAAeE,SAAS3D,KAAK8M,SAAU9M,KAAK8M,UAC5C8B,EAAShL,UAAUC,QAAQC,WAAWL,GAC/BkL,IAnQf,gCAsQI,SAAmB5N,GAAwB,IAAjB+N,IAAgB,yDAChC5N,EAAQlB,KAAKuE,SAASxD,GACxB+N,EACA5N,EAAM0B,aAAa,aAAc,WAEjC1B,EAAM0B,aAAa,aAAc,YA3Q7C,sBAgRI,SAAS7B,GACL,OAAOf,KAAKkM,YAAY3N,cAAjB,wBAAgDwC,EAAhD,SAjRf,yBAsRI,WACI,IADW,IAAD,OACHf,KAAKiM,aAAaoB,YACrBrN,KAAKiM,aAAaqB,YAAYtN,KAAKiM,aAAaoB,YAEpDrN,KAAKC,WAAW6B,MAAMiN,QAAQ1H,SAAQ,SAAC2H,GAC/B,EAAKC,WAAWD,QA3RhC,wBAgSI,SAAWA,GACP,IAAME,EAAcvN,EAAI0B,WAAWrD,KAAKiM,aAAc,KACtDiD,EAAYtM,aAAa,aAAcoM,EAAOjO,OAC9C,IAAMM,EAAQrB,KAAKoI,mBAAmB4G,EAAOjO,OACvC6C,EAAa5D,KAAKgJ,IAAItF,qBAC5BE,EAAUqF,aAAa5H,EAAM0C,EAAG1C,EAAM2C,GACtCkL,EAAYtL,UAAUC,QAAQC,WAAWF,GACzC,IAAMZ,EAAYhD,KAAKC,WAAWgD,MAAMC,OAAOC,MAAQ,GAAKnD,KAAKC,WAAWgD,MAAMC,OAAOE,IACnF+L,EAAYxN,EAAI0B,WAAW6L,EAAa,MAC1C,CAAC5L,KAAK,GAAD,OAAKN,EAAL,YAAkBgM,EAAOpO,KAAKwB,OAAS2J,MAAO,UAAYiD,EAAOpO,KAAKmL,QACzEtI,EAAkBzD,KAAKgJ,IAAItF,qBAGjC,OAFAD,EAAeE,SAAS3D,KAAK6M,SAAU7M,KAAK8M,UAC5CqC,EAAUvL,UAAUC,QAAQC,WAAWL,GAChCyL,IA7Sf,2BAkTI,SAAc7I,EAAaC,EAAWE,GAClCxG,KAAKiK,eAAe7C,KAAK,CAACf,YAAaA,EAAaC,UAAWA,EAAWE,SAAUA,IAC/ExG,KAAK8J,kBACN9J,KAAKoP,8BArTjB,uCAyTI,WAA6B,IAAD,OAClBC,EAAgBrP,KAAKiK,eAAeqF,aACpBjP,IAAlBgP,IACArP,KAAK8J,kBAAmB,EACxB9J,KAAK+J,iBAAmB,IAAI3D,EAA0BpG,KAAMqP,EAAchJ,YAAagJ,EAAc/I,UAAWtG,KAAKC,WAAWgD,MAAMsM,mBAAqBvP,KAAKiK,eAAeuF,OAAS,IAAI,WACnL,EAAKxF,UAAUtI,gBAQhB,EAAKoI,kBAAmB,EACxB,EAAKsF,4BACDC,EAAc7I,UACd6I,EAAc7I,aAVlB,EAAKjE,WAAW8M,EAAc/I,WAC9B,EAAKwD,kBAAmB,EACxB,EAAKsF,4BACDC,EAAc7I,UACd6I,EAAc7I,kBAnUtC,6BAkVI,SAAgBiJ,GAAkC,IAApBtL,EAAmB,4DAAX9D,EAC9B8D,IAAUwJ,EAAMC,MAChB5N,KAAKC,WAAW6B,MAAM2C,mBAAoB,GACnCN,IAAUwJ,EAAM+B,QAGvB1P,KAAKC,WAAW6B,MAAM2C,mBAAoB,GAF1CzE,KAAKC,WAAW6B,MAAM4C,mBAAoB,GAK9C1E,KAAKC,WAAW6B,MAAMC,cAAe,EACrC/B,KAAK2P,kBAAoBF,EACzBzP,KAAKoN,cA7Vb,8BAgWI,WACIpN,KAAKC,WAAW6B,MAAM2C,mBAAoB,EAC1CzE,KAAKC,WAAW6B,MAAM4C,mBAAoB,EAC1C1E,KAAKC,WAAW6B,MAAMC,cAAe,EACrC/B,KAAK2P,uBAAoBtP,EACzBL,KAAKoN,cArWb,+BA0WI,SAAkBrM,GACd,OAAIf,KAAK2P,mBACE3P,KAAK2P,kBAAkB,CAC1B1P,WAAYD,KAAKC,WACjBW,KAAMgP,EAAiBC,UACvBC,OAAQ/K,EAAmBhE,OA/W3C,8BAsXI,SAAiBgP,EAAWjI,GACxB,OAAI9H,KAAK2P,mBACE3P,KAAK2P,kBAAkB,CAC1B1P,WAAYD,KAAKC,WACjBW,KAAMgP,EAAiBpQ,SACvBwQ,WAAYjL,EAAmBgL,GAC/BE,SAAUlL,EAAmB+C,OA5X7C,kCAmYI,SAAqBoI,EAAQH,EAAWjI,GAChC9H,KAAK2P,mBACL3P,KAAK2P,kBAAkB,CACnB1P,WAAYD,KAAKC,WACjBW,KAAMgP,EAAiBO,aACvBD,OAAQA,EACRF,WAAYjL,EAAmBgL,GAC/BE,SAAUnI,EAAU/C,EAAmB+C,QAAWzH,MA1YlE,uBAiZI,WACQL,KAAKC,WAAW6B,QACZ9B,KAAKC,WAAW6B,MAAM2C,mBAAqBzE,KAAKC,WAAW6B,MAAM4C,mBAAqB1E,KAAKC,WAAW6B,MAAMsO,oBAC5GpQ,KAAK0F,WAAW9C,aAAa,QAAS,uBAEtC5C,KAAK0F,WAAW9C,aAAa,QAAS,YAtZtD,gCA2ZI,SAAmB7B,GACf,IAAIgD,EAAGC,EAQP,OAPIhE,KAAKC,WAAW6B,MAAM4L,cAAgBC,EAAMC,OAC5C7J,EAAI/D,KAAKyM,WAAc1L,EAAQ,EAAKf,KAAK6C,YACzCmB,EAAIhE,KAAKyM,YAAc,EAAInH,KAAKkE,MAAMzI,EAAQ,IAAMf,KAAK8C,eAEzDiB,EAAI/D,KAAKyM,YAAc,EAAI1L,EAAQ,GAAKf,KAAK6C,YAC7CmB,EAAIhE,KAAKyM,WAAcnH,KAAKkE,MAAMzI,EAAQ,GAAMf,KAAK8C,cAElD,CAACiB,EAAGA,EAAGC,EAAGA,OApazB,KAyaMqM,EAAgB,6BAET1O,EAAb,8FAOI,WAAgD,IAA/B2O,EAA8B,4DAAXjQ,EAC5B2I,EAAM1K,SAASiS,gBAAgBF,EAAe,OAMlD,OALIC,IACAtH,EAAIpG,aAAa,QAAS,QAC1BoG,EAAIpG,aAAa,SAAU,QAC3B0N,EAAiBjF,YAAYrC,IAE1BA,IAdf,wBAwBI,SAAkBwH,EAAQzN,EAAM0N,GAC5B,IAAIvI,EAAU5J,SAASiS,gBAAgBF,EAAetN,GAItD,IAAK,IAAI2N,IAHI,QAAT3N,IACA0N,EAAW,cAAgBA,EAAU,MAEnBA,EAClB,GAAIA,EAAWE,eAAeD,GAC1B,IAAgC,IAA5BA,EAAUzO,QAAQ,KAAa,CAC/B,IAAM2O,EAAQF,EAAUG,MAAM,KAC9B3I,EAAQ4I,eAAe,0BAA4BF,EAAM,GAAIA,EAAM,GAAIH,EAAWC,SAElFxI,EAAQtF,aAAa8N,EAAWD,EAAWC,IAKvD,OADAF,EAAOnF,YAAYnD,GACZA,IAxCf,2BA+CI,SAAqBA,GACjBA,EAAQ6I,WAAWzD,YAAYpF,OAhDvC,KC1ba8I,EAAb,WAEI,aAAe,oBACXhR,KAAKmC,QAAU,IAAIqM,MAAM,IAAIyC,KAAK,MAClCjR,KAAK0N,iBAAcrN,EACnBL,KAAK+O,QAAU,GACf/O,KAAKyE,mBAAoB,EACzBzE,KAAK0E,mBAAoB,EACzB1E,KAAK+B,cAAe,EACpB/B,KAAKoQ,qBAAsB,EATnC,4CAYI,SAASrP,EAAOG,GACZlB,KAAKmC,QAAQpB,GAASG,IAb9B,uBAgBI,SAAUH,EAAOH,GACbZ,KAAK+O,QAAQ3H,KAAK,CAACrG,MAAOA,EAAOH,KAAMA,MAjB/C,2BAoBI,WAAoD,IAAtCG,EAAqC,4DAA7BV,EAAWO,EAAkB,4DAAXP,EAIhCL,KAAK+O,QAHJhO,GAAUH,EAGIZ,KAAK+O,QAAQmC,QAAO,SAAClC,GAChC,GAAKA,EAAOpO,MAIL,GAAKG,GAIL,GAAIiO,EAAOpO,OAASA,GAAQG,IAAUiO,EAAOjO,MAChD,OAAO,OAJP,GAAIiO,EAAOpO,OAASA,EAChB,OAAO,OALX,GAAIG,IAAUiO,EAAOjO,MACjB,OAAO,EASf,OAAO,KAdI,KAtB3B,yBAyCI,SAAYoQ,GACR,GAAIA,EAEA,IADA,IAAMC,EAAQD,EAAIE,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAIR,MAAM,SACvDS,EAAO,EAAGA,EAAO,EAAGA,IASzB,IARA,IAAMC,EAAMH,EAAM,EAAIE,GAAMD,QAAQ,OAAO,SAACG,GAGxC,IAFA,IAAMC,EAAYC,SAASF,GACvBG,EAAM,GACD1K,EAAI,EAAGA,EAAIwK,EAAWxK,IAC3B0K,GAAO,IAEX,OAAOA,KAEFC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMC,EAAON,EAAI/M,OAAOoN,EAAG,GACvB1Q,EAAQ,KACC,MAAT2Q,IAEI3Q,EADA2Q,EAAKC,gBAAkBD,EAClB,WAAOA,EAAKE,eAEZ,WAAOF,IAGpB7R,KAAKmC,QAAe,EAAPmP,EAAWM,GAAK1Q,KA/DjD,yBAqEI,WAEI,IADA,IAAIkQ,EAAQ,IAAI5C,MAAM,GAAGyC,KAAK,IACrBK,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CAEjC,IADA,IAAIU,EAAe,EACV/K,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAM/F,EAAQlB,KAAKmC,QAAe,EAAPmP,EAAWrK,GACtC,GAAK/F,EAEE,CACC8Q,EAAe,IACfZ,EAAM,EAAIE,IAASU,EACnBA,EAAe,GAEnB,IAAM7N,EAAQjD,EAAMsD,OAAO,EAAG,GACxBzB,EAAO7B,EAAMsD,OAAO,EAAG,GAEzB4M,EAAM,EAAIE,IADA,MAAVnN,EACmBpB,EAAK+O,cAEL/O,OAXvBiP,IAeJA,EAAe,IACfZ,EAAM,EAAIE,IAASU,EACnBA,EAAe,GAGvB,OAAOZ,EAAMa,KAAK,OAhG1B,2BAmGI,SAAcnC,GACV,IAAM7B,EAAO6B,EAAOtL,OAAO,EAAG,GAAG0N,WAAW,GAAK,GAEjD,OAAO,GADMpC,EAAOtL,OAAO,EAAG,GAAK,GACjByJ,MAtG1B,KCGaN,EAAQ,CACjBC,MAAO,IACP8B,MAAO,KAEEE,EAAmB,CAC5BC,UAAW,YACXrQ,SAAU,WACV2Q,aAAc,gBAELgC,EACA,UADAA,EAEE,YAEF5F,EAAc,CACvBiB,KAAM,OACNd,KAAM,OACNF,MAAO,SAEE4F,EAAc,CACvB5F,MAAO,CAACT,MAAO,eAAgB3J,MAAO,eACtC0N,OAAQ,CAAC/D,MAAO,gBAAiB3J,MAAO,gBACxCiQ,IAAK,CAACtG,MAAO,aAAc3J,MAAO,aAClCkQ,OAAQ,CAACvG,MAAO,gBAAiB3J,MAAO,iBAM/BmQ,EAAqB,2DACrBC,EAAqB,kBAErBC,EAAb,WAEI,WAAYvK,GAAsB,IAAD,OAAZjF,EAAY,uDAAJ,GACzB,GAD6B,qBACxBiF,EACD,MAAM,IAAI1H,MAAM,wBAA0B0H,GAE9ClI,KAAKkI,QAAUA,EACf,IAAIwK,EAAe,CACfC,SAAU,QACVjF,YAAaC,EAAMC,MACnB/H,MAAO,CACHgG,SAAU,UACVkC,iBAAiB,EACjBjC,WAAYS,EAAYG,KACxBM,YAAa,EACblH,eAAgBsM,EAAY5F,MAC5BxG,aAAcoM,EAAY5F,MAC1BoG,WAAYR,EAAY5F,MACxBqG,YAAaT,EAAY5F,OAE7BrC,YAAY,EACZoF,kBAAmB,IACnBrM,OAAQ,CACJE,IAAK,gDACLI,KAAM,GACNL,OAAO,IAGfnD,KAAKiD,MAAQ,GACb6P,OAAOC,OAAO/S,KAAKiD,MAAOyP,GAC1BI,OAAOC,OAAO/S,KAAKiD,MAAOA,GAC1BjD,KAAKiD,MAAMC,OAASwP,EAAaxP,OACjClD,KAAKiD,MAAM4C,MAAQ6M,EAAa7M,MAC5B5C,EAAMC,QACN4P,OAAOC,OAAO/S,KAAKiD,MAAMC,OAAQD,EAAMC,QAEvCD,EAAM4C,OACNiN,OAAOC,OAAO/S,KAAKiD,MAAM4C,MAAO5C,EAAM4C,OAEvC7F,KAAKiD,MAAM4C,MAAM+M,aAAeR,EAAY5F,QAC3CtD,QAAQC,KAAK,kFACbnJ,KAAKiD,MAAM4C,MAAMC,eAAiB9F,KAAKiD,MAAM4C,MAAM+M,YAEpD5S,KAAKiD,MAAM4C,MAAMgN,cAAgBT,EAAY5F,QAC5CtD,QAAQC,KAAK,iFACbnJ,KAAKiD,MAAM4C,MAAMG,aAAehG,KAAKiD,MAAM4C,MAAMgN,aAEjD7S,KAAKiD,MAAM4C,MAAMmH,cACjBhN,KAAKkI,QAAQrC,MAAMwG,OAAUrM,KAAKkI,QAAQ8K,YAAchT,KAAKiD,MAAM4C,MAAMmH,YAAe,MAE5FhN,KAAK8B,MAAQ,IAAIkP,EACjBhR,KAAK8B,MAAM4L,YAAc1N,KAAKiD,MAAMyK,YAEpC1N,KAAKJ,KAAO,IAAIgK,EAAe5J,MAAM,SAACJ,GACN,UAAxB,EAAKqD,MAAM0P,SACX,EAAK7Q,MAAMmR,YAAYV,GACQ,UAAxB,EAAKtP,MAAM0P,eAAgDtS,IAAxB,EAAK4C,MAAM0P,SACrD,EAAK7Q,MAAMmR,YAAYT,GAEvB,EAAK1Q,MAAMmR,YAAY,EAAKhQ,MAAM0P,UAEtC/S,EAAKqN,YA7DjB,4CAmEI,SAAS6C,EAAQ5O,GACblB,KAAK8B,MAAMO,SAASrC,KAAK8B,MAAMoR,cAAcpD,GAAS5O,GACtDlB,KAAKJ,KAAK2C,WAAWvC,KAAK8B,MAAMK,WArExC,sBAwEI,SAAS2N,GACL,OAAO9P,KAAK8B,MAAMK,QAAQnC,KAAK8B,MAAMoR,cAAcpD,MAzE3D,uBA4EI,SAAUE,EAAYC,GAA4B,IAAD,OAAjBkD,IAAiB,yDAC7C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMpR,EAAc,EAAKJ,MAAMK,QAAQC,MAAM,GACvCmR,EAAY,EAAKhP,SAASyL,GAC5BuD,GAGA,EAAKzR,MAAMK,QAAQ,EAAKL,MAAMoR,cAAclD,IAAe,KAC3D,EAAKlO,MAAMK,QAAQ,EAAKL,MAAMoR,cAAcjD,IAAasD,EACrDJ,EACA,EAAKvT,KAAK0C,cAAcJ,EAAa,EAAKJ,MAAMK,SAAS,WACrDkR,QAGJ,EAAKzT,KAAK2C,WAAW,EAAKT,MAAMK,SAChCkR,MAVJC,EAAO,sBAAwBtD,QAjF/C,yBAiGI,SAAYmB,GAAuB,IAAD,OAAjBgC,IAAiB,yDAC9B,OAAO,IAAIC,SAAQ,SAACC,GACJ,UAARlC,EACAA,EAAMoB,EACS,UAARpB,IACPA,EAAMqB,GAEV,IAAMgB,EAAa,EAAK1R,MAAM2R,cAI9B,GAHiBtC,EAAIN,MAAM,KACI,KAET2C,EAAY,CAC9B,IAAMtR,EAAc,EAAKJ,MAAMK,QAAQC,MAAM,GAC7C,EAAKN,MAAMmR,YAAY9B,GACnBgC,EACA,EAAKvT,KAAK0C,cAAcJ,EAAa,EAAKJ,MAAMK,QAAQC,MAAM,IAAI,WAC9DiR,QAGJ,EAAKzT,KAAK2C,WAAW,EAAKT,MAAMK,SAChCkR,UAGJA,SAxHhB,yBA6HI,WACI,OAAOrT,KAAK8B,MAAM2R,gBA9H1B,uBAiII,SAAU3D,EAAQlP,GACTA,GACDsI,QAAQwK,MAAM,8BAAgC9S,GAElDZ,KAAK8B,MAAMmE,UAAUjG,KAAK8B,MAAMoR,cAAcpD,GAASlP,GACvDZ,KAAKJ,KAAKsG,gBAtIlB,wBAyII,WAAkD,IAAvC4J,EAAsC,4DAA7BzP,EAAWO,EAAkB,4DAAXP,EAC5BsT,EAAe,GASrB,OARA3T,KAAK8B,MAAMiN,QAAQ1H,SAAQ,SAAC2H,GACxB,IAAM4E,EAAe7O,EAAmBiK,EAAOjO,SAC1C+O,KAAYlP,GAAQA,IAASoO,EAAOpO,QACpCA,GAAQkP,IAAW8D,GACpBhT,IAASoO,EAAOpO,MAAQkP,IAAW8D,IACnCD,EAAavM,KAAK,CAAC0I,OAAQ/K,EAAmBiK,EAAOjO,OAAQH,KAAMoO,EAAOpO,UAG3E+S,IAnJf,2BAsJI,WAAqD,IAAvC7D,EAAsC,4DAA7BzP,EAAWO,EAAkB,4DAAXP,EAC/BU,EAAQ+O,EAAS9P,KAAK8B,MAAMoR,cAAcpD,QAAUzP,EAC1DL,KAAK8B,MAAMiE,cAAchF,EAAOH,GAChCZ,KAAKJ,KAAKsG,gBAzJlB,4BA4JI,SAAe/B,GAEX,OADAnE,KAAK8B,MAAM4L,YAAcvJ,EAClBnE,KAAKJ,KAAKqN,WA9JzB,4BAiKI,WACI,OAAOjN,KAAK8B,MAAM4L,cAlK1B,qBAqKI,WACI1N,KAAKJ,KAAKkL,UACV9K,KAAKJ,UAAOS,EACZL,KAAK8B,WAAQzB,EACTL,KAAK6T,uBACL7T,KAAKkI,QAAQvH,oBAAoB,cAAeX,KAAK6T,sBACrD7T,KAAKkI,QAAQvH,oBAAoB,UAAWX,KAAK6T,sBACjD7T,KAAKkI,QAAQvH,oBAAoB,WAAYX,KAAK6T,yBA5K9D,6BAgLI,SAAgBpE,GAAkC,IAApBtL,EAAmB,4DAAX9D,EAClCL,KAAKJ,KAAKkU,gBAAgBrE,EAActL,KAjLhD,8BAoLI,WACInE,KAAKJ,KAAKmU,qBArLlB,gCA0LI,SAAmBtE,GACfvG,QAAQC,KAAK,gEACbnJ,KAAKgU,oBAAmB,SAAUC,GAC1BA,EAAMrT,OAASuR,GACf1C,EAAawE,QA9L7B,iCAqMI,WACIjU,KAAKkU,wBAtMb,gCAyMI,SAAmBzE,GACXzP,KAAK6T,qBACL3K,QAAQC,KAAK,0CAGjBnJ,KAAK6T,qBAAuB,SAAU5P,GAClC,IAAMlD,EAAQkD,EAAEG,OAAOC,aAAa,cACrB,gBAAXJ,EAAErD,KAKN6O,EAAa,CACTxP,WAAYD,KACZY,KAAmB,IAAbqD,EAAEC,OAAeiO,EAA+BA,EACtDrC,OAAQ/K,EAAmBhE,KAN3BkD,EAAEU,kBASV3E,KAAKkI,QAAQ1G,iBAAiB,cAAexB,KAAK6T,sBAClD7T,KAAKkI,QAAQ1G,iBAAiB,UAAWxB,KAAK6T,sBAC9C7T,KAAKkI,QAAQ1G,iBAAiB,WAAYxB,KAAK6T,sBAC/C7T,KAAK8B,MAAMsO,qBAAsB,EACjCpQ,KAAKJ,KAAKwN,eA/NlB,iCAkOI,WACIpN,KAAKkI,QAAQvH,oBAAoB,cAAeX,KAAK6T,sBACrD7T,KAAKkI,QAAQvH,oBAAoB,UAAWX,KAAK6T,sBACjD7T,KAAKkI,QAAQvH,oBAAoB,WAAYX,KAAK6T,sBAClD7T,KAAK6T,0BAAuBxT,EAC5BL,KAAK8B,MAAMsO,qBAAsB,EACjCpQ,KAAKJ,KAAKwN,gBAxOlB,K,gBCxCe,MAA0B,qCCA1B,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,mCCA1B,OAA0B,oCCc1B+G,GARD,CACVC,QAAS,IAAIC,MAAMD,GACnBE,MAAO,IAAID,MAAMC,GACjBC,KAAM,IAAIF,MAAME,GAChBC,OAAQ,IAAIH,MAAMI,GAClBC,QAAS,IAAIL,MAAMK,KCXR,OAA0B,sD,UCenCC,GAAI,SAACC,GACT,IAAMC,EAAWvW,SAASwW,iBAAiBF,GAC3C,MAAO,CACLG,SAAU,SAAClJ,GACTgJ,GACEA,EAASxN,SAAQ,SAACa,GAAD,OAAaA,EAAQ1J,UAAUmE,IAAIkJ,OAExDmJ,YAAa,SAACnJ,GACZgJ,GACEA,EAASxN,SAAQ,SAACa,GAAD,OAAaA,EAAQ1J,UAAUyW,OAAOpJ,OAE3DqJ,KAAM,SAACA,GACLL,GAAYK,IAASL,EAAS,GAAGM,UAAYD,IAE/CE,KAAM,SAACA,GACLP,GAAYO,IAASP,EAAS,GAAG1G,YAAciH,MAKxCC,GAAa,SAACC,GACzBA,EAAUA,GAAW,CACnBC,gBAAgB,GAElB,IACIC,EAYAC,EAbAC,EAAO,IAAIC,IAIXC,EAAS,IAAIC,OAAO,4BACpBC,EAAS,IAAID,OAAO,4BACpBE,EAAe,GACfC,GAAe,EACfxN,EAAO,CAAEyN,MAAO,IAAQC,MAAO,IAAQC,KAAM,IAAMC,KAAM,GACzDC,EAAc,QACdC,EAAiB,KACjBC,GAAkB,EAClBC,EAAgBlY,SAAS2M,eAAe,cAEtCwL,EAAYtC,GAclB,SAASuC,EAAOC,EAAKC,GACnB1N,QAAQ2N,IAAI,QAAUF,IAErBC,GAAShB,GAAQkB,YAAYH,GAMhC,SAASI,IACP,IAAIC,EAAS,WACRjB,EAAakB,aAENlB,EAAamB,YAGvBF,GAAU,SAFVA,GAAU,YAFVA,GAAU,aAORjB,EAAaoB,SACfH,EAASjB,EAAaoB,OAClBpB,EAAaqB,OAASpB,IACxBgB,IACuC,SAApCjB,EAAaqB,MAAM5S,OAAO,EAAG,GAAgB,IAAM,YACpDuR,EAAaqB,QAGnBZ,EAAcrI,YAAc6I,EAC5BrC,GAAE,SAASO,KAAKa,EAAaqB,OAG/B,SAASC,EAAalT,EAAOyE,GAEvBJ,EAAKC,UAAY,GAAKtE,IAAUqE,EAAK8O,aACvC1O,EAAItD,KAAKqE,IAAI,EAAGf,EAAIJ,EAAKC,UAAY8O,KAAKC,QAI5C,IAAIxY,EAAKmF,IAAUkS,EAAc,SAAW,SACxCoB,EAAMnS,KAAKoS,KAAK9O,EAAI,KACpBC,EAAMvD,KAAKkE,MAAMiO,EAAM,IAC3BA,GAAa,GAAN5O,EACP,IAAI8O,EAAQrS,KAAKkE,MAAMX,EAAM,IAEzBuC,EACFuM,EAAQ,KAAO,KAFjB9O,GAAe,GAAR8O,IAEqBvV,OAAO,GAAK,KAAO,IAAMqV,GAAKrV,OAAO,GAEjEuS,GAAE3V,GAAIoW,KAAKhK,GAGb,SAASwM,IACPP,EAAa,QAAS7O,EAAKyN,OAC3BoB,EAAa,QAAS7O,EAAK0N,OACvB1N,EAAK8O,aAAejB,GACtB1B,GAAE,UAAUI,SAAS,eACrBJ,GAAE,UAAUK,YAAY,gBACfxM,EAAK8O,aACd3C,GAAE,UAAUI,SAAS,eACrBJ,GAAE,UAAUK,YAAY,gBAI5B,SAAS6C,IACPD,IACA,IAAIhP,GACmB,UAApBJ,EAAK8O,WAAyB9O,EAAKyN,MAAQzN,EAAK0N,OACjD1N,EAAKC,UACL8O,KAAKC,MAEPlB,EAAiBwB,WAAWD,EADJjP,EAAI,IAAQ,GAgCtC,SAASmP,IAIP,IAHA,IAAIC,EAAQ,GACRC,EAAUvC,EAAKuC,QAAQ,CAAEC,SAAS,IAE7BjR,EAAI,EAAGA,EAAIgR,EAAQzI,SAAUvI,EAAG,CACvC,IAAIsN,EAAO0D,EAAQhR,GACnB+Q,GACE,IAAMzD,EAAK9F,KAAO8F,EAAK3V,IAAM2V,EAAK4D,UAAY5D,EAAK4D,UAAY,IAGnE,OAAOH,EAGT,SAASI,ICpLmB,IAACC,GD2I7B,WAKE,GAJuB,OAAnB/B,IACFgC,aAAahC,GACbA,EAAiB,MAEf9N,EAAKC,UAAY,EAAG,CACtB,IAAI8P,EAAUhB,KAAKC,MAAQhP,EAAKC,UAChCD,EAAKC,UAAY,KACO,UAApBD,EAAK8O,WACP9O,EAAKyN,MAAQ3Q,KAAKqE,IAAI,EAAGnB,EAAKyN,MAAQsC,GAEtC/P,EAAK0N,MAAQ5Q,KAAKqE,IAAI,EAAGnB,EAAK0N,MAAQqC,IA+B1CC,GACA7D,GAAE,QAAQO,MCtLiBmD,EDsLG3C,EAAK+C,QClLrCJ,EAAIA,EAAEhH,QAAQ,SAAU,uCAErBA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UATF,IDsLbmE,EAAMvC,YAAYyC,EAAKvE,OAAO,GAC9ByG,IACA,IAAIc,EAAuB,MAAhBhD,EAAKgD,OAAiB,QAAU,QACtChD,EAAKiD,cACRjC,EAAO,0BAA4BqB,KAC/BW,IAASrC,IACPf,EAAQC,iBACVmB,EAAO,0BAA4BqB,IAAajC,GAChDU,EAAcrI,YAAc,GAC5BuI,EAAO,OAAQZ,IAEbtN,GAAQA,EAAKyN,MACfS,EACE,OACGlO,EAAKoQ,MAAQ,SAAWpQ,EAAKoQ,MAAQ,IACtC,UACApQ,EAAKyN,MACL,SACAzN,EAAK2N,KACL,UACA3N,EAAK0N,MACL,SACA1N,EAAK4N,MAGTM,EAAO,OAASlO,EAAKoQ,MAAQ,SAAWpQ,EAAKoQ,MAAQ,KAEvDrC,GAAkB,GAEhBb,EAAKuC,UAAUzI,QAAU,IAAMhH,EAAKoQ,QAAUpQ,EAAKqQ,QAxDrC,MAAhBnD,EAAKgD,QACPlQ,EAAKyN,OAASzN,EAAK2N,KACnB3N,EAAK8O,WAAa,UAElB9O,EAAK0N,OAAS1N,EAAK4N,KACnB5N,EAAK8O,WAAa,SAEpB9O,EAAKC,UAAY8O,KAAKC,MACtBK,MA7GFiB,aAAY,WACNrD,GAIAC,EAAKiD,cACPlD,GAAsB,EACtBsD,MAAM,aACNpE,GAAE,SAASO,KAAK,QAEjB,KAOHwB,EAAO,OAkJPZ,EAAOkD,UAAY,SAAU/E,GAC3B,IAAIgF,EAWJ,GAREA,EADEhF,GAA0B,kBAAVA,EACXA,EAAMiF,KAENjF,EAGT/K,QAAQ2N,IAAI,WAAaoC,GAId,UAATA,GACS,YAATA,GACuB,gBAAvBA,EAAKzU,OAAO,EAAG,IAHjB,CAQIgS,EAAcrI,cAChBqI,EAAcrI,aAAe,MAE/B,IAAIgL,EAAaF,EAAKG,MAAM,sCACxBD,IACF3C,EAAcrI,YAAcgL,EAAW,MAI3CvD,EAAOoD,UAAY,SAAU/E,GAC3B,IAAIgF,EAQJ,GAPIhF,GAA0B,kBAAVA,GAClBgF,EAAOhF,EAAMiF,KACbhQ,QAAQ2N,IAAIoC,IAEZA,EAAOhF,EAET/K,QAAQ2N,IAAI,UAAYoC,GACX,UAATA,EACFlD,EAAakB,cAAe,OACvB,GAAa,YAATgC,EACTlD,EAAamB,aAAc,MACtB,CACL,IAAIkC,EAAQH,EAAKG,MAAM,+CAEvB,GAAIA,EAAO,CACT7C,GAAkB,EAClB,IAAIhC,EAAOmB,EAAKnB,KAAK,CACnB9F,KAAM2K,EAAM,GACZxa,GAAIwa,EAAM,GACVjB,UAAWiB,EAAM,KAEf7E,IACF8E,EAAcD,EAAM,GAAIA,EAAM,IAC1B7E,EAAK+E,MAAMC,SAAS,KACtB9C,EAAUrC,QAAQoF,OAElB/C,EAAUlC,KAAKiF,QAGnBpB,IACI9C,EAAQC,iBACVmB,EAAO,OAAQZ,GACfU,EAAcrI,YAAc,SAIpBiL,EAAQH,EAAKG,MAAM,0CAC7BrD,EAAaoB,OAAS,UAAYiC,EAAM,GAAK,SAAWA,EAAM,IAIhE,GAAKA,EAAQH,EAAKG,MAAM,iCAAmC,CACzD,IAAIhC,EAAQ1F,SAAS0H,EAAM,KAAuB,MAAhB1D,EAAKgD,OAAiB,GAAK,GAE5C,OAAbU,EAAM,GACRrD,EAAaqB,OAASA,EAAQ,KAAOqC,QAAQ,GAEvB,SAAbL,EAAM,KACfrD,EAAaqB,MAAQ,IAAM9R,KAAKC,IAAI6R,KAS1CL,KAEF,IAAMsC,EAAgB,SAAC5K,EAAM7P,GAC3B4W,EAAMzP,mBAAc1F,EAAW+R,EAAYtC,QAC3C0F,EAAMvP,UAAUwI,EAAM2D,EAAYtC,QAClC0F,EAAMvP,UAAUrH,EAAIwT,EAAYtC,SAuB5B7M,EAAQ,CACZ0P,SAAU,QACVjF,YAAaC,EAAMC,MACnB/H,MAAO,CACLgG,SAAU,UACVkC,iBAAiB,EACjBjC,WAAYS,EAAYG,KACxBM,YAAa,EACblH,eAAgBsM,EAAY5F,MAC5BxG,aAAcoM,EAAY5F,OAE5BrC,YAAY,EACZoF,kBAAmB,IACnBrM,OAAQ,CACNE,IAAKsW,GACLlW,KAAM,GACNL,OAAO,IAcX,OAVAqS,EAAQ,IAAI/C,EAAWnU,SAAS2M,eAAe,SAAUhI,IACnD6Q,iBAAgB,SAACG,GACrB,OAAQA,EAAMrT,MACZ,KAAKgP,EAAiBC,UACpB,OAAO,EACT,KAAKD,EAAiBpQ,SACpB,OA/CO,SAAUma,EAAQvV,GAC7B,IAAImQ,EAAOmB,EAAKnB,KAAK,CACnB9F,KAAMkL,EACN/a,GAAIwF,IAaN,OAVImQ,IACF8E,EAAcM,EAAQvV,GAClBmQ,EAAK+E,MAAMC,SAAS,KACtB9C,EAAUrC,QAAQoF,OAElB/C,EAAUlC,KAAKiF,QAKN,OAATjF,IACJ6D,KACO,GA6BIwB,CAAO3F,EAAMjE,WAAYiE,EAAMhE,UACxC,KAAKL,EAAiBO,iBAEvBxC,EAAMC,OACF,CACLiM,KAAM,WACJ,IAAInM,EACF8H,EAAMsE,kBAAoBnM,EAAMC,MAAQD,EAAM+B,MAAQ/B,EAAMC,MAC9D4H,EAAMuE,eAAerM,IAEvBjO,MAAO,WACLiW,EAAKjW,QACLiX,EAAO,mCAEP,GAAKsD,cAAc,GACnBtD,EAAO,uCAETuD,QAAS,SAACxB,GACR/C,EAAKwE,SAASzB,IAEhB0B,eAAgB,SAAChW,GACfkS,EAAclS,EACdqR,EAAM9H,YAAY2I,IAEpB2D,cAAe,SAACI,GACd,IAAaC,EAETD,EAAQ,IACVA,EAAQ,GAENA,EAAQ,KACVA,EAAQ,IAGV5R,EAAK8R,MAAQF,EAIX5R,EAAKoQ,MADHwB,EAAQ,EACG,IACJA,EAAQ,GACJ,IACJA,EAAQ,GACJ,IAGA,GAGf1D,EAAO,oCAAsC0D,GAI7CC,EAAW/U,KAAKiV,MAAc,KAARH,EAAe,GAIrC1D,EAAO,kDAFGpR,KAAKiV,OAAe,GAATH,EAAe,KAGpC1D,EAAO,gDAAkD2D,IAE3DG,QAAS,SAACC,EAAUC,GAClBlS,EAAO,CACLyN,MAAkB,IAAXwE,EACPvE,MAAkB,IAAXuE,EACPtE,KAAY,IAANuE,EACNtE,KAAY,IAANsE,IAGVC,SAAU,SAAC/B,GACTpQ,EAAO,CAAEoQ,MAAOA,IAElBgC,SAAU,SAAC/B,GACTrQ,EAAO,CAAEqQ,MAAOA,IAElBgC,YAAa,SAACC,GACZpE,EAAO,iCAAmCoE,IAE5CC,kBAAmB,SAACnK,GAClB8F,EAAO,uCAAyC9F,IAElDoK,gBAAiB,SAACC,GAChBjF,EAAeiF,EACflE,KAEFmE,MAAO,WACLxE,EAAO,cACPA,EAAO,WACPX,EAAamB,aAAc,EAC3BnB,EAAaoB,OAAS,KACtBJ,IACAqB,IACA3C,GAAsB,GAGxB0F,KAAM,WACJ,OAAI5E,IACJb,EAAKyF,OACLzF,EAAKyF,OACLpF,EAAaoB,OAAS,KACtBJ,IACAqB,KACO,IAGTgD,OAAQ,WAAqB,IAApB7U,EAAmB,uDAAR,IACdU,EAAI,EACJoU,EAAI3F,EAAKuC,UACbvC,EAAKjW,QACL+V,EAAMvC,YAAYyC,EAAKvE,OACvB,IAAMmK,EAAS,WACTrU,EAAIoU,EAAE7L,QACRkG,EAAKnB,KAAK8G,EAAEpU,IACZuO,EAAMvC,YAAYyC,EAAKvE,QAEvBoK,cAAcC,GAEhBvU,GAAK,GAEDuU,EAAI1C,YAAYwC,EAAQ/U,ME/SrBkV,OAzKf,WACE,MAAgBC,IAAMC,SAAS,CAC7BC,QAAS,CACPC,aAAc,iBACd9c,SAAU,YACVyJ,KAAM,GACNxJ,GAAI,KAEN8c,QAAS,CACPD,aAAc,iBACd9c,SAAU,WACVyJ,KAAM,GACNxJ,GAAI,OAXD8C,EAAP,oBAcA,EAAkC4Z,IAAMC,SAAS,CAC/CI,WAAW,EACXC,YAAY,EACZtO,YAAa,UAHf,mBAAOuO,EAAP,KAAkBC,EAAlB,KAMMxG,EAAOgG,IAAMS,SAUnBT,IAAMU,WAAU,WACd1G,EAAK2G,QAAUhH,OACd,IACH,MAAsCqG,IAAMC,SAAS,CACnD3c,GAAI,EACJ+D,KAAM,UAFR,mBAAOuZ,EAAP,KAAoBC,EAApB,KAKA,OACE,sBAAK7d,UAAU,yBAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,cAAC,EAAD,CACEI,KAC4B,UAA1Bmd,EAAUvO,YAA0B5L,EAAMga,QAAUha,EAAM8Z,UAG9D,qBAAKld,UAAU,mBAAf,SACE,qBAAKM,GAAG,YAEV,cAAC,EAAD,CACEF,KAC4B,UAA1Bmd,EAAUvO,YAA0B5L,EAAM8Z,QAAU9Z,EAAMga,aAIhE,sBAAKpd,UAAU,mCAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAMM,GAAG,OAAT,eADF,IAC2B,oCAAOsd,EAAYvZ,KAAnB,OACzB,sBAAKrE,UAAU,eAAf,UACE,sBACEA,UAAS,yBACY,IAAnB4d,EAAYtd,GAAW,qBAAuB,IAEhDwd,MAAM,SACN7d,QAAS,kBACP4d,EAAe,CAAEvd,GAAI,EAAG+D,KAAM,sBANlC,kBAWA,sBACErE,UAAS,yBACY,IAAnB4d,EAAYtd,GAAW,qBAAuB,IAEhDwd,MAAM,SACN7d,QAAS,kBAAM4d,EAAe,CAAEvd,GAAI,EAAG+D,KAAM,eAL/C,yBASA,sBACErE,UAAS,yBACY,IAAnB4d,EAAYtd,GAAW,qBAAuB,IAEhDwd,MAAM,SACN7d,QAAS,kBAAM4d,EAAe,CAAEvd,GAAI,EAAG+D,KAAM,mBAL/C,iCAWJ,qBAAKrE,UAAU,kBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBACEA,UAAS,+BACY,IAAnB4d,EAAYtd,GAAW,aAAe,IAExCA,GAAG,MAJL,8BAQA,sBACEN,UAAS,oBACY,IAAnB4d,EAAYtd,GAAW,aAAe,IAExCA,GAAG,eAJL,UAME,gCACG8C,EAAMga,QAAQ/c,SADjB,IAC2B,sBAAML,UAAU,QAAhB,eAD3B,iBAEiBoD,EAAM8Z,QAAQ7c,SAC7B,sBAAML,UAAU,QAAhB,eACA,sBAAMM,GAAG,SAAT,wBAEF,8BACE,uBAAON,UAAU,OAAjB,iCAEF,qBAAKA,UAAU,cAAf,SACE,gCACE,yBAAQC,QAAS,kBAAM+W,EAAK2G,QAAQjB,OAAO,MAA3C,UACG,IADH,OAEO,OAEP,yBAAQzc,QAAS,kBAAM+W,EAAK2G,QAAQjB,OAAO,MAA3C,UACG,IADH,WAEW,OAEX,yBAAQzc,QAAS,kBAAM+W,EAAK2G,QAAQjB,OAAO,MAA3C,UACG,IADH,OAEO,eAKb,qBACE1c,UAAS,mBAAiC,IAAnB4d,EAAYtd,GAAW,aAAe,IAC7DA,GAAG,aAFL,6BAQJ,sBAAKN,UAAU,gBAAgB+d,SAAU,SAACxY,GAAD,OAAOA,EAAEU,kBAAlD,UACE,sBACEhG,QAAS,kBAAM+W,EAAK2G,QAAQlB,QAC5Bzc,UAAU,iBACV8d,MAAM,OAHR,kBAOA,sBAAM7d,QA9HD,WACX+W,EAAK2G,QAAQxC,OACbqC,EAAa,2BACRD,GADO,IAEVvO,YAAuC,UAA1BuO,EAAUvO,YAA0B,QAAU,YA0HvD,SACE,qBACEvB,MAAM,KACNE,OAAO,KACPqQ,oBAAoB,gBACpBC,QAAQ,YAJV,SAME,sBACEC,EAAE,+WACF3L,KAAK,qBAIX,sBAAMvS,UAAU,iBAAhB,6BACA,sBAAMA,UAAU,iBAAhB,mC,YC5IKme,OAxBf,WACE,IAAMrH,EAAQkG,IAAMS,SAKpB,OAHAT,IAAMU,WAAU,WACd5G,EAAM6G,QAAU,IAAI5J,EAAWnU,SAAS2M,eAAe,aAGvD,sBAAKvM,UAAU,yBAAf,UACE,qBAAKA,UAAU,yCAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKM,GAAG,cAGZ,sBAAKN,UAAU,qCAAf,UACE,oBAAIA,UAAU,cAAd,+BACA,gCACE,wBAAQA,UAAU,4BAAlB,mBACA,wBAAQA,UAAU,8BAAlB,6BCeKoe,I,iBAxBb,WAAYC,GAAe,yBAP3B/E,MAAQ,GAQN,IAAIgF,EAASD,EAAalM,MAAM,KAChC7Q,KAAKid,SAAWD,EAAO,GACvBhd,KAAKmR,IAAM6L,EAAO,GAClBhd,KAAKgY,MAAQgF,EAAO,GAAGnM,MAAM,OAC7B7Q,KAAKkd,OAASF,EAAO,GACrBhd,KAAKmd,gBAAkBH,EAAO,GAC9Bhd,KAAKod,WAAaJ,EAAO,GACzBhd,KAAKqd,QAAUL,EAAO,GACtBhd,KAAKsd,OAASN,EAAO,GACrBhd,KAAKud,OAASP,EAAO,GACrBhd,KAAKwd,YAAc,E,kDAGrB,WACE,IAAIpE,EAAQpZ,KAAKgY,MAAMhY,KAAKwd,aAAapE,MACvC,qCAEF,MAAO,CAAE3K,KAAM2K,EAAM,GAAIxa,GAAIwa,EAAM,GAAIjB,UAAWiB,EAAM,M,sBAE1D,WACE,OAAOpZ,KAAKwd,cAAgBxd,KAAKgY,MAAMxI,W,MCjC5B,OAA0B,+BCA1B,OAA0B,+BCyN1BiO,OA1Mf,WACE,IAAMjI,EAAQkG,IAAMS,SACpB,EAA0BT,IAAMC,SAAS,aAAzC,mBAAO+B,EAAP,KAAcC,EAAd,KACMC,EAAS,IAAId,GACjB,oJAEF,EAAgCpB,IAAMC,UAAS,GAA/C,mBAAOkC,EAAP,KAAiBC,EAAjB,KACMC,EAAQpI,IAAMiI,EAAOzM,KAC3B4M,EAAMxJ,KAAKqJ,EAAOI,kBAClBJ,EAAOJ,aAAe,EACtB,MAAsB9B,IAAMC,SAASoC,EAAMrF,QAApCrC,EAAP,oBACA,EAAwBqF,IAAMC,SAAS,IAAvC,mBAAOpH,EAAP,KAAa0J,EAAb,KACM5E,EAAgB,SAAC5K,EAAM7P,GAC3B4W,EAAM6G,QAAQtW,mBAAc1F,EAAW+R,EAAYtC,QACnD0F,EAAM6G,QAAQpW,UAAUwI,EAAM2D,EAAYtC,QAC1C0F,EAAM6G,QAAQpW,UAAUrH,EAAIwT,EAAYtC,SAyCtC7M,EAAQ,CACVgQ,YAAa,QACbvF,YAAaC,EAAMC,MACnB/H,MAAO,CACLgG,SAAU,UACVkC,iBAAiB,EACjBjC,WAAYS,EAAYG,KACxBM,YAAa,EACblH,eAAgBsM,EAAY5F,MAC5BxG,aAAcoM,EAAY5F,OAE5BrC,YAAY,EACZoF,kBAAmB,IACnBrM,OAAQ,CACNE,IAAKsW,GACLlW,KAAM,GACNL,OAAO,IAgCX,OA5BAuY,IAAMU,WAAU,WAed,OAdA5G,EAAM6G,QAAU,IAAI5J,EAAWnU,SAAS2M,eAAe,SAAUhI,GACjEuS,EAAM6G,QAAQtC,eAAe1D,GAC7Bb,EAAM6G,QAAQpJ,YAAY8K,EAAM5M,OAChCqE,EAAM6G,QAAQvI,iBAAgB,SAACG,GAC7B,OAAQA,EAAMrT,MACZ,KAAKgP,EAAiBC,UAEpB,OAAO,EACT,KAAKD,EAAiBpQ,SACpB,OArEO,SAACma,EAAQuE,GACtB,IAAI3J,EAAOwJ,EAAMxJ,KAAK,CACpB9F,KAAMkL,EACN/a,GAAIsf,IAEN,IAAI3J,EAwBF,OAAO,EAvBP,IAAI4J,EAAQP,EAAOI,iBAEnB,GADAC,EAAQ1J,GACJ4J,EAAM1P,KAAO0P,EAAMvf,KAAO+a,EAASuE,EAkBrC,OAFAP,EAAS,aACTI,EAAM5C,QACC,EAjBP9B,EAAc8E,EAAM1P,KAAM0P,EAAMvf,IAChCgf,EAAOJ,aAAe,EACtBG,EAAS,WACTnI,EAAM6G,QAAQpJ,YAAY8K,EAAM5M,OAAO,GAElCyM,EAAOC,YACV/F,YAAW,WACT,IAAIvD,EAAOwJ,EAAMxJ,KAAKqJ,EAAOI,kBAC7BxI,EAAM6G,QAAQpJ,YAAY8K,EAAM5M,OAAO,GACvCkI,EAAc9E,EAAK9F,KAAM8F,EAAK3V,IAC9Bgf,EAAOJ,aAAe,IACrB,KAELM,EAAYF,EAAOC,YA+CVjE,CAAO3F,EAAMjE,WAAYiE,EAAMhE,UACxC,KAAKL,EAAiBO,iBAEvBkG,GAEI,WACLb,EAAM6G,QAAQvR,aAEf,IAWD,sBAAKpM,UAAU,2BAAf,UACE,qBAAKA,UAAU,yCAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKM,GAAG,cAGZ,sBAAKN,UAAU,oFAAf,UACE,sBACEA,UAAS,sBACG,YAAVgf,EAAsB,OAAmB,cAAVA,EAAwB,MAAQ,IAFnE,UAKa,YAAVA,GACC,qCACE,sBAAMhf,UAAU,iBAAhB,kBACA,gCACE,yCAAU6V,EAAK6J,IAAf,iBACA,gCAAQP,EAAW,UAAY,uBAI1B,cAAVH,GACC,qCACE,sBAAMhf,UAAU,iBAAhB,mBACA,gCACE,yCAAU6V,EAAK6J,IAAf,iBACA,oDAIK,cAAVV,GACC,qCACE,qBACEW,IAAqB,MAAhBhI,EAAsBiI,GAAKC,GAChCC,IAAG,UAAKnI,EAAL,YACH3X,UAAU,eAEZ,gCACE,6CACA,gCACmB,MAAhB2X,EAAsB,gBAAkB,wBAKtC,UAAVqH,GACC,qCACE,sBAAMhf,UAAU,iBAAhB,uBACA,gCACE,yCACA,uDAKR,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,oDAAf,UACE,yCACA,sBAAMA,UAAU,iBAAhB,4CAIF,sBAAMA,UAAU,cAAhB,wBAGJ,sBAAKA,UAAU,SAAf,UACGmf,EACC,wBAAQnf,UAAU,0BAAlB,SACE,sBAAMA,UAAU,iBAAhB,oBAGF,yBACEC,QAlFS,WACnBof,EAAMxJ,KAAKqJ,EAAOI,kBAClBxI,EAAM6G,QAAQ1J,SAASoL,EAAM5M,OAAO,GACpCyM,EAAOJ,aAAe,EACtBG,EAAS,SACTG,GAAY,IA8EFpf,UAAU,0DAFZ,UAIE,sBAAMA,UAAU,iBAAhB,0BAJF,wBAQF,iCACE,sBAAMA,UAAU,iBAAhB,oBAEF,iCACE,sBAAMA,UAAU,iBAAhB,2BAGJ,sBAAKA,UAAU,WAAf,UACE,sBAAMA,UAAU,iBAAhB,sBACA,sBAAMA,UAAU,iBAAhB,4BAGJ,qBAAK2f,IAAK3E,S,uBC1KD+E,OApCf,WACE,IAAMC,EAAYC,eAClB,OACE,sBAAKjgB,UAAU,WAAf,UACE,oBAAIA,UAAU,cAAd,sBACA,qBAAKA,UAAU,yBAAf,mDAGA,qBAAKA,UAAU,uBAAf,SACGoU,OAAO8L,KAAK1F,IAAM2F,KAAI,SAACC,EAAK7X,GAC3B,OACE,eAAC,IAAM8X,SAAP,WACE,oBAAIrgB,UAAU,2BAAd,SAA0CogB,IAC1C,qBAAKpgB,UAAS,2BAAsBuI,GAApC,SACGiS,GAAK4F,GAAKD,KAAI,SAACG,EAAM/X,GAAP,OACb,cAAC,GAAD,CACE+X,KAAMA,EACNrgB,QAAS,WACP+f,EAAU,CACRO,SAAU/gB,EACViZ,OAAQ,GACR+H,KAAM,GACNpd,MAAO,CAAEqd,WAAW,eAXXlY,YA2B3BmY,GAAO,SAAC,GAAuB,IAArBJ,EAAoB,EAApBA,KAAMrgB,EAAc,EAAdA,QACpB,OACE,qBAAKD,UAAU,2BAA2BC,QAASA,EAAnD,SACE,sBAAKD,UAAU,kBAAf,UACE,gCACE,qBAAKA,UAAU,wBAAf,SAAwCsgB,EAAKjc,OAC7C,qBAAKrE,UAAU,aAAf,SAA6BsgB,EAAKK,iBAEpC,8BACE,sBAAM3gB,UAAU,iBAAhB,uC,SCrDK,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BC8B1B4gB,GAjBI,SAACpe,GAClB,MAAO,CACLqe,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,OACAhf,ICgBWif,OApCf,WACE,IAAMzB,EAAYC,eAClB,OACE,sBAAKjgB,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAd,sBACA,qBAAKA,UAAU,yBAAf,mDAGA,qBAAKA,UAAU,uBAAf,SACGoU,OAAO8L,KAAK1F,IAAM2F,KAAI,SAACC,EAAK7X,GAC3B,OACE,eAAC,IAAM8X,SAAP,WACE,oBAAIrgB,UAAU,2BAAd,SAA0CogB,IAC1C,qBAAKpgB,UAAS,2BAAsBuI,GAApC,SACGiS,GAAK4F,GAAKD,KAAI,SAACG,EAAM/X,GAAP,OACb,cAAC,GAAD,CACE+X,KAAMA,EACNrgB,QAAS,WACP+f,EAAU,CACRO,SAAU/gB,EACViZ,OAAQ,GACR+H,KAAM,GACNpd,MAAO,CAAEqd,WAAW,eAXXlY,YA2B3BmY,GAAO,SAAC,GAAuB,IAArBJ,EAAoB,EAApBA,KAAMrgB,EAAc,EAAdA,QACpB,OACE,qBAAKD,UAAU,2BAA2BC,QAASA,EAAnD,SACE,sBAAKD,UAAU,kBAAf,UACE,8BACE,qBAAK2f,IAAKiB,GAAWN,EAAKoB,MAAO5B,IAAKQ,EAAKjc,KAAMrE,UAAU,oBAE7D,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,wBAAf,SAAwCsgB,EAAKjc,OAC7C,qBAAKrE,UAAU,aAAf,SAA6BsgB,EAAKK,iBAEpC,sBAAM3gB,UAAU,iBAAhB,qC,SCtDKwU,GAAgB,SAACpD,GAC5B,IAAM7B,EAAO6B,EAAOtL,OAAO,EAAG,GAAG0N,WAAW,GAAK,GAEjD,OAAO,GADMpC,EAAOtL,OAAO,EAAG,GAAK,GACjByJ,GAGPoS,GAAY,SAAC7P,EAAQ8P,EAAIC,EAAIC,GACxC,IAAIC,EAAKH,EAAGvc,EACV2c,EAAKH,EAAGxc,EACR4c,EAAKL,EAAGtc,EACR4c,EAAKL,EAAGvc,EACNyc,IAAOC,GACTD,GAAMD,EAAS,EACfE,GAAMF,EAAS,EAEfI,IADAD,GAAMH,EAAS,GACJI,EAAKJ,EAAS,IAGzBE,IADAD,GAAMD,EAAS,GACJE,EAAKF,EAAS,EACzBG,GAAMH,EAAS,EACfI,GAAMJ,EAAS,GAEjB,IAAIvH,EAAO3a,SAASiS,gBAAgB,6BAA8B,QAClE0I,EAAKrW,aAAa,KAAM,SACxBqW,EAAKrW,aAAa,KAAM6d,GACxBxH,EAAKrW,aAAa,KAAM+d,GACxB1H,EAAKrW,aAAa,KAAM8d,GACxBzH,EAAKrW,aAAa,KAAMge,GACxB3H,EAAKrW,aAAa,SAAU,cAC5BqW,EAAKrW,aAAa,aAAc,mBAChCqW,EAAKrW,aAAa,eAAgB,MAClCqW,EAAKrW,aAAa,iBAAkB,SACpC4N,EAAOnF,YAAY4N,IC6NN4H,OA9Of,WACE,IAEIC,EAEAC,EAJAvL,EAAQkG,IAAMS,SACd6E,EAAa,GAEbC,EAAavF,IAAMS,SAEjBzG,EAAOC,MAEb,EAAmC+F,IAAMC,SAAS,GAAlD,mBAAOuF,EAAP,KAAsBC,EAAtB,KAeMC,EAAa,SAAbA,IACJ5L,EAAM6G,QAAQtW,mBAAc1F,OAAWA,GACvC,IAAI2X,EAAQtC,EAAKsC,MAAM,CACrBE,SAAS,IAEP3D,EAAOyD,EAAM1S,KAAKkE,MAAMlE,KAAK+b,SAAWrJ,EAAMxI,SAC9C8R,EAAU5L,EAAKT,OAAOV,EAAK9F,MAC/BuJ,EAAM6G,KAAI,SAAC0C,GACT/L,EAAM6G,QAAQpW,UAAUsb,EAAE3iB,GAAIwT,EAAYE,WAE5CwF,YAAW,WACTpC,EAAK8L,IAAIF,EAAS/M,EAAK3V,IACvB4W,EAAM6G,QAAQpJ,YAAYyC,EAAKvE,OAC/BqE,EAAM6G,QAAQpW,UAAUsO,EAAK9F,KAAM2D,EAAYtC,QAC/C0F,EAAM6G,QAAQpW,UAAUsO,EAAK3V,GAAIwT,EAAYtC,QAC7CgI,YAAW,WACTtC,EAAM6G,QAAQtW,mBAAc1F,EAAW+R,EAAYE,UAClD,OACF,MAEHyO,EAASrgB,OAAOoX,WAAWsJ,EAAY,MAErCxH,EAAS,SAAUD,EAAQvV,GAC7B,IAAI4T,EAAQtC,EAAKsC,MAAM,CACrBlI,OAAQ6J,EACRzB,SAAS,IAEX1C,EAAM6G,QAAQtW,mBAAc1F,EAAW+R,EAAYC,KACvCjO,IAjCD0c,GAETtL,EAAM6G,QAAQtW,mBAAc1F,EAAW+R,EAAYE,QAgCrD,IAAK,IAAIrL,EAAI,EAAGA,EAAI+Q,EAAMxI,OAAQvI,IAChC,GAAI7C,IAAW4T,EAAM/Q,GAAGrI,GAAI,CAC1B,IAAI2V,EAAOmB,EAAKT,OAAO0E,GAGvB,OAFAjE,EAAK8L,IAAIjN,EAAMnQ,GACf+P,GAAMI,KAAKiF,QACJ,EAIX,OAAO,GAaHiI,EAAmB,WACnBC,EAAeC,GAoGrB,OAzFAjG,IAAMU,WAAU,WACd,IAAMnZ,EAAQ,CACZgQ,YAAa,QACbvF,YAAaC,EAAMC,MACnB/H,MAAO,CACLgG,SAAU,UACVkC,iBAAiB,EACjBjC,WAAYS,EAAYG,KACxBM,YAAa,EACblH,eAAgBsM,EAAY5F,MAC5BxG,aAAcoM,EAAY5F,OAE5BrC,YAAY,EACZoF,kBAAmB,IACnBrM,OAAQ,CACNE,IAAKsW,GACLlW,KAAM,GACNL,OAAO,IAGPgO,EAAMuQ,EAAaE,QAAQV,GAAe/P,IAoB9C,GAnBAuE,EAAKmM,KAAK1Q,GACVqE,EAAM6G,QAAU,IAAI5J,EAAWnU,SAAS2M,eAAe,SAAUhI,GACjEuS,EAAM6G,QAAQpJ,YAAYyC,EAAKvE,QACoB,IAA/CuQ,EAAaE,QAAQV,GAAeY,QACtCtM,EAAM6G,QAAQvI,iBAAgB,SAACG,GAC7B,OAAQA,EAAMrT,MACZ,KAAKgP,EAAiBC,UAEpB,OA1Ge,SAACpB,GACxB,IAAIuJ,EAAQtC,EAAKsC,MAAM,CACrBlI,OAAQrB,EACRyJ,SAAS,IAEX1C,EAAM6G,QAAQtW,mBAAc1F,EAAW+R,EAAYC,KACnD2F,EAAM3Q,SAAQ,SAACkN,GAAD,OAAUiB,EAAM6G,QAAQpW,UAAUsO,EAAK3V,GAAIwT,EAAYC,QAmG7D0P,CAAiB9N,EAAMnE,SAChB,EACT,KAAKF,EAAiBpQ,SACpB,OAAOoa,EAAO3F,EAAMjE,WAAYiE,EAAMhE,UACxC,KAAKL,EAAiBO,iBAEvBxC,EAAMC,OAEXqT,EAAW5E,QAAU/d,SAASiS,gBAC5B,6BACA,KAEiD,gBAA/CmR,EAAaE,QAAQV,GAAeY,OACtCf,EAASrgB,OAAOoX,WAAWsJ,EAAY,UAClC,GAAmD,aAA/CM,EAAaE,QAAQV,GAAeY,OAAuB,CACpE,IAAI9J,EAAQtC,EAAKsC,MAAM,CACrBE,SAAS,IAEP8J,EAAQhK,EAAM1S,KAAKkE,MAAMlE,KAAK+b,SAAWrJ,EAAMxI,UACnDsR,EAAoBkB,EAAMpjB,KAExB4W,EAAM6G,QAAQpW,UAAU6a,EAAmB1O,EAAYE,QACzD0O,EAAa,CACX,CACEvS,KAAMuT,EAAMvT,KACZ7P,GAAIojB,EAAMpjB,UAGT,GAAmD,aAA/C8iB,EAAaE,QAAQV,GAAeY,OAAuB,CACpE,GAAKJ,EAAaE,QAAQV,GAAee,OAMvCnB,EAAoBY,EAAaE,QAAQV,GAAee,WANT,CAC/C,IAAIjK,EAAQtC,EAAKsC,MAAM,CACrBE,SAAS,IAEX4I,EAAoB9I,EAAM1S,KAAKkE,MAAMlE,KAAK+b,SAAWrJ,EAAMxI,SAAS5Q,GAItE4W,EAAM6G,QAAQpW,UAAU6a,EAAmB1O,EAAYE,QAUzD,OARA2O,EAAW5E,QAAQzZ,aAAa,QAAS,UACzC4S,EAAM6G,QAAQzc,KAAKoJ,IAAIqC,YAAY4V,EAAW5E,SA1F9C4E,EAAW5E,QAAQvH,iBAAiB,QAAQzN,SAAQ,SAAC4R,GACnDgI,EAAW5E,QAAQ/O,YAAY2L,MAEjC+H,EAAW3Z,SAAQ,SAAC6a,GAClB,IAAI5B,EAAK9K,EAAM6G,QAAQzc,KAAKwI,mBAAmB8K,GAAcgP,EAAMzT,OAC/D8R,EAAK/K,EAAM6G,QAAQzc,KAAKwI,mBAAmB8K,GAAcgP,EAAMtjB,KACnEyhB,GAAUY,EAAW5E,QAASiE,EAAIC,EAAI/K,EAAM6G,QAAQzc,KAAKiD,gBA2FpD,WACL2S,EAAM6G,QAAQvR,UACdpK,OAAO4X,aAAayI,MAErB,CAACG,IAWF,sBAAKxiB,UAAU,6BAAf,UACE,sBAAKA,UAAU,yCAAf,UACE,qBAAIA,UAAU,OAAd,UACE,oBAAIA,UAAU,YAAYC,QAhGrB,WACXwiB,EAAU7b,KAAKqE,IAAIuX,EAAgB,EAAG,KA+FhC,SACE,sBAAMxiB,UAAU,iBAAhB,4BAEDgjB,EAAaE,QAAQ/C,KAAI,SAACsD,EAAQlb,GAAT,OACxB,oBACEtI,QAAS,kBA5GA,SAACsI,GACpBka,EAAUla,GA2Gemb,CAAanb,IAC5BvI,UAAS,wBACPwiB,IAAkBja,EAAI,cAAgB,GAD/B,KAFX,SAMGA,EAAI,OAIT,oBAAIvI,UAAU,YAAYC,QAlHrB,WACXwiB,EAAU7b,KAAKuD,IAAIqY,EAAgB,EAAGQ,EAAaE,QAAQpS,OAAS,KAiH9D,SACE,sBAAM9Q,UAAU,iBAAhB,gCAGJ,qBAAKA,UAAU,mBAAf,SACE,qBAAKM,GAAG,YAEV,mBAAGN,UAAU,cAAb,SACE,+BAAOgjB,EAAaE,QAAQV,GAAemB,mBAG/C,sBAAK3jB,UAAU,uCAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAK2f,IAAKiB,GAAW,MAAO5gB,UAAU,eACtC,gCACE,sBAAMA,UAAU,UAAhB,SAA2BgjB,EAAa3e,OACxC,gCAAQ2e,EAAarC,oBAIzB,8BACGvM,OAAO8L,KAAK1F,IAAM2F,KAAI,SAACC,EAAK7X,GAAN,OACrB,sBACEvI,UAAS,eACPogB,IAAQ2C,EAAmB,cAAgB,IAG7C9iB,QAAS,kBArDA,SAACK,GACpB,IAAMsjB,EAAWhkB,SAASC,cAAT,iBACAD,SAASC,cAAT,gBAAgCS,EAAhC,QACRR,UAAU6S,QAAQ,WAAY,gBACnCiR,GACFA,EAAS9jB,UAAU6S,QAAQ,eAAgB,YAgDpBkR,CAAatb,IAC5BjI,GAAE,eAAUiI,GANd,UAQGiC,QAAQ2N,IAAI4K,GACb,8BAAM3C,IACN,oBAAIpgB,UAAU,YAAd,SACGwa,GAAK4F,GAAKD,KAAI,SAACG,GAAD,OACb,6BAAKA,EAAKjc,cARTkE,e,SChONub,GACL,OADKA,GAEJ,QAFIA,GAeL,OAGKC,GAAb,WAEE,WAAYC,GAAO,IAAD,gCADlBC,aAAe,GAEb3iB,KAAK4iB,SAAWJ,GAChBxiB,KAAKmR,IAAMuR,EAAKvR,IAEhBnR,KAAKgP,OAAS,CACZ6T,WAAYzQ,EAAYE,QAE1B,IAAMrP,EAAQ,CACZ0P,SAAU3S,KAAKmR,KAAO,QACtBzD,YAAaC,EAAMC,MACnB/H,MAAO,CACLgG,SAAU,UACVkC,iBAAiB,EACjBjC,WAAYS,EAAYG,KACxBM,YAAa,EACblH,eAAgBsM,EAAY5F,MAC5BxG,aAAcoM,EAAY5F,OAE5BrC,YAAY,EACZoF,kBAAmB,IACnBrM,OAAQ,CACNE,IAAKsW,GACLlW,KAAM,GACNL,OAAO,IAGXnD,KAAKwV,MAAQ,IAAI/C,EAAWnU,SAAS2M,eAAeyX,EAAKI,OAAQ7f,GACjEjD,KAAK+iB,kBAAoBzkB,SAASiS,gBAChC,6BACA,KAEFvQ,KAAK+iB,kBAAkBngB,aAAa,QAAS,UAC7C5C,KAAKwV,MAAM5V,KAAKoJ,IAAIqC,YAAYrL,KAAK+iB,mBACrC/iB,KAAKwV,MAAM1B,iBAAgB,SAACG,GAC1B,GAAI,EAAK2O,WAAaJ,GACpB,OAAO,EAET,OAAQvO,EAAMrT,MACZ,KAAKgP,EAAiBC,UAEtB,KAAKD,EAAiBpQ,SACpB,OAAO,EACT,KAAKoQ,EAAiBO,kBAG1BnQ,KAAKwV,MAAMxB,oBAAmB,SAACC,GACzB,EAAK2O,WAAaJ,GAKI,EAAKhN,MAAMwN,WACjC/O,EAAMnE,OACN,EAAKd,OAAO6T,YAEMrT,OAAS,EAC3B,EAAKgG,MAAMzP,cAAckO,EAAMnE,OAAQ,EAAKd,OAAO6T,YAEnD,EAAKrN,MAAMvP,UAAUgO,EAAMnE,OAAQ,EAAKd,OAAO6T,aAGjD,EAAKrN,MAAMzP,mBAAc1F,EAAW+R,EAAYE,QAE5C,EAAKsQ,WAAaJ,GACpB,EAAKhN,MAAMnT,SAAS4R,EAAMnE,OAAQ,MACzB,EAAK8S,WAAaJ,IAE3B,EAAKhN,MAAMnT,SAAS4R,EAAMnE,OAAQ,EAAK8S,UAEzCF,EAAKO,cAAc,EAAKzN,MAAM/B,mBAvEtC,+CA2EE,SAAYyP,GACVljB,KAAK4iB,SAAWM,IA5EpB,uBA8EE,WAAkC,IAAxB/e,EAAuB,uDAAf,GAAIvD,EAAW,uDAAJ,GAC3BZ,KAAKgP,OAAO6T,WAAazQ,EAAYxR,GACrCZ,KAAKgP,OAAO7K,MAAQA,EACpB+E,QAAQ2N,IAAIjW,KAjFhB,wBAmFE,gBAnFF,KAkGe6hB,M,MCsGAU,OAhOf,WAEE,IAAIC,EAAW,CACbjf,MAAO,IACPkf,UAAW,IACXC,SAAU,IACVC,SAAU,IACVC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,QAAS,QAEX,EAA8BlI,IAAMC,SAAS,CAC3CkI,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,MAJL,mBAAOJ,EAAP,KAAgBK,EAAhB,KAMMC,EAAgB,SAACjgB,GACrB,IAAIkgB,EAAIlgB,EAAEG,OAAOwM,MACjBqT,EAAW,2BAAKL,GAAN,mBAAgBO,EAAIlgB,EAAEG,OAAOggB,QAAUD,EAAI,MACrDE,EAAOC,EAAUjI,QAAQ7G,MAAM/B,gBAE7B6Q,EAAY5I,IAAMS,SACtB,EAAgCT,IAAMC,WAAtC,mBAAOiH,EAAP,KAAiB2B,EAAjB,KACA,EAAoC7I,IAAMC,WAA1C,mBAAOnI,EAAP,KAAmBgR,EAAnB,KACMC,EAAiB,SAACvB,GACtBqB,EAAYrB,GACZoB,EAAUjI,QAAQkI,YAAYrB,IAE1BmB,EAAS,SAAC1R,GACd,IAAM+R,EAAItB,EACNuB,EAAQ,UAAMf,EAAQE,GAAd,OAAkBF,EAAQC,GAA1B,OAA8BD,EAAQI,GAAtC,OAA0CJ,EAAQG,GAE9D,OADA7a,QAAQ2N,IAAI+M,GACL,CACLjR,EACA+R,EAAEvgB,MACFwgB,GAAY,IACZD,EAAErB,UACFqB,EAAEnB,SACFmB,EAAEpB,UACFrR,KAAK,OAEH2S,EAAc,SAACjS,GACnB6R,EAAcH,EAAO1R,KAevB,OAbA+I,IAAMU,WAAU,WACd,IAAMsG,EAAO,CACXI,MAAO,QACP3R,IAAK,KACL8R,cAAe2B,GAEjBN,EAAUjI,QAAU,IAAIoG,GAAUC,GAClC,IAAImC,EAAYP,EAAUjI,QAAQ7G,MAAM/B,cAGxC,OAFA+Q,EAAcH,EAAOQ,IACrBN,EAAY/B,IACL,kBAAM8B,EAAUjI,QAAQ7G,MAAM1K,aACpC,IAGD,sBAAKpM,UAAU,oCAAf,UACE,qBAAKA,UAAU,yCAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKM,GAAG,cAGZ,wBACA,sBAAKN,UAAU,uEAAf,UACE,sBAAKA,UAAU,2CAAf,UACE,wBACEA,UAAS,iBAAYkkB,IAAaJ,GAAiB,SAAW,GAArD,KACT7jB,QAAS,kBAAM8lB,EAAejC,KAFhC,kBAMA,wBACE9jB,UAAS,iBACPkkB,IAAaJ,GAAkB,SAAW,GADnC,KAGT7jB,QAAS,kBAAM8lB,EAAejC,KAJhC,sBASF,sBAAK9jB,UAAU,UAAf,UACE,qBAAKA,UAAU,iCAAf,SACG,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMmgB,KAAI,SAACxG,GAAD,OACxC,wBACE1Z,QAAS,kBAAM8lB,EAAepM,IAC9B3Z,UAAS,iBAAYkkB,IAAavK,EAAI,SAAW,GAAxC,KAFX,SAIE,qBAAagG,IAAKiB,GAAWjH,GAAI3Z,UAAU,cAAjC2Z,UAIhB,qBAAK3Z,UAAU,iCAAf,SACG,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMmgB,KAAI,SAACxG,GAAD,OACxC,wBACE1Z,QAAS,kBAAM8lB,EAAepM,IAC9B3Z,UAAS,iBAAYkkB,IAAavK,EAAI,SAAW,GAAxC,KAFX,SAIE,qBAAagG,IAAKiB,GAAWjH,GAAI3Z,UAAU,cAAjC2Z,aAKlB,sBAAK3Z,UAAU,cAAf,UACE,sBAAKA,UAAU,SAAf,UACE,gCACE,uBACEomB,SAAUZ,EACVllB,GAAG,QACH4B,KAAK,WACLmkB,gBAAc,EACdnU,MAAM,MAER,uBAAOoU,QAAQ,QAAf,0BAEF,gCACE,uBACEF,SAAUZ,EACVllB,GAAG,UACH4B,KAAK,WACLmkB,gBAAc,EACdnU,MAAM,MAER,uBAAOoU,QAAQ,UAAf,+BAGJ,sBAAKtmB,UAAU,SAAf,UACE,gCACE,uBACEomB,SAAUZ,EACVllB,GAAG,QACH4B,KAAK,WACLmkB,gBAAc,EACdnU,MAAM,MAER,uBAAOoU,QAAQ,QAAf,0BAEF,gCACE,uBACEF,SAAUZ,EACVllB,GAAG,UACH4B,KAAK,WACLmkB,gBAAc,EACdnU,MAAM,MAER,uBAAOoU,QAAQ,UAAf,+BAGJ,gCACE,oBAAItmB,UAAU,UAAd,qBACA,sBAAKA,UAAU,SAAf,UACE,gCACE,uBAAOkC,KAAK,QAAQwjB,SAAO,EAACplB,GAAG,IAAI+D,KAAK,SAAS6N,MAAM,MACvD,uBAAOqU,IAAI,IAAX,sBAEF,gCACE,uBAAOrkB,KAAK,QAAQ5B,GAAG,GAAG+D,KAAK,SAAS6N,MAAM,MAC9C,uBAAOqU,IAAI,IAAX,+BAKR,sBAAKvmB,UAAU,OAAf,UACE,sBAAKA,UAAU,SAAf,UACE,wBACEA,UAAS,iBACPkkB,IAAaJ,GAAiB,SAAW,GADlC,KAGT7jB,QAAS,kBAAM8lB,EAAejC,KAJhC,yBAQA,wBACE9jB,UAAU,aACVC,QAAS,kBAAM8lB,EAAejC,KAFhC,8BAQF,sBACE9jB,UAAS,UACPkkB,IAAaJ,GAAiB,SAAW,GADlC,wBADX,UAKE,sBAAK9jB,UAAU,+DAAf,UACE,uBAAOsmB,QAAQ,QAAf,0BACA,uBAAOpkB,KAAK,QAAQ5B,GAAG,QAAQ4R,MAAM,eAEvC,sBAAKlS,UAAU,sEAAf,UACE,uBAAOsmB,QAAQ,YAAf,yBACA,yBACEtmB,UAAU,QACVqE,KAAK,OACL/D,GAAG,YACH8lB,SAAU,SAAC7gB,GACTqgB,EAAUjI,QAAQ6I,UAAU,GAAIjhB,EAAEG,OAAOwM,QAL7C,UAQE,wBAAQA,MAAM,QAAd,0BACA,wBAAQuU,UAAQ,EAACvU,MAAM,SAAvB,2BAGA,wBAAQA,MAAM,MAAd,wBACA,wBAAQA,MAAM,QAAd,sCAKR,qBAAKlS,UAAU,aAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,uBAAOA,UAAU,QAAQkS,MAAO4C,IAChC,uD,YClKG4R,OA5Cf,WACE,OACE,eAAC,EAAD,WACE,sBAAK/Y,OAAO,IAAIF,MAAM,IAAtB,UACE,+BACE,wBACEnN,GAAG,YACHqmB,YAAY,IACZC,aAAa,MACbC,KAAK,IACLC,KAAK,OACLC,OAAO,OANT,SAQE,yBACEC,OAAO,qBACPzU,KAAK,aACL0U,OAAO,aAIb,oBAAG3mB,GAAG,YAAY4E,UAAU,GAA5B,UACE,wBAAQgiB,GAAG,KAAKC,GAAG,KAAKrK,EAAE,OAC1B,sBACEvK,KAAK,OACL2L,EAAE,wEACD,UAIP,eAAC,KAAD,WAGE,cAAC,KAAD,CAAOkJ,KAAM5nB,EAAyBgK,QAAS,cAAC,GAAD,MAC/C,cAAC,KAAD,CAAO4d,KAAM5nB,EAAoBgK,QAAS,cAAC,GAAD,MAC1C,cAAC,KAAD,CAAO4d,KAAM5nB,EAAqBgK,QAAS,cAAC,GAAD,MAC3C,cAAC,KAAD,CAAO4d,KAAM5nB,EAAmBgK,QAAS,cAAC,GAAD,MACzC,cAAC,KAAD,CAAO4d,KAAM5nB,EAAoBgK,QAAS,cAAC,GAAD,MAC1C,cAAC,KAAD,CAAO4d,KAAM5nB,EAAiBgK,QAAS,cAAC,GAAD,MACvC,cAAC,KAAD,CAAO4d,KAAM5nB,EAAwBgK,QAAS,cAAC,GAAD,aC1CvC6d,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJpoB,SAAS2M,eAAe,SAG1B8a,O","file":"static/js/main.8d797537.chunk.js","sourcesContent":["export const APP_ROUTES = {\n  home: \"/\",\n  playComputer: \"/play-computer/\",\n  puzzles: \"/puzzles/\",\n  practice: \"/practice/\",\n  practiceTheme: \"/prectice/theme/\",\n  basics: \"/train/\",\n  stat: \"/stats/\",\n  boardEditor: \"/board-editor/\",\n  createPuzzle: \"/create-puzzle/\",\n  lessons: \"/learn/practice/\",\n};\n","import React from \"react\";\nimport \"./layout.css\";\nimport { Link } from \"react-router-dom\";\nimport { APP_ROUTES } from \"../../utils/constants\";\n\nfunction Layout({ children }) {\n  const openSideBar = () => {\n    document.querySelector(\".sidebar\").classList.toggle(\"open\");\n  };\n\n  return (\n    <div className=\"layout\">\n      <div className=\"sidebar\" onClick={openSideBar}>\n        <div className=\"sidebar__top\">\n          <ul>\n            <li className=\"header\">Learn</li>\n            <li>\n              <Link to={APP_ROUTES.basics}>\n                <span className=\"material-icons\">lightbulb</span> Basics\n              </Link>\n            </li>\n            <li>\n              <Link to={APP_ROUTES.practice}>\n                <span className=\"material-icons\">self_improvement</span>{\" \"}\n                Practice\n              </Link>\n            </li>\n            <li>\n              <Link to={APP_ROUTES.puzzles}>\n                <span className=\"material-icons\">track_changes</span> Puzzles\n              </Link>\n            </li>\n          </ul>\n\n          <ul>\n            <li className=\"header\">Play</li>\n            <li>\n              <Link to={APP_ROUTES.playComputer}>\n                <span className=\"material-icons\">computer</span> Computer\n              </Link>\n            </li>\n          </ul>\n          <ul>\n            <li className=\"header\">Your Stats</li>\n            <li>\n              <Link to={APP_ROUTES.stat}>\n                <span className=\"material-icons\">cloud_download</span>Import\n                Games\n              </Link>\n            </li>\n          </ul>\n\n          <ul>\n            <li className=\"header\">Tools</li>\n            <li>\n              <Link to={APP_ROUTES.createPuzzle}>\n                <span className=\"material-icons\">add_circle_outline</span>Create\n                puzzle\n              </Link>\n            </li>\n            <li>\n              <Link to={APP_ROUTES.boardEditor}>\n                <span className=\"material-icons\">grid_view</span>Board editor\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <div className=\"profile\">\n          <span>Player </span>\n          <span className=\"material-icons\">settings</span>\n        </div>\n      </div>\n      <div className=\"sidebar__offset main\">\n        <nav className=\"navar\">\n          <div className=\"sidebar__open\">\n            <i className=\"material-icons\" onClick={openSideBar}>\n              menu\n            </i>\n          </div>\n        </nav>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react'\nimport './index.css'\n\n\nfunction UserProfile({ user }) {\n\n    return (\n        <div className=\"game__user\">\n            <div className=\"\">\n                <div className=\"name\">{user.username}</div>\n            </div>\n            <div>\n                <div className=\"clk\" id={\"time\" + user.id}>0:00:00\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserProfile\n","/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nimport { SQUARE_COORDINATES, Svg } from \"./ChessboardView.js\";\n\nconst STATE = {\n  waitForInputStart: 0,\n  pieceClickedThreshold: 1,\n  clickTo: 2,\n  secondClickThreshold: 3,\n  dragTo: 4,\n  clickDragTo: 5,\n  moveDone: 6,\n  reset: 7,\n};\n\nexport const MOVE_CANCELED_REASON = {\n  secondClick: \"secondClick\",\n  movedOutOfBoard: \"movedOutOfBoard\",\n  draggedBack: \"draggedBack\",\n  clickedAnotherPiece: \"clickedAnotherPiece\",\n};\n\nconst DRAG_THRESHOLD = 4;\n\nexport class ChessboardMoveInput {\n  constructor(view, moveStartCallback, moveDoneCallback, moveCanceledCallback) {\n    this.view = view;\n    this.chessboard = view.chessboard;\n    this.moveStartCallback = moveStartCallback;\n    this.moveDoneCallback = moveDoneCallback;\n    this.moveCanceledCallback = moveCanceledCallback;\n    this.setMoveInputState(STATE.waitForInputStart);\n  }\n\n  setMoveInputState(newState, params = undefined) {\n    // console.log(\"setMoveInputState\", Object.keys(STATE)[this.moveInputState], \"=>\", Object.keys(STATE)[newState]);\n\n    const prevState = this.moveInputState;\n    this.moveInputState = newState;\n\n    switch (newState) {\n      case STATE.waitForInputStart:\n        break;\n\n      case STATE.pieceClickedThreshold:\n        if (\n          STATE.waitForInputStart !== prevState &&\n          STATE.clickTo !== prevState\n        ) {\n          throw new Error(\"moveInputState\");\n        }\n        if (this.pointerMoveListener) {\n          window.removeEventListener(\n            this.pointerMoveListener.type,\n            this.pointerMoveListener\n          );\n          this.pointerMoveListener = undefined;\n        }\n        if (this.pointerUpListener) {\n          window.removeEventListener(\n            this.pointerUpListener.type,\n            this.pointerUpListener\n          );\n          this.pointerUpListener = undefined;\n        }\n        this.startIndex = params.index;\n        this.endIndex = undefined;\n        this.movedPiece = params.piece;\n        this.updateStartEndMarkers();\n        this.startPoint = params.point;\n        if (!this.pointerMoveListener && !this.pointerUpListener) {\n          if (params.type === \"mousedown\") {\n            this.pointerMoveListener = this.onPointerMove.bind(this);\n            this.pointerMoveListener.type = \"mousemove\";\n            window.addEventListener(\"mousemove\", this.pointerMoveListener);\n\n            this.pointerUpListener = this.onPointerUp.bind(this);\n            this.pointerUpListener.type = \"mouseup\";\n            window.addEventListener(\"mouseup\", this.pointerUpListener);\n          } else if (params.type === \"touchstart\") {\n            this.pointerMoveListener = this.onPointerMove.bind(this);\n            this.pointerMoveListener.type = \"touchmove\";\n            window.addEventListener(\"touchmove\", this.pointerMoveListener);\n\n            this.pointerUpListener = this.onPointerUp.bind(this);\n            this.pointerUpListener.type = \"touchend\";\n            window.addEventListener(\"touchend\", this.pointerUpListener);\n          } else {\n            throw Error(\"event type\");\n          }\n        } else {\n          throw Error(\"_pointerMoveListener or _pointerUpListener\");\n        }\n        break;\n\n      case STATE.clickTo:\n        if (this.draggablePiece) {\n          Svg.removeElement(this.draggablePiece);\n          this.draggablePiece = undefined;\n        }\n        if (prevState === STATE.dragTo) {\n          this.view.setPieceVisibility(params.index);\n        }\n        break;\n\n      case STATE.secondClickThreshold:\n        if (STATE.clickTo !== prevState) {\n          throw new Error(\"moveInputState\");\n        }\n        this.startPoint = params.point;\n        break;\n\n      case STATE.dragTo:\n        if (STATE.pieceClickedThreshold !== prevState) {\n          throw new Error(\"moveInputState\");\n        }\n        if (this.view.chessboard.state.inputEnabled) {\n          this.view.setPieceVisibility(params.index, false);\n          this.createDraggablePiece(params.piece);\n        }\n        break;\n\n      case STATE.clickDragTo:\n        if (STATE.secondClickThreshold !== prevState) {\n          throw new Error(\"moveInputState\");\n        }\n        if (this.view.chessboard.state.inputEnabled) {\n          this.view.setPieceVisibility(params.index, false);\n          this.createDraggablePiece(params.piece);\n        }\n        break;\n\n      case STATE.moveDone:\n        if (\n          [STATE.dragTo, STATE.clickTo, STATE.clickDragTo].indexOf(\n            prevState\n          ) === -1\n        ) {\n          throw new Error(\"moveInputState\");\n        }\n        this.endIndex = params.index;\n        if (\n          this.endIndex &&\n          this.moveDoneCallback(this.startIndex, this.endIndex)\n        ) {\n          const prevSquares = this.chessboard.state.squares.slice(0);\n          this.chessboard.state.setPiece(this.startIndex, undefined);\n          this.chessboard.state.setPiece(this.endIndex, this.movedPiece);\n          if (prevState === STATE.clickTo) {\n            this.updateStartEndMarkers();\n            this.view.animatePieces(\n              prevSquares,\n              this.chessboard.state.squares.slice(0),\n              () => {\n                this.setMoveInputState(STATE.reset);\n              }\n            );\n          } else {\n            this.view.drawPieces(this.chessboard.state.squares);\n            this.setMoveInputState(STATE.reset);\n          }\n        } else {\n          this.view.drawPieces();\n          this.setMoveInputState(STATE.reset);\n        }\n        break;\n\n      case STATE.reset:\n        if (this.startIndex && !this.endIndex && this.movedPiece) {\n          this.chessboard.state.setPiece(this.startIndex, this.movedPiece);\n        }\n        this.startIndex = undefined;\n        this.endIndex = undefined;\n        this.movedPiece = undefined;\n        this.updateStartEndMarkers();\n        if (this.draggablePiece) {\n          Svg.removeElement(this.draggablePiece);\n          this.draggablePiece = undefined;\n        }\n        if (this.pointerMoveListener) {\n          window.removeEventListener(\n            this.pointerMoveListener.type,\n            this.pointerMoveListener\n          );\n          this.pointerMoveListener = undefined;\n        }\n        if (this.pointerUpListener) {\n          window.removeEventListener(\n            this.pointerUpListener.type,\n            this.pointerUpListener\n          );\n          this.pointerUpListener = undefined;\n        }\n        this.setMoveInputState(STATE.waitForInputStart);\n        break;\n\n      default:\n        throw Error(`moveInputState ${newState}`);\n    }\n  }\n\n  createDraggablePiece(pieceName) {\n    if (this.draggablePiece) {\n      throw Error(\"draggablePiece exists\");\n    }\n    this.draggablePiece = Svg.createSvg(document.body);\n    this.draggablePiece.classList.add(\"cm-chessboard-draggable-piece\");\n    this.draggablePiece.setAttribute(\"width\", this.view.squareWidth);\n    this.draggablePiece.setAttribute(\"height\", this.view.squareHeight);\n    this.draggablePiece.setAttribute(\"style\", \"pointer-events: none\");\n    this.draggablePiece.name = pieceName;\n    const spriteUrl = this.chessboard.props.sprite.cache\n      ? \"\"\n      : this.chessboard.props.sprite.url;\n    const piece = Svg.addElement(this.draggablePiece, \"use\", {\n      href: `${spriteUrl}#${pieceName}`,\n    });\n    const scaling = this.view.squareHeight / this.chessboard.props.sprite.size;\n    const transformScale = this.draggablePiece.createSVGTransform();\n    transformScale.setScale(scaling, scaling);\n    piece.transform.baseVal.appendItem(transformScale);\n  }\n\n  moveDraggablePiece(x, y) {\n    this.draggablePiece.setAttribute(\n      \"style\",\n      `pointer-events: none; position: absolute; left: ${\n        x - this.view.squareHeight / 2\n      }px; top: ${y - this.view.squareHeight / 2}px`\n    );\n  }\n\n  onPointerDown(e) {\n    if ((e.type === \"mousedown\" && e.button === 0) || e.type === \"touchstart\") {\n      const index = e.target.getAttribute(\"data-index\");\n      const pieceElement = this.view.getPiece(index);\n      let pieceName, color;\n      if (pieceElement) {\n        pieceName = pieceElement.getAttribute(\"data-piece\");\n        color = pieceName ? pieceName.substr(0, 1) : undefined;\n        // allow scrolling, if not pointed on draggable piece\n        if (\n          (color === \"w\" && this.chessboard.state.inputWhiteEnabled) ||\n          (color === \"b\" && this.chessboard.state.inputBlackEnabled)\n        ) {\n          e.preventDefault();\n        }\n      }\n      if (index) {\n        // pointer on square\n        if (\n          this.moveInputState !== STATE.waitForInputStart ||\n          (this.chessboard.state.inputWhiteEnabled && color === \"w\") ||\n          (this.chessboard.state.inputBlackEnabled && color === \"b\")\n        ) {\n          let point;\n          if (e.type === \"mousedown\") {\n            point = { x: e.clientX, y: e.clientY };\n          } else if (e.type === \"touchstart\") {\n            point = { x: e.touches[0].clientX, y: e.touches[0].clientY };\n          }\n          if (\n            this.moveInputState === STATE.waitForInputStart &&\n            pieceName &&\n            this.moveStartCallback(index)\n          ) {\n            this.setMoveInputState(STATE.pieceClickedThreshold, {\n              index: index,\n              piece: pieceName,\n              point: point,\n              type: e.type,\n            });\n          } else if (this.moveInputState === STATE.clickTo) {\n            if (index === this.startIndex) {\n              this.setMoveInputState(STATE.secondClickThreshold, {\n                index: index,\n                piece: pieceName,\n                point: point,\n                type: e.type,\n              });\n            } else {\n              const pieceName = this.chessboard.getPiece(\n                SQUARE_COORDINATES[index]\n              );\n              const pieceColor = pieceName ? pieceName.substr(0, 1) : undefined;\n              const startPieceName = this.chessboard.getPiece(\n                SQUARE_COORDINATES[this.startIndex]\n              );\n              const startPieceColor = startPieceName\n                ? startPieceName.substr(0, 1)\n                : undefined;\n              if (color && startPieceColor === pieceColor) {\n                // https://github.com/shaack/cm-chessboard/issues/40\n                this.moveCanceledCallback(\n                  MOVE_CANCELED_REASON.clickedAnotherPiece,\n                  this.startIndex,\n                  index\n                );\n                if (this.moveStartCallback(index)) {\n                  this.setMoveInputState(STATE.pieceClickedThreshold, {\n                    index: index,\n                    piece: pieceName,\n                    point: point,\n                    type: e.type,\n                  });\n                } else {\n                  this.setMoveInputState(STATE.reset);\n                }\n              } else {\n                this.setMoveInputState(STATE.moveDone, { index: index });\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  onPointerMove(e) {\n    let pageX, pageY, clientX, clientY, target;\n    if (e.type === \"mousemove\") {\n      clientX = e.clientX;\n      clientY = e.clientY;\n      pageX = e.pageX;\n      pageY = e.pageY;\n      target = e.target;\n    } else if (e.type === \"touchmove\") {\n      clientX = e.touches[0].clientX;\n      clientY = e.touches[0].clientY;\n      pageX = e.touches[0].pageX;\n      pageY = e.touches[0].pageY;\n      target = document.elementFromPoint(clientX, clientY);\n    }\n    if (\n      this.moveInputState === STATE.pieceClickedThreshold ||\n      this.moveInputState === STATE.secondClickThreshold\n    ) {\n      if (\n        Math.abs(this.startPoint.x - clientX) > DRAG_THRESHOLD ||\n        Math.abs(this.startPoint.y - clientY) > DRAG_THRESHOLD\n      ) {\n        if (this.moveInputState === STATE.secondClickThreshold) {\n          this.setMoveInputState(STATE.clickDragTo, {\n            index: this.startIndex,\n            piece: this.movedPiece,\n          });\n        } else {\n          this.setMoveInputState(STATE.dragTo, {\n            index: this.startIndex,\n            piece: this.movedPiece,\n          });\n        }\n        if (this.view.chessboard.state.inputEnabled) {\n          this.moveDraggablePiece(pageX, pageY);\n        }\n      }\n    } else if (\n      this.moveInputState === STATE.dragTo ||\n      this.moveInputState === STATE.clickDragTo ||\n      this.moveInputState === STATE.clickTo\n    ) {\n      if (\n        target &&\n        target.getAttribute &&\n        target.parentElement === this.view.boardGroup\n      ) {\n        const index = target.getAttribute(\"data-index\");\n        if (index !== this.startIndex && index !== this.endIndex) {\n          this.endIndex = index;\n          this.updateStartEndMarkers();\n        } else if (index === this.startIndex && this.endIndex !== undefined) {\n          this.endIndex = undefined;\n          this.updateStartEndMarkers();\n        }\n      } else {\n        if (this.endIndex !== undefined) {\n          this.endIndex = undefined;\n          this.updateStartEndMarkers();\n        }\n      }\n      if (\n        this.view.chessboard.state.inputEnabled &&\n        (this.moveInputState === STATE.dragTo ||\n          this.moveInputState === STATE.clickDragTo)\n      ) {\n        this.moveDraggablePiece(pageX, pageY);\n      }\n    }\n  }\n\n  onPointerUp(e) {\n    let target;\n    if (e.type === \"mouseup\") {\n      target = e.target;\n    } else if (e.type === \"touchend\") {\n      target = document.elementFromPoint(\n        e.changedTouches[0].clientX,\n        e.changedTouches[0].clientY\n      );\n    }\n    if (target && target.getAttribute) {\n      const index = target.getAttribute(\"data-index\");\n\n      if (index) {\n        if (\n          this.moveInputState === STATE.dragTo ||\n          this.moveInputState === STATE.clickDragTo\n        ) {\n          if (this.startIndex === index) {\n            if (this.moveInputState === STATE.clickDragTo) {\n              this.chessboard.state.setPiece(this.startIndex, this.movedPiece);\n              this.view.setPieceVisibility(this.startIndex);\n              this.moveCanceledCallback(\n                MOVE_CANCELED_REASON.draggedBack,\n                index,\n                index\n              );\n              this.setMoveInputState(STATE.reset);\n            } else {\n              this.setMoveInputState(STATE.clickTo, { index: index });\n            }\n          } else {\n            this.setMoveInputState(STATE.moveDone, { index: index });\n          }\n        } else if (this.moveInputState === STATE.pieceClickedThreshold) {\n          this.setMoveInputState(STATE.clickTo, { index: index });\n        } else if (this.moveInputState === STATE.secondClickThreshold) {\n          this.setMoveInputState(STATE.reset);\n          this.moveCanceledCallback(\n            MOVE_CANCELED_REASON.secondClick,\n            index,\n            index\n          );\n        }\n      } else {\n        this.view.drawPieces();\n        const moveStartIndex = this.startIndex;\n        this.setMoveInputState(STATE.reset);\n        this.moveCanceledCallback(\n          MOVE_CANCELED_REASON.movedOutOfBoard,\n          moveStartIndex,\n          undefined\n        );\n      }\n    } else {\n      this.view.drawPieces();\n      this.setMoveInputState(STATE.reset);\n    }\n  }\n\n  updateStartEndMarkers() {\n    if (this.chessboard.props.style.moveFromMarker) {\n      this.chessboard.state.removeMarkers(\n        undefined,\n        this.chessboard.props.style.moveFromMarker\n      );\n    }\n    if (this.chessboard.props.style.moveToMarker) {\n      this.chessboard.state.removeMarkers(\n        undefined,\n        this.chessboard.props.style.moveToMarker\n      );\n    }\n    if (this.chessboard.props.style.moveFromMarker) {\n      if (this.startIndex) {\n        this.chessboard.state.addMarker(\n          this.startIndex,\n          this.chessboard.props.style.moveFromMarker\n        );\n      }\n    }\n    if (this.chessboard.props.style.moveToMarker) {\n      if (this.endIndex) {\n        this.chessboard.state.addMarker(\n          this.endIndex,\n          this.chessboard.props.style.moveToMarker\n        );\n      }\n    }\n    this.view.drawMarkers();\n  }\n\n  reset() {\n    this.setMoveInputState(STATE.reset);\n  }\n\n  destroy() {\n    this.reset();\n  }\n}\n","/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nconst CHANGE_TYPE = {\n    move: 0,\n    appear: 1,\n    disappear: 2\n}\n\nexport class ChessboardPiecesAnimation {\n\n    constructor(view, fromSquares, toSquares, duration, callback) {\n        this.view = view\n        if (fromSquares && toSquares) {\n            this.animatedElements = this.createAnimation(fromSquares, toSquares)\n            this.duration = duration\n            this.callback = callback\n            this.frameHandle = requestAnimationFrame(this.animationStep.bind(this))\n        }\n    }\n\n    seekChanges(fromSquares, toSquares) {\n        const appearedList = [], disappearedList = [], changes = []\n        for (let i = 0; i < 64; i++) {\n            const previousSquare = fromSquares[i]\n            const newSquare = toSquares[i]\n            if (newSquare !== previousSquare) {\n                if (newSquare) {\n                    appearedList.push({piece: newSquare, index: i})\n                }\n                if (previousSquare) {\n                    disappearedList.push({piece: previousSquare, index: i})\n                }\n            }\n        }\n        appearedList.forEach((appeared) => {\n            let shortestDistance = 8\n            let foundMoved = undefined\n            disappearedList.forEach((disappeared) => {\n                if (appeared.piece === disappeared.piece) {\n                    const moveDistance = this.squareDistance(appeared.index, disappeared.index)\n                    if (moveDistance < shortestDistance) {\n                        foundMoved = disappeared\n                        shortestDistance = moveDistance\n                    }\n                }\n            })\n            if (foundMoved) {\n                disappearedList.splice(disappearedList.indexOf(foundMoved), 1) // remove from disappearedList, because it is moved now\n                changes.push({\n                    type: CHANGE_TYPE.move,\n                    piece: appeared.piece,\n                    atIndex: foundMoved.index,\n                    toIndex: appeared.index\n                })\n            } else {\n                changes.push({type: CHANGE_TYPE.appear, piece: appeared.piece, atIndex: appeared.index})\n            }\n        })\n        disappearedList.forEach((disappeared) => {\n            changes.push({type: CHANGE_TYPE.disappear, piece: disappeared.piece, atIndex: disappeared.index})\n        })\n        return changes\n    }\n\n    createAnimation(fromSquares, toSquares) {\n        const changes = this.seekChanges(fromSquares, toSquares)\n        const animatedElements = []\n        changes.forEach((change) => {\n            const animatedItem = {\n                type: change.type\n            }\n            switch (change.type) {\n                case CHANGE_TYPE.move:\n                    animatedItem.element = this.view.getPiece(change.atIndex)\n                    animatedItem.atPoint = this.view.squareIndexToPoint(change.atIndex)\n                    animatedItem.toPoint = this.view.squareIndexToPoint(change.toIndex)\n                    break\n                case CHANGE_TYPE.appear:\n                    animatedItem.element = this.view.drawPiece(change.atIndex, change.piece)\n                    animatedItem.element.style.opacity = 0\n                    break\n                case CHANGE_TYPE.disappear:\n                    animatedItem.element = this.view.getPiece(change.atIndex)\n                    break\n            }\n            animatedElements.push(animatedItem)\n        })\n        return animatedElements\n    }\n\n    animationStep(time) {\n        if (!this.startTime) {\n            this.startTime = time\n        }\n        const timeDiff = time - this.startTime\n        if (timeDiff <= this.duration) {\n            this.frameHandle = requestAnimationFrame(this.animationStep.bind(this))\n        } else {\n            cancelAnimationFrame(this.frameHandle)\n            this.callback()\n            return\n        }\n        const t = Math.min(1, timeDiff / this.duration)\n        const progress = t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t // easeInOut\n        this.animatedElements.forEach((animatedItem) => {\n            if (animatedItem.element) {\n                switch (animatedItem.type) {\n                    case CHANGE_TYPE.move:\n                        animatedItem.element.transform.baseVal.removeItem(0)\n                        const transform = (this.view.svg.createSVGTransform())\n                        transform.setTranslate(\n                            animatedItem.atPoint.x + (animatedItem.toPoint.x - animatedItem.atPoint.x) * progress,\n                            animatedItem.atPoint.y + (animatedItem.toPoint.y - animatedItem.atPoint.y) * progress)\n                        animatedItem.element.transform.baseVal.appendItem(transform)\n                        break\n                    case CHANGE_TYPE.appear:\n                        animatedItem.element.style.opacity = progress\n                        break\n                    case CHANGE_TYPE.disappear:\n                        animatedItem.element.style.opacity = 1 - progress\n                        break\n                }\n            } else {\n                console.warn(\"animatedItem has no element\", animatedItem)\n            }\n        })\n    }\n\n    squareDistance(index1, index2) {\n        const file1 = index1 % 8\n        const rank1 = Math.floor(index1 / 8)\n        const file2 = index2 % 8\n        const rank2 = Math.floor(index2 / 8)\n        return Math.max(Math.abs(rank2 - rank1), Math.abs(file2 - file1))\n    }\n\n}","/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nimport {ChessboardMoveInput} from \"./ChessboardMoveInput.js\"\nimport {COLOR, INPUT_EVENT_TYPE, BORDER_TYPE} from \"./Chessboard.js\"\nimport {ChessboardPiecesAnimation} from \"./ChessboardPiecesAnimation.js\"\n\nexport const SQUARE_COORDINATES = [\n    \"a1\", \"b1\", \"c1\", \"d1\", \"e1\", \"f1\", \"g1\", \"h1\",\n    \"a2\", \"b2\", \"c2\", \"d2\", \"e2\", \"f2\", \"g2\", \"h2\",\n    \"a3\", \"b3\", \"c3\", \"d3\", \"e3\", \"f3\", \"g3\", \"h3\",\n    \"a4\", \"b4\", \"c4\", \"d4\", \"e4\", \"f4\", \"g4\", \"h4\",\n    \"a5\", \"b5\", \"c5\", \"d5\", \"e5\", \"f5\", \"g5\", \"h5\",\n    \"a6\", \"b6\", \"c6\", \"d6\", \"e6\", \"f6\", \"g6\", \"h6\",\n    \"a7\", \"b7\", \"c7\", \"d7\", \"e7\", \"f7\", \"g7\", \"h7\",\n    \"a8\", \"b8\", \"c8\", \"d8\", \"e8\", \"f8\", \"g8\", \"h8\"\n]\n\nexport class ChessboardView {\n\n    constructor(chessboard, callbackAfterCreation) {\n        this.animationRunning = false\n        this.currentAnimation = undefined\n        this.chessboard = chessboard\n        this.moveInput = new ChessboardMoveInput(this,\n            this.moveStartCallback.bind(this),\n            this.moveDoneCallback.bind(this),\n            this.moveCanceledCallback.bind(this)\n        )\n        this.animationQueue = []\n        if (chessboard.props.sprite.cache) {\n            this.cacheSprite()\n        }\n        if (chessboard.props.responsive) {\n            // noinspection JSUnresolvedVariable\n            if (typeof ResizeObserver !== \"undefined\") {\n                // noinspection JSUnresolvedFunction\n                this.resizeObserver = new ResizeObserver(() => {\n                    this.handleResize()\n                })\n                this.resizeObserver.observe(this.chessboard.element)\n            } else {\n                this.resizeListener = this.handleResize.bind(this)\n                window.addEventListener(\"resize\", this.resizeListener)\n            }\n        }\n\n        this.pointerDownListener = this.pointerDownHandler.bind(this)\n        this.chessboard.element.addEventListener(\"mousedown\", this.pointerDownListener)\n        this.chessboard.element.addEventListener(\"touchstart\", this.pointerDownListener)\n\n        this.createSvgAndGroups()\n        this.updateMetrics()\n        callbackAfterCreation(this)\n        if (chessboard.props.responsive) {\n            this.handleResize()\n        }\n    }\n\n    pointerDownHandler(e) {\n        this.moveInput.onPointerDown(e)\n    }\n\n    destroy() {\n        this.moveInput.destroy()\n        if (this.resizeObserver) {\n            this.resizeObserver.unobserve(this.chessboard.element);\n        }\n        if (this.resizeListener) {\n            window.removeEventListener(\"resize\", this.resizeListener)\n        }\n        this.chessboard.element.removeEventListener(\"mousedown\", this.pointerDownListener)\n        this.chessboard.element.removeEventListener(\"touchstart\", this.pointerDownListener)\n        Svg.removeElement(this.svg)\n        this.animationQueue = []\n        if (this.currentAnimation) {\n            cancelAnimationFrame(this.currentAnimation.frameHandle)\n        }\n    }\n\n    // Sprite //\n\n    cacheSprite() {\n        const wrapperId = \"chessboardSpriteCache\"\n        if (!document.getElementById(wrapperId)) {\n            const wrapper = document.createElement(\"div\")\n            wrapper.style.display = \"none\"\n            wrapper.id = wrapperId\n            document.body.appendChild(wrapper)\n            const xhr = new XMLHttpRequest()\n            xhr.open(\"GET\", this.chessboard.props.sprite.url, true)\n            xhr.onload = function () {\n                wrapper.insertAdjacentHTML('afterbegin', xhr.response)\n            }\n            xhr.send()\n        }\n    }\n\n    createSvgAndGroups() {\n        if (this.svg) {\n            Svg.removeElement(this.svg)\n        }\n        this.svg = Svg.createSvg(this.chessboard.element)\n        let cssClass = this.chessboard.props.style.cssClass ? this.chessboard.props.style.cssClass : \"default\"\n        this.svg.setAttribute(\"class\", \"cm-chessboard border-type-\" + this.chessboard.props.style.borderType + \" \" + cssClass)\n        this.updateMetrics()\n        this.boardGroup = Svg.addElement(this.svg, \"g\", {class: \"board\"})\n        this.coordinatesGroup = Svg.addElement(this.svg, \"g\", {class: \"coordinates\"})\n        this.markersGroup = Svg.addElement(this.svg, \"g\", {class: \"markers\"})\n        this.piecesGroup = Svg.addElement(this.svg, \"g\", {class: \"pieces\"})\n    }\n\n    updateMetrics() {\n        this.width = this.chessboard.element.clientWidth\n        this.height = this.chessboard.element.clientHeight\n        if (this.chessboard.props.style.borderType === BORDER_TYPE.frame) {\n            this.borderSize = this.width / 25\n        } else if (this.chessboard.props.style.borderType === BORDER_TYPE.thin) {\n            this.borderSize = this.width / 320\n        } else {\n            this.borderSize = 0\n        }\n        this.innerWidth = this.width - 2 * this.borderSize\n        this.innerHeight = this.height - 2 * this.borderSize\n        this.squareWidth = this.innerWidth / 8\n        this.squareHeight = this.innerHeight / 8\n        this.scalingX = this.squareWidth / this.chessboard.props.sprite.size\n        this.scalingY = this.squareHeight / this.chessboard.props.sprite.size\n        this.pieceXTranslate = (this.squareWidth / 2 - this.chessboard.props.sprite.size * this.scalingY / 2)\n    }\n\n    handleResize() {\n        if (this.chessboard.props.style.aspectRatio) {\n            this.chessboard.element.style.height = (this.chessboard.element.clientWidth * this.chessboard.props.style.aspectRatio) + \"px\"\n        }\n        if (this.chessboard.element.clientWidth !== this.width ||\n            this.chessboard.element.clientHeight !== this.height) {\n            this.updateMetrics()\n            this.redraw()\n        }\n        this.svg.setAttribute(\"width\", \"100%\") // safari bugfix\n        this.svg.setAttribute(\"height\", \"100%\")\n    }\n\n    redraw() {\n        this.drawBoard()\n        this.drawCoordinates()\n        this.drawMarkers()\n        this.setCursor()\n        this.drawPieces(this.chessboard.state.squares)\n    }\n\n    // Board //\n\n    drawBoard() {\n        while (this.boardGroup.firstChild) {\n            this.boardGroup.removeChild(this.boardGroup.lastChild)\n        }\n        if (this.chessboard.props.style.borderType !== BORDER_TYPE.none) {\n            let boardBorder = Svg.addElement(this.boardGroup, \"rect\", {width: this.width, height: this.height})\n            boardBorder.setAttribute(\"class\", \"border\")\n            if (this.chessboard.props.style.borderType === BORDER_TYPE.frame) {\n                const innerPos = this.borderSize\n                let borderInner = Svg.addElement(this.boardGroup, \"rect\", {\n                    x: innerPos,\n                    y: innerPos,\n                    width: this.width - innerPos * 2,\n                    height: this.height - innerPos * 2\n                })\n                borderInner.setAttribute(\"class\", \"border-inner\")\n            }\n        }\n        for (let i = 0; i < 64; i++) {\n            const index = this.chessboard.state.orientation === COLOR.white ? i : 63 - i\n            const squareColor = ((9 * index) & 8) === 0 ? 'black' : 'white'\n            const fieldClass = `square ${squareColor}`\n            const point = this.squareIndexToPoint(index)\n            const squareRect = Svg.addElement(this.boardGroup, \"rect\", {\n                x: point.x, y: point.y, width: this.squareWidth, height: this.squareHeight\n            })\n            squareRect.setAttribute(\"class\", fieldClass)\n            squareRect.setAttribute(\"data-index\", \"\" + index)\n        }\n    }\n\n    drawCoordinates() {\n        if (!this.chessboard.props.style.showCoordinates) {\n            return\n        }\n        while (this.coordinatesGroup.firstChild) {\n            this.coordinatesGroup.removeChild(this.coordinatesGroup.lastChild)\n        }\n        const inline = this.chessboard.props.style.borderType !== BORDER_TYPE.frame\n        for (let file = 0; file < 8; file++) {\n            let x = this.borderSize + (17 + this.chessboard.props.sprite.size * file) * this.scalingX\n            let y = this.height - this.scalingY * 3.5\n            let cssClass = \"coordinate file\"\n            if (inline) {\n                x = x + this.scalingX * 15.5\n                cssClass += file % 2 ? \" white\" : \" black\"\n            }\n            const textElement = Svg.addElement(this.coordinatesGroup, \"text\", {\n                class: cssClass,\n                x: x,\n                y: y,\n                style: `font-size: ${this.scalingY * 10}px`\n            })\n            if (this.chessboard.state.orientation === COLOR.white) {\n                textElement.textContent = String.fromCharCode(97 + file)\n            } else {\n                textElement.textContent = String.fromCharCode(104 - file)\n            }\n        }\n        for (let rank = 0; rank < 8; rank++) {\n            let x = (this.borderSize / 3.7)\n            let y = this.borderSize + 25 * this.scalingY + rank * this.squareHeight\n            let cssClass = \"coordinate rank\"\n            if (inline) {\n                cssClass += rank % 2 ? \" black\" : \" white\"\n                if (this.chessboard.props.style.borderType === BORDER_TYPE.frame) {\n                    x = x + this.scalingX * 10\n                    y = y - this.scalingY * 15\n                } else {\n                    x = x + this.scalingX * 2\n                    y = y - this.scalingY * 15\n                }\n            }\n            const textElement = Svg.addElement(this.coordinatesGroup, \"text\", {\n                class: cssClass,\n                x: x,\n                y: y,\n                style: `font-size: ${this.scalingY * 10}px`\n            })\n            if (this.chessboard.state.orientation === COLOR.white) {\n                textElement.textContent = \"\" + (8 - rank)\n            } else {\n                textElement.textContent = \"\" + (1 + rank)\n            }\n        }\n    }\n\n    // Pieces //\n\n    drawPieces(squares = this.chessboard.state.squares) {\n        const childNodes = Array.from(this.piecesGroup.childNodes)\n        for (let i = 0; i < 64; i++) {\n            const pieceName = squares[i]\n            if (pieceName) {\n                this.drawPiece(i, pieceName)\n            }\n        }\n        for (const childNode of childNodes) {\n            this.piecesGroup.removeChild(childNode)\n        }\n    }\n\n    drawPiece(index, pieceName) {\n        const pieceGroup = Svg.addElement(this.piecesGroup, \"g\")\n        pieceGroup.setAttribute(\"data-piece\", pieceName)\n        pieceGroup.setAttribute(\"data-index\", index)\n        const point = this.squareIndexToPoint(index)\n        const transform = (this.svg.createSVGTransform())\n        transform.setTranslate(point.x, point.y)\n        pieceGroup.transform.baseVal.appendItem(transform)\n        const spriteUrl = this.chessboard.props.sprite.cache ? \"\" : this.chessboard.props.sprite.url\n        const pieceUse = Svg.addElement(pieceGroup, \"use\", {\n            href: `${spriteUrl}#${pieceName}`,\n            class: \"piece\"\n        })\n        // center on square\n        const transformTranslate = (this.svg.createSVGTransform())\n        transformTranslate.setTranslate(this.pieceXTranslate, 0)\n        pieceUse.transform.baseVal.appendItem(transformTranslate)\n        // scale\n        const transformScale = (this.svg.createSVGTransform())\n        transformScale.setScale(this.scalingY, this.scalingY)\n        pieceUse.transform.baseVal.appendItem(transformScale)\n        return pieceGroup\n    }\n\n    setPieceVisibility(index, visible = true) {\n        const piece = this.getPiece(index)\n        if (visible) {\n            piece.setAttribute(\"visibility\", \"visible\")\n        } else {\n            piece.setAttribute(\"visibility\", \"hidden\")\n        }\n\n    }\n\n    getPiece(index) {\n        return this.piecesGroup.querySelector(`g[data-index='${index}']`)\n    }\n\n    // Markers //\n\n    drawMarkers() {\n        while (this.markersGroup.firstChild) {\n            this.markersGroup.removeChild(this.markersGroup.firstChild)\n        }\n        this.chessboard.state.markers.forEach((marker) => {\n                this.drawMarker(marker)\n            }\n        )\n    }\n\n    drawMarker(marker) {\n        const markerGroup = Svg.addElement(this.markersGroup, \"g\")\n        markerGroup.setAttribute(\"data-index\", marker.index)\n        const point = this.squareIndexToPoint(marker.index)\n        const transform = (this.svg.createSVGTransform())\n        transform.setTranslate(point.x, point.y)\n        markerGroup.transform.baseVal.appendItem(transform)\n        const spriteUrl = this.chessboard.props.sprite.cache ? \"\" : this.chessboard.props.sprite.url\n        const markerUse = Svg.addElement(markerGroup, \"use\",\n            {href: `${spriteUrl}#${marker.type.slice}`, class: \"marker \" + marker.type.class})\n        const transformScale = (this.svg.createSVGTransform())\n        transformScale.setScale(this.scalingX, this.scalingY)\n        markerUse.transform.baseVal.appendItem(transformScale)\n        return markerGroup\n    }\n\n    // animation queue //\n\n    animatePieces(fromSquares, toSquares, callback) {\n        this.animationQueue.push({fromSquares: fromSquares, toSquares: toSquares, callback: callback})\n        if (!this.animationRunning) {\n            this.nextPieceAnimationInQueue()\n        }\n    }\n\n    nextPieceAnimationInQueue() {\n        const nextAnimation = this.animationQueue.shift()\n        if (nextAnimation !== undefined) {\n            this.animationRunning = true\n            this.currentAnimation = new ChessboardPiecesAnimation(this, nextAnimation.fromSquares, nextAnimation.toSquares, this.chessboard.props.animationDuration / (this.animationQueue.length + 1), () => {\n                if (!this.moveInput.draggablePiece) {\n                    this.drawPieces(nextAnimation.toSquares)\n                    this.animationRunning = false\n                    this.nextPieceAnimationInQueue()\n                    if (nextAnimation.callback) {\n                        nextAnimation.callback()\n                    }\n                } else {\n                    this.animationRunning = false\n                    this.nextPieceAnimationInQueue()\n                    if (nextAnimation.callback) {\n                        nextAnimation.callback()\n                    }\n                }\n            })\n        }\n    }\n\n    // enable and disable move input //\n\n    enableMoveInput(eventHandler, color = undefined) {\n        if (color === COLOR.white) {\n            this.chessboard.state.inputWhiteEnabled = true\n        } else if (color === COLOR.black) {\n            this.chessboard.state.inputBlackEnabled = true\n        } else {\n            this.chessboard.state.inputWhiteEnabled = true\n            this.chessboard.state.inputBlackEnabled = true\n        }\n        this.chessboard.state.inputEnabled = true\n        this.moveInputCallback = eventHandler\n        this.setCursor()\n    }\n\n    disableMoveInput() {\n        this.chessboard.state.inputWhiteEnabled = false\n        this.chessboard.state.inputBlackEnabled = false\n        this.chessboard.state.inputEnabled = false\n        this.moveInputCallback = undefined\n        this.setCursor()\n    }\n\n    // callbacks //\n\n    moveStartCallback(index) {\n        if (this.moveInputCallback) {\n            return this.moveInputCallback({\n                chessboard: this.chessboard,\n                type: INPUT_EVENT_TYPE.moveStart,\n                square: SQUARE_COORDINATES[index]\n            })\n        } else {\n            return true\n        }\n    }\n\n    moveDoneCallback(fromIndex, toIndex) {\n        if (this.moveInputCallback) {\n            return this.moveInputCallback({\n                chessboard: this.chessboard,\n                type: INPUT_EVENT_TYPE.moveDone,\n                squareFrom: SQUARE_COORDINATES[fromIndex],\n                squareTo: SQUARE_COORDINATES[toIndex]\n            })\n        } else {\n            return true\n        }\n    }\n\n    moveCanceledCallback(reason, fromIndex, toIndex) {\n        if (this.moveInputCallback) {\n            this.moveInputCallback({\n                chessboard: this.chessboard,\n                type: INPUT_EVENT_TYPE.moveCanceled,\n                reason: reason,\n                squareFrom: SQUARE_COORDINATES[fromIndex],\n                squareTo: toIndex ? SQUARE_COORDINATES[toIndex] : undefined\n            })\n        }\n    }\n\n    // Helpers //\n\n    setCursor() {\n        if (this.chessboard.state) { // fix https://github.com/shaack/cm-chessboard/issues/47\n            if (this.chessboard.state.inputWhiteEnabled || this.chessboard.state.inputBlackEnabled || this.chessboard.state.squareSelectEnabled) {\n                this.boardGroup.setAttribute(\"class\", \"board input-enabled\")\n            } else {\n                this.boardGroup.setAttribute(\"class\", \"board\")\n            }\n        }\n    }\n\n    squareIndexToPoint(index) {\n        let x, y\n        if (this.chessboard.state.orientation === COLOR.white) {\n            x = this.borderSize + (index % 8) * this.squareWidth\n            y = this.borderSize + (7 - Math.floor(index / 8)) * this.squareHeight\n        } else {\n            x = this.borderSize + (7 - index % 8) * this.squareWidth\n            y = this.borderSize + (Math.floor(index / 8)) * this.squareHeight\n        }\n        return {x: x, y: y}\n    }\n\n}\n\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\"\n\nexport class Svg {\n\n    /**\n     * create the Svg in the HTML DOM\n     * @param containerElement\n     * @returns {Element}\n     */\n    static createSvg(containerElement = undefined) {\n        let svg = document.createElementNS(SVG_NAMESPACE, \"svg\")\n        if (containerElement) {\n            svg.setAttribute(\"width\", \"100%\")\n            svg.setAttribute(\"height\", \"100%\")\n            containerElement.appendChild(svg)\n        }\n        return svg\n    }\n\n    /**\n     * Add an Element to a SVG DOM\n     * @param parent\n     * @param name\n     * @param attributes\n     * @returns {Element}\n     */\n    static addElement(parent, name, attributes) {\n        let element = document.createElementNS(SVG_NAMESPACE, name)\n        if (name === \"use\") {\n            attributes[\"xlink:href\"] = attributes[\"href\"] // fix for safari\n        }\n        for (let attribute in attributes) {\n            if (attributes.hasOwnProperty(attribute)) {\n                if (attribute.indexOf(\":\") !== -1) {\n                    const value = attribute.split(\":\")\n                    element.setAttributeNS(\"http://www.w3.org/1999/\" + value[0], value[1], attributes[attribute])\n                } else {\n                    element.setAttribute(attribute, attributes[attribute])\n                }\n            }\n        }\n        parent.appendChild(element)\n        return element\n    }\n\n    /**\n     * Remove an Element from a SVG DOM\n     * @param element\n     */\n    static removeElement(element) {\n        element.parentNode.removeChild(element)\n    }\n\n}\n","/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nexport class ChessboardState {\n\n    constructor() {\n        this.squares = new Array(64).fill(null)\n        this.orientation = undefined\n        this.markers = []\n        this.inputWhiteEnabled = false\n        this.inputBlackEnabled = false\n        this.inputEnabled = false\n        this.squareSelectEnabled = false\n    }\n\n    setPiece(index, piece) {\n        this.squares[index] = piece\n    }\n\n    addMarker(index, type) {\n        this.markers.push({index: index, type: type})\n    }\n\n    removeMarkers(index = undefined, type = undefined) {\n        if (!index && !type) {\n            this.markers = []\n        } else {\n            this.markers = this.markers.filter((marker) => {\n                if (!marker.type) {\n                    if (index === marker.index) {\n                        return false\n                    }\n                } else if (!index) {\n                    if (marker.type === type) {\n                        return false\n                    }\n                } else if (marker.type === type && index === marker.index) {\n                    return false\n                }\n                return true\n            })\n        }\n    }\n\n    setPosition(fen) {\n        if (fen) {\n            const parts = fen.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").split(/\\/|\\s/)\n            for (let part = 0; part < 8; part++) {\n                const row = parts[7 - part].replace(/\\d/g, (str) => {\n                    const numSpaces = parseInt(str)\n                    let ret = ''\n                    for (let i = 0; i < numSpaces; i++) {\n                        ret += '-'\n                    }\n                    return ret\n                })\n                for (let c = 0; c < 8; c++) {\n                    const char = row.substr(c, 1)\n                    let piece = null\n                    if (char !== '-') {\n                        if (char.toUpperCase() === char) {\n                            piece = `w${char.toLowerCase()}`\n                        } else {\n                            piece = `b${char}`\n                        }\n                    }\n                    this.squares[part * 8 + c] = piece\n                }\n            }\n        }\n    }\n\n    getPosition() {\n        let parts = new Array(8).fill(\"\")\n        for (let part = 0; part < 8; part++) {\n            let spaceCounter = 0\n            for (let i = 0; i < 8; i++) {\n                const piece = this.squares[part * 8 + i]\n                if (!piece) {\n                    spaceCounter++\n                } else {\n                    if (spaceCounter > 0) {\n                        parts[7 - part] += spaceCounter\n                        spaceCounter = 0\n                    }\n                    const color = piece.substr(0, 1)\n                    const name = piece.substr(1, 1)\n                    if (color === \"w\") {\n                        parts[7 - part] += name.toUpperCase()\n                    } else {\n                        parts[7 - part] += name\n                    }\n                }\n            }\n            if (spaceCounter > 0) {\n                parts[7 - part] += spaceCounter\n                spaceCounter = 0\n            }\n        }\n        return parts.join(\"/\")\n    }\n\n    squareToIndex(square) {\n        const file = square.substr(0, 1).charCodeAt(0) - 97\n        const rank = square.substr(1, 1) - 1\n        return 8 * rank + file\n    }\n\n}","/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nimport {SQUARE_COORDINATES, ChessboardView} from \"./ChessboardView.js\"\nimport {ChessboardState} from \"./ChessboardState.js\"\n\nexport const COLOR = {\n    white: \"w\",\n    black: \"b\"\n}\nexport const INPUT_EVENT_TYPE = {\n    moveStart: \"moveStart\",\n    moveDone: \"moveDone\",\n    moveCanceled: \"moveCanceled\"\n}\nexport const SQUARE_SELECT_TYPE = {\n    primary: \"primary\",\n    secondary: \"secondary\"\n}\nexport const BORDER_TYPE = {\n    none: \"none\", // no border\n    thin: \"thin\", // thin border\n    frame: \"frame\" // wide border with coordinates in it\n}\nexport const MARKER_TYPE = {\n    frame: {class: \"marker-frame\", slice: \"markerFrame\"},\n    square: {class: \"marker-square\", slice: \"markerSquare\"},\n    dot: {class: \"marker-dot\", slice: \"markerDot\"},\n    circle: {class: \"marker-circle\", slice: \"markerCircle\"}\n}\nexport const PIECE = {\n    wp: \"wp\", wb: \"wb\", wn: \"wn\", wr: \"wr\", wq: \"wq\", wk: \"wk\",\n    bp: \"bp\", bb: \"bb\", bn: \"bn\", br: \"br\", bq: \"bq\", bk: \"bk\",\n}\nexport const FEN_START_POSITION = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\nexport const FEN_EMPTY_POSITION = \"8/8/8/8/8/8/8/8\"\n\nexport class Chessboard {\n\n    constructor(element, props = {}) { // TODO rename element to context\n        if (!element) {\n            throw new Error(\"container element is \" + element)\n        }\n        this.element = element\n        let defaultProps = {\n            position: \"empty\", // set as fen, \"start\" or \"empty\"\n            orientation: COLOR.white, // white on bottom\n            style: {\n                cssClass: \"default\",\n                showCoordinates: true, // show ranks and files\n                borderType: BORDER_TYPE.thin, // thin: thin border, frame: wide border with coordinates in it, none: no border\n                aspectRatio: 1, // height/width. Set to `undefined`, if you want to define it only in the css.\n                moveFromMarker: MARKER_TYPE.frame, // the marker used to mark the start square\n                moveToMarker: MARKER_TYPE.frame, // the marker used to mark the square where the figure is moving to\n                moveMarker: MARKER_TYPE.frame, // deprecated => moveFromMarker // TODO remove in future\n                hoverMarker: MARKER_TYPE.frame // deprecated => moveToMarker // TODO remove in future\n            },\n            responsive: true, // resizes the board based on element size\n            animationDuration: 300, // pieces animation duration in milliseconds\n            sprite: {\n                url: \"./assets/images/chessboard-sprite-staunty.svg\", // pieces and markers are stored as svg sprite\n                size: 40, // the sprite size, defaults to 40x40px\n                cache: true // cache the sprite inline, in the HTML\n            }\n        }\n        this.props = {}\n        Object.assign(this.props, defaultProps)\n        Object.assign(this.props, props)\n        this.props.sprite = defaultProps.sprite\n        this.props.style = defaultProps.style\n        if (props.sprite) {\n            Object.assign(this.props.sprite, props.sprite)\n        }\n        if (props.style) {\n            Object.assign(this.props.style, props.style)\n        }\n        if(this.props.style.moveMarker !== MARKER_TYPE.frame) { // TODO remove in future\n            console.warn(\"this.props.style.moveMarker is deprecated, use this.props.style.moveFromMarker\")\n            this.props.style.moveFromMarker = this.props.style.moveMarker\n        }\n        if(this.props.style.hoverMarker !== MARKER_TYPE.frame) { // TODO remove in future\n            console.warn(\"this.props.style.hoverMarker is deprecated, use this.props.style.moveToMarker\")\n            this.props.style.moveToMarker = this.props.style.hoverMarker\n        }\n        if (this.props.style.aspectRatio) {\n            this.element.style.height = (this.element.offsetWidth * this.props.style.aspectRatio) + \"px\"\n        }\n        this.state = new ChessboardState()\n        this.state.orientation = this.props.orientation\n\n        this.view = new ChessboardView(this, (view) => {\n            if (this.props.position === \"start\") {\n                this.state.setPosition(FEN_START_POSITION)\n            } else if (this.props.position === \"empty\" || this.props.position === undefined) {\n                this.state.setPosition(FEN_EMPTY_POSITION)\n            } else {\n                this.state.setPosition(this.props.position)\n            }\n            view.redraw()\n        })\n    }\n\n    // API //\n\n    setPiece(square, piece) {\n        this.state.setPiece(this.state.squareToIndex(square), piece)\n        this.view.drawPieces(this.state.squares)\n    }\n\n    getPiece(square) {\n        return this.state.squares[this.state.squareToIndex(square)]\n    }\n\n    movePiece(squareFrom, squareTo, animated = true) {\n        return new Promise((resolve, reject) => {\n            const prevSquares = this.state.squares.slice(0) // clone\n            const pieceFrom = this.getPiece(squareFrom)\n            if(!pieceFrom) {\n                reject(\"no piece on square \" + squareFrom)\n            } else {\n                this.state.squares[this.state.squareToIndex(squareFrom)] = null\n                this.state.squares[this.state.squareToIndex(squareTo)] = pieceFrom\n                if (animated) {\n                    this.view.animatePieces(prevSquares, this.state.squares, () => {\n                        resolve()\n                    })\n                } else {\n                    this.view.drawPieces(this.state.squares)\n                    resolve()\n                }\n            }\n        })\n    }\n\n    setPosition(fen, animated = true) {\n        return new Promise((resolve) => {\n            if (fen === \"start\") {\n                fen = FEN_START_POSITION\n            } else if (fen === \"empty\") {\n                fen = FEN_EMPTY_POSITION\n            }\n            const currentFen = this.state.getPosition()\n            const fenParts = fen.split(\" \")\n            const fenNormalized = fenParts[0]\n\n            if (fenNormalized !== currentFen) {\n                const prevSquares = this.state.squares.slice(0) // clone\n                this.state.setPosition(fen)\n                if (animated) {\n                    this.view.animatePieces(prevSquares, this.state.squares.slice(0), () => {\n                        resolve()\n                    })\n                } else {\n                    this.view.drawPieces(this.state.squares)\n                    resolve()\n                }\n            } else {\n                resolve()\n            }\n        })\n    }\n\n    getPosition() {\n        return this.state.getPosition()\n    }\n\n    addMarker(square, type) {\n        if (!type) {\n            console.error(\"Error addMarker(), type is \" + type)\n        }\n        this.state.addMarker(this.state.squareToIndex(square), type)\n        this.view.drawMarkers()\n    }\n\n    getMarkers(square = undefined, type = undefined) {\n        const markersFound = []\n        this.state.markers.forEach((marker) => {\n            const markerSquare = SQUARE_COORDINATES[marker.index]\n            if (!square && (!type || type === marker.type) ||\n                !type && square === markerSquare ||\n                type === marker.type && square === markerSquare) {\n                markersFound.push({square: SQUARE_COORDINATES[marker.index], type: marker.type})\n            }\n        })\n        return markersFound\n    }\n\n    removeMarkers(square = undefined, type = undefined) {\n        const index = square ? this.state.squareToIndex(square) : undefined\n        this.state.removeMarkers(index, type)\n        this.view.drawMarkers()\n    }\n\n    setOrientation(color) {\n        this.state.orientation = color\n        return this.view.redraw()\n    }\n\n    getOrientation() {\n        return this.state.orientation\n    }\n\n    destroy() {\n        this.view.destroy()\n        this.view = undefined\n        this.state = undefined\n        if (this.squareSelectListener) {\n            this.element.removeEventListener(\"contextmenu\", this.squareSelectListener)\n            this.element.removeEventListener(\"mouseup\", this.squareSelectListener)\n            this.element.removeEventListener(\"touchend\", this.squareSelectListener)\n        }\n    }\n\n    enableMoveInput(eventHandler, color = undefined) {\n        this.view.enableMoveInput(eventHandler, color)\n    }\n\n    disableMoveInput() {\n        this.view.disableMoveInput()\n    }\n\n    // TODO remove deprecated function\n    // noinspection JSUnusedGlobalSymbols\n    enableContextInput(eventHandler) {\n        console.warn(\"enableContextInput() is deprecated, use enableSquareSelect()\")\n        this.enableSquareSelect(function (event) {\n            if (event.type === SQUARE_SELECT_TYPE.secondary) {\n                eventHandler(event)\n            }\n        })\n    }\n\n    // TODO remove deprecated function\n    // noinspection JSUnusedGlobalSymbols\n    disableContextInput() {\n        this.disableSquareSelect()\n    }\n\n    enableSquareSelect(eventHandler) {\n        if (this.squareSelectListener) {\n            console.warn(\"squareSelectListener already existing\")\n            return\n        }\n        this.squareSelectListener = function (e) {\n            const index = e.target.getAttribute(\"data-index\")\n            if (e.type === \"contextmenu\") {\n                // disable context menu\n                e.preventDefault()\n                return\n            }\n            eventHandler({\n                chessboard: this,\n                type: e.button === 2 ? SQUARE_SELECT_TYPE.secondary : SQUARE_SELECT_TYPE.primary,\n                square: SQUARE_COORDINATES[index]\n            })\n        }\n        this.element.addEventListener(\"contextmenu\", this.squareSelectListener)\n        this.element.addEventListener(\"mouseup\", this.squareSelectListener)\n        this.element.addEventListener(\"touchend\", this.squareSelectListener)\n        this.state.squareSelectEnabled = true\n        this.view.setCursor()\n    }\n\n    disableSquareSelect() {\n        this.element.removeEventListener(\"contextmenu\", this.squareSelectListener)\n        this.element.removeEventListener(\"mouseup\", this.squareSelectListener)\n        this.element.removeEventListener(\"touchend\", this.squareSelectListener)\n        this.squareSelectListener = undefined\n        this.state.squareSelectEnabled = false\n        this.view.setCursor()\n    }\n\n}\n","export default __webpack_public_path__ + \"static/media/Capture1.c0181c3c.mp3\";","export default __webpack_public_path__ + \"static/media/Check.9528d4c3.mp3\";","export default __webpack_public_path__ + \"static/media/Move.d013f4c2.mp3\";","export default __webpack_public_path__ + \"static/media/Defeat.56db983e.mp3\";","export default __webpack_public_path__ + \"static/media/Victory.34a71557.mp3\";","import capture from \"../assets/sounds/Capture1.mp3\"\nimport check from \"../assets/sounds/Check.mp3\"\nimport move from \"../assets/sounds/Move.mp3\"\nimport Defeat from \"../assets/sounds/Defeat.mp3\"\nimport victory from \"../assets/sounds/Victory.mp3\"\n\nconst music = {\n    capture: new Audio(capture),\n    check: new Audio(check),\n    move: new Audio(move),\n    defeat: new Audio(Defeat),\n    victory: new Audio(victory)\n\n}\nexport default music","export default __webpack_public_path__ + \"static/media/chessboard-sprite-staunty.6dba5963.svg\";","// import ChessBoard from \"./chessboard\";\nimport {\n  BORDER_TYPE,\n  COLOR,\n  MARKER_TYPE,\n  Chessboard,\n  INPUT_EVENT_TYPE,\n} from \"./chessboard/Chessboard\";\nimport Chess from \"chess.js\";\nimport { pieceToUnicode } from \"./displayPgn\";\nimport music from \"./gameSound\";\nimport pieceSet from \"../assets/images/chessboard-sprite-staunty.svg\";\n\n\n\nconst $ = (selector) => {\n  const elements = document.querySelectorAll(selector);\n  return {\n    addClass: (cssClass) => {\n      elements &&\n        elements.forEach((element) => element.classList.add(cssClass));\n    },\n    removeClass: (cssClass) => {\n      elements &&\n        elements.forEach((element) => element.classList.remove(cssClass));\n    },\n    html: (html) => {\n      elements && html && (elements[0].innerHTML = html);\n    },\n    text: (text) => {\n      elements && text && (elements[0].textContent = text);\n    },\n  };\n};\n\nexport const engineGame = (options) => {\n  options = options || {\n    showEvaluation: true,\n  };\n  let game = new Chess();\n  let board;\n  // /home/ojay/dev/web/chess_app/public/static/stockfish.min.js\n\n  let engine = new Worker(\"/static/stockfish.min.js\");\n  let evaler = new Worker(\"/static/stockfish.min.js\");\n  let engineStatus = {};\n  let displayScore = true;\n  let time = { wtime: 300000, btime: 300000, winc: 2000, binc: 0 };\n  let playerColor = \"white\";\n  let clockTimeoutID = null;\n  let isEngineRunning = false;\n  let evaluation_el = document.getElementById(\"evaluation\");\n  let announced_game_over;\n  const gameMusic = music;\n\n  setInterval(function () {\n    if (announced_game_over) {\n      return;\n    }\n\n    if (game.game_over()) {\n      announced_game_over = true;\n      alert(\"Game Over\");\n      $(\"#eval\").html(\"-\");\n    }\n  }, 1000);\n\n  function uciCmd(cmd, which) {\n    console.log(\"UCI: \" + cmd);\n\n    (which || engine).postMessage(cmd);\n  }\n  uciCmd(\"uci\");\n\n  ///TODO: Eval starting posistions. I suppose the starting positions could be different in different chess letients.\n\n  function displayStatus() {\n    let status = \"Engine: \";\n    if (!engineStatus.engineLoaded) {\n      status += \"loading...\";\n    } else if (!engineStatus.engineReady) {\n      status += \"loaded...\";\n    } else {\n      status += \"ready.\";\n    }\n\n    if (engineStatus.search) {\n      status = engineStatus.search;\n      if (engineStatus.score && displayScore) {\n        status +=\n          (engineStatus.score.substr(0, 4) === \"Mate\" ? \" \" : \" Score: \") +\n          engineStatus.score;\n      }\n    }\n    evaluation_el.textContent = status;\n    $(\"#eval\").html(engineStatus.score);\n  }\n\n  function displayClock(color, t) {\n    let isRunning = false;\n    if (time.startTime > 0 && color === time.clockColor) {\n      t = Math.max(0, t + time.startTime - Date.now());\n      isRunning = true;\n    }\n\n    let id = color === playerColor ? \"#time2\" : \"#time1\";\n    let sec = Math.ceil(t / 1000);\n    let min = Math.floor(sec / 60);\n    sec -= min * 60;\n    let hours = Math.floor(min / 60);\n    min -= hours * 60;\n    let display =\n      hours + \":\" + (\"0\" + min).slice(-2) + \":\" + (\"0\" + sec).slice(-2);\n\n    $(id).text(display);\n  }\n\n  function updateClock() {\n    displayClock(\"white\", time.wtime);\n    displayClock(\"black\", time.btime);\n    if (time.clockColor === playerColor) {\n      $(\"#time2\").addClass(\"clk__active\");\n      $(\"#time1\").removeClass(\"clk__active\");\n    } else if (time.clockColor) {\n      $(\"#time1\").addClass(\"clk__active\");\n      $(\"#time2\").removeClass(\"clk__active\");\n    }\n  }\n\n  function clockTick() {\n    updateClock();\n    let t =\n      (time.clockColor === \"white\" ? time.wtime : time.btime) +\n      time.startTime -\n      Date.now();\n    let timeToNextSecond = (t % 1000) + 1;\n    clockTimeoutID = setTimeout(clockTick, timeToNextSecond);\n  }\n\n  function stopClock() {\n    if (clockTimeoutID !== null) {\n      clearTimeout(clockTimeoutID);\n      clockTimeoutID = null;\n    }\n    if (time.startTime > 0) {\n      let elapsed = Date.now() - time.startTime;\n      time.startTime = null;\n      if (time.clockColor === \"white\") {\n        time.wtime = Math.max(0, time.wtime - elapsed);\n      } else {\n        time.btime = Math.max(0, time.btime - elapsed);\n      }\n    }\n  }\n\n  function startClock() {\n    if (game.turn() === \"w\") {\n      time.wtime += time.winc;\n      time.clockColor = \"white\";\n    } else {\n      time.btime += time.binc;\n      time.clockColor = \"black\";\n    }\n    time.startTime = Date.now();\n    clockTick();\n  }\n\n  function get_moves() {\n    let moves = \"\";\n    let history = game.history({ verbose: true });\n\n    for (let i = 0; i < history.length; ++i) {\n      let move = history[i];\n      moves +=\n        \" \" + move.from + move.to + (move.promotion ? move.promotion : \"\");\n    }\n\n    return moves;\n  }\n\n  function prepareMove() {\n    stopClock();\n    $(\"#pgn\").html(pieceToUnicode(game.pgn()));\n    board.setPosition(game.fen(), false);\n    updateClock();\n    let turn = game.turn() === \"w\" ? \"white\" : \"black\";\n    if (!game.game_over()) {\n      uciCmd(\"position startpos moves\" + get_moves());\n      if (turn !== playerColor) {\n        if (options.showEvaluation) {\n          uciCmd(\"position startpos moves\" + get_moves(), evaler);\n          evaluation_el.textContent = \"\";\n          uciCmd(\"eval\", evaler);\n        }\n        if (time && time.wtime) {\n          uciCmd(\n            \"go \" +\n              (time.depth ? \"depth \" + time.depth : \"\") +\n              \" wtime \" +\n              time.wtime +\n              \" winc \" +\n              time.winc +\n              \" btime \" +\n              time.btime +\n              \" binc \" +\n              time.binc\n          );\n        } else {\n          uciCmd(\"go \" + (time.depth ? \"depth \" + time.depth : \"\"));\n        }\n        isEngineRunning = true;\n      }\n      if (game.history().length >= 1 && !time.depth && !time.nodes) {\n        startClock();\n      }\n    }\n  }\n\n  evaler.onmessage = function (event) {\n    let line;\n\n    if (event && typeof event === \"object\") {\n      line = event.data;\n    } else {\n      line = event;\n    }\n\n    console.log(\"evaler: \" + line);\n\n    /// Ignore some output.\n    if (\n      line === \"uciok\" ||\n      line === \"readyok\" ||\n      line.substr(0, 11) === \"option name\"\n    ) {\n      return;\n    }\n\n    if (evaluation_el.textContent) {\n      evaluation_el.textContent += \"\\n\";\n    }\n    let evaluation = line.match(/^Total evaluation: (\\d+(?:\\.\\d+)?)/);\n    if (evaluation) {\n      evaluation_el.textContent = evaluation[1];\n    }\n  };\n\n  engine.onmessage = function (event) {\n    let line;\n    if (event && typeof event === \"object\") {\n      line = event.data;\n      console.log(line);\n    } else {\n      line = event;\n    }\n    console.log(\"Reply: \" + line);\n    if (line === \"uciok\") {\n      engineStatus.engineLoaded = true;\n    } else if (line === \"readyok\") {\n      engineStatus.engineReady = true;\n    } else {\n      let match = line.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbn])?/);\n      /// Did the AI move?\n      if (match) {\n        isEngineRunning = false;\n        let move = game.move({\n          from: match[1],\n          to: match[2],\n          promotion: match[3],\n        });\n        if (move) {\n          highlightMove(match[1], match[2]);\n          if (move.flags.includes(\"c\")) {\n            gameMusic.capture.play();\n          } else {\n            gameMusic.move.play();\n          }\n        }\n        prepareMove();\n        if (options.showEvaluation) {\n          uciCmd(\"eval\", evaler);\n          evaluation_el.textContent = \"\";\n        }\n        //uciCmd(\"eval\");\n        /// Is it sending feedback?\n      } else if ((match = line.match(/^info .*\\bdepth (\\d+) .*\\bnps (\\d+)/))) {\n        engineStatus.search = \"Depth: \" + match[1] + \" Nps: \" + match[2];\n      }\n\n      /// Is it sending feed back with a score?\n      if ((match = line.match(/^info .*\\bscore (\\w+) (-?\\d+)/))) {\n        let score = parseInt(match[2]) * (game.turn() === \"w\" ? 1 : -1);\n        /// Is it measuring in centipawns?\n        if (match[1] === \"cp\") {\n          engineStatus.score = (score / 100.0).toFixed(2);\n          /// Did it find a mate?\n        } else if (match[1] === \"mate\") {\n          engineStatus.score = \"#\" + Math.abs(score);\n        }\n\n        // /// Is the score bounded?\n        // if (match = line.match(/\\b(upper|lower)bound\\b/)) {\n        //     engineStatus.score = ((match[1] === 'upper') === (game.turn() === 'w') ? '<= ' : '>= ') + engineStatus.score\n        // }\n      }\n    }\n    displayStatus();\n  };\n  const highlightMove = (from, to) => {\n    board.removeMarkers(undefined, MARKER_TYPE.square);\n    board.addMarker(from, MARKER_TYPE.square);\n    board.addMarker(to, MARKER_TYPE.square);\n  };\n  let onDrop = function (source, target) {\n    let move = game.move({\n      from: source,\n      to: target,\n    });\n\n    if (move) {\n      highlightMove(source, target);\n      if (move.flags.includes(\"c\")) {\n        gameMusic.capture.play();\n      } else {\n        gameMusic.move.play();\n      }\n    }\n\n    // illegal move\n    if (move === null) return false;\n    prepareMove();\n    return true;\n  };\n\n  const props = {\n    position: \"start\", // set as fen, \"start\" or \"empty\"\n    orientation: COLOR.white, // white on bottom\n    style: {\n      cssClass: \"default\",\n      showCoordinates: true, // show ranks and files\n      borderType: BORDER_TYPE.thin, // thin: thin border, frame: wide border with coordinates in it, none: no border\n      aspectRatio: 1, // height/width. Set to `undefined`, if you want to define it only in the css.\n      moveFromMarker: MARKER_TYPE.frame, // the marker used to mark the start square\n      moveToMarker: MARKER_TYPE.frame, // the marker used to mark the square where the figure is moving to\n    },\n    responsive: true, // resizes the board based on element size\n    animationDuration: 300, // pieces animation duration in milliseconds\n    sprite: {\n      url: pieceSet, // pieces and markers are stored as svg sprite\n      size: 40, // the sprite size, defaults to 40x40px\n      cache: true, // cache the sprite inline, in the HTML\n    },\n  };\n\n  board = new Chessboard(document.getElementById(\"board\"), props);\n  board.enableMoveInput((event) => {\n    switch (event.type) {\n      case INPUT_EVENT_TYPE.moveStart:\n        return true;\n      case INPUT_EVENT_TYPE.moveDone:\n        return onDrop(event.squareFrom, event.squareTo);\n      case INPUT_EVENT_TYPE.moveCanceled:\n    }\n  }, COLOR.white);\n  return {\n    flip: () => {\n      let orientation =\n        board.getOrientation() == COLOR.white ? COLOR.black : COLOR.white;\n      board.setOrientation(orientation);\n    },\n    reset: () => {\n      game.reset();\n      uciCmd(\"setoption name Contempt value 0\");\n      //uciCmd('setoption name Skill Level value 20');\n      this.setSkillLevel(0);\n      uciCmd(\"setoption name King Safety value 0\"); /// Agressive 100 (it's now symetric)\n    },\n    loadPgn: (pgn) => {\n      game.load_pgn(pgn);\n    },\n    setPlayerColor: (color) => {\n      playerColor = color;\n      board.orientation(playerColor);\n    },\n    setSkillLevel: (skill) => {\n      let max_err, err_prob;\n\n      if (skill < 0) {\n        skill = 0;\n      }\n      if (skill > 20) {\n        skill = 20;\n      }\n\n      time.level = skill;\n\n      /// Change thinking depth allowance.\n      if (skill < 5) {\n        time.depth = \"1\";\n      } else if (skill < 10) {\n        time.depth = \"2\";\n      } else if (skill < 15) {\n        time.depth = \"3\";\n      } else {\n        /// Let the engine decide.\n        time.depth = \"\";\n      }\n\n      uciCmd(\"setoption name Skill Level value \" + skill);\n\n      ///NOTE: Stockfish level 20 does not make errors (intentially), so these numbers have no effect on level 20.\n      /// Level 0 starts at 1\n      err_prob = Math.round(skill * 6.35 + 1);\n      /// Level 0 starts at 10\n      max_err = Math.round(skill * -0.5 + 10);\n\n      uciCmd(\"setoption name Skill Level Maximum Error value \" + max_err);\n      uciCmd(\"setoption name Skill Level Probability value \" + err_prob);\n    },\n    setTime: (baseTime, inc) => {\n      time = {\n        wtime: baseTime * 1000,\n        btime: baseTime * 1000,\n        winc: inc * 1000,\n        binc: inc * 1000,\n      };\n    },\n    setDepth: (depth) => {\n      time = { depth: depth };\n    },\n    setNodes: (nodes) => {\n      time = { nodes: nodes };\n    },\n    setContempt: (contempt) => {\n      uciCmd(\"setoption name Contempt value \" + contempt);\n    },\n    setAggressiveness: (value) => {\n      uciCmd(\"setoption name Aggressiveness value \" + value);\n    },\n    setDisplayScore: (flag) => {\n      displayScore = flag;\n      displayStatus();\n    },\n    start: () => {\n      uciCmd(\"ucinewgame\");\n      uciCmd(\"isready\");\n      engineStatus.engineReady = false;\n      engineStatus.search = null;\n      displayStatus();\n      prepareMove();\n      announced_game_over = false;\n    },\n\n    undo: () => {\n      if (isEngineRunning) return false;\n      game.undo();\n      game.undo();\n      engineStatus.search = null;\n      displayStatus();\n      prepareMove();\n      return true;\n    },\n\n    replay: (duration = 300) => {\n      let i = 0;\n      let h = game.history();\n      game.reset();\n      board.setPosition(game.fen());\n      const update = () => {\n        if (i < h.length) {\n          game.move(h[i]);\n          board.setPosition(game.fen());\n        } else {\n          clearInterval(r);\n        }\n        i += 1;\n      };\n      const r = setInterval(update, duration);\n    },\n  };\n};\n","export const pieceToUnicode = (p) => {\n  if (!p) return \"\";\n  if (!typeof p === \"string\") return \"\";\n  // ♔♕♖♗♘♙ ♚♛♜♝♞♟\n  p = p.replace(/\\d+\\./g, \"<span class='text_muted'>$&</span>\");\n  return p\n    .replace(/N/g, \"♞\")\n    .replace(/Q/g, \"♛\")\n    .replace(/B/g, \"♝\")\n    .replace(/R/g, \"♜\")\n    .replace(/K/g, \"♚\");\n};\n","import React from \"react\";\nimport \"./index.css\";\nimport UserProfile from \"./user_profile\";\nimport { engineGame } from \"../../utils/engineGame\";\n\nfunction Game() {\n  const [state] = React.useState({\n    player2: {\n      profileImage: \"assets/av.jpeg\",\n      username: \"stockfish\",\n      time: 10,\n      id: \"1\",\n    },\n    player1: {\n      profileImage: \"assets/av.jpeg\",\n      username: \"Player 1\",\n      time: 10,\n      id: \"2\",\n    },\n  });\n  const [gameState, setGameState] = React.useState({\n    isPlaying: false,\n    isGameOver: false,\n    orientation: \"white\",\n  });\n\n  const game = React.useRef();\n\n  const flip = () => {\n    game.current.flip();\n    setGameState({\n      ...gameState,\n      orientation: gameState.orientation === \"white\" ? \"black\" : \"white\",\n    });\n  };\n\n  React.useEffect(() => {\n    game.current = engineGame();\n  }, []);\n  const [gameInfoTab, setGameInfoTab] = React.useState({\n    id: 0,\n    name: \"moves\",\n  });\n\n  return (\n    <div className=\"game two_column_layout\">\n      <div className=\"two_column_layout__item\">\n        <UserProfile\n          user={\n            gameState.orientation === \"white\" ? state.player1 : state.player2\n          }\n        />\n        <div className=\"board__container\">\n          <div id=\"board\"></div>\n        </div>\n        <UserProfile\n          user={\n            gameState.orientation === \"white\" ? state.player2 : state.player1\n          }\n        />\n      </div>\n      <div className=\"controls two_column_layout__item\">\n        <div className=\"controls_top\">\n          <span id=\"eval\"> </span> <div> {gameInfoTab.name} </div>\n          <div className=\"tab_controls\">\n            <span\n              className={`material-icons ${\n                gameInfoTab.id === 1 ? \"tab_control_active\" : \"\"\n              }`}\n              title=\"replay\"\n              onClick={() =>\n                setGameInfoTab({ id: 1, name: \"Game information\" })\n              }\n            >\n              info\n            </span>\n            <span\n              className={`material-icons ${\n                gameInfoTab.id === 0 ? \"tab_control_active\" : \"\"\n              }`}\n              title=\"replay\"\n              onClick={() => setGameInfoTab({ id: 0, name: \"Game name\" })}\n            >\n              description\n            </span>\n            <span\n              className={`material-icons ${\n                gameInfoTab.id === 2 ? \"tab_control_active\" : \"\"\n              }`}\n              title=\"replay\"\n              onClick={() => setGameInfoTab({ id: 2, name: \"Game analysis\" })}\n            >\n              legend_toggle\n            </span>\n          </div>\n        </div>\n        <div className=\"controls_bottom\">\n          <div className=\"tab_items\">\n            <div\n              className={`move__items absolute ${\n                gameInfoTab.id === 0 ? \"tab_active\" : \"\"\n              }`}\n              id=\"pgn\"\n            >\n              no move made yet\n            </div>\n            <div\n              className={`game_info ${\n                gameInfoTab.id === 1 ? \"tab_active\" : \"\"\n              }`}\n              id=\"engineStatus\"\n            >\n              <div>\n                {state.player1.username} <span className=\"white\"> </span> vs\n                &nbsp; &nbsp; {state.player2.username}\n                <span className=\"black\"> </span>\n                <span id=\"result\"> 1 - 0 </span>\n              </div>\n              <div>\n                <small className=\"my-0\"> Replay the game </small>\n              </div>\n              <div className=\"text_center\">\n                <div>\n                  <button onClick={() => game.current.replay(1000)}>\n                    {\" \"}\n                    slow{\" \"}\n                  </button>\n                  <button onClick={() => game.current.replay(700)}>\n                    {\" \"}\n                    realtime{\" \"}\n                  </button>\n                  <button onClick={() => game.current.replay(500)}>\n                    {\" \"}\n                    fast{\" \"}\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div\n              className={`absolute ${gameInfoTab.id === 2 ? \"tab_active\" : \"\"}`}\n              id=\"evaluation\"\n            >\n              evaluation\n            </div>\n          </div>\n        </div>\n        <div className=\"game-controls\" onScroll={(e) => e.preventDefault()}>\n          <span\n            onClick={() => game.current.undo()}\n            className=\"material-icons\"\n            title=\"undo\"\n          >\n            undo\n          </span>\n          <span onClick={flip}>\n            <svg\n              width=\"20\"\n              height=\"20\"\n              preserveAspectRatio=\"xMidYMid meet\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                d=\"M5 6.09v12l-1.29-1.3a1 1 0 0 0-1.42 1.42l3 3a1 1 0 0 0 1.42 0l3-3a1 1 0 0 0 0-1.42a1 1 0 0 0-1.42 0L7 18.09v-12A1.56 1.56 0 0 1 8.53 4.5H11a1 1 0 0 0 0-2H8.53A3.56 3.56 0 0 0 5 6.09zm9.29-.3a1 1 0 0 0 1.42 1.42L17 5.91v12a1.56 1.56 0 0 1-1.53 1.59H13a1 1 0 0 0 0 2h2.47A3.56 3.56 0 0 0 19 17.91v-12l1.29 1.3a1 1 0 0 0 1.42 0a1 1 0 0 0 0-1.42l-3-3a1 1 0 0 0-1.42 0z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n          </span>\n          <span className=\"material-icons\"> skip_previous </span>\n          <span className=\"material-icons\"> skip_next </span>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Game;\n","import React from \"react\";\nimport \"./index.css\";\nimport { Chessboard } from \"../../utils/chessboard/Chessboard\";\n\nfunction Home() {\n  const board = React.useRef();\n\n  React.useEffect(() => {\n    board.current = new Chessboard(document.getElementById(\"board\"));\n  });\n  return (\n    <div className=\"home two_column_layout\">\n      <div className=\"board__section two_column_layout__item\">\n        <div className=\"board__container\">\n          <div id=\"board\"></div>\n        </div>\n      </div>\n      <div className=\"home__info two_column_layout__item\">\n        <h1 className=\"text_center\">Puzzle of the day</h1>\n        <div>\n          <button className=\"home__btn_primary mx_auto\">Solve</button>\n          <button className=\"home__btn_secondary mx_auto\">Learn</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","class PuzzleParser {\n  //   if (move === null) return \"snapback\";\n  // 00008,r6k/pp2r2p/4Rp1Q/3p4/8/1N1P2R1/PqP2bPP/7K b - - 0 24,f2g3 e6e7 b2b1 b3c1 b1c1 h6c1,1788,76,92,456,crushing hangingPiece long middlegame,https://lichess.org/787zsVup/black#48\n  puzzleId;\n  fen;\n  moves = [];\n  rating;\n  ratingDeviation;\n  popularity;\n  nbPlays;\n  themes;\n  gameUr;\n  constructor(puzzleString) {\n    let tokens = puzzleString.split(\",\");\n    this.puzzleId = tokens[0];\n    this.fen = tokens[1];\n    this.moves = tokens[2].split(/\\s+/);\n    this.rating = tokens[3];\n    this.ratingDeviation = tokens[4];\n    this.popularity = tokens[5];\n    this.nbPlays = tokens[6];\n    this.themes = tokens[7];\n    this.gameUr = tokens[8];\n    this.currentMove = 0;\n    \n  }\n  getCurrentMove() {\n    let match = this.moves[this.currentMove].match(\n      /([a-h][1-8])([a-h][1-8])([qrbn])?/\n    );\n    return { from: match[1], to: match[2], promotion: match[3] };\n  }\n  complete() {\n    return this.currentMove === this.moves.length;\n  }\n}\nexport default PuzzleParser;\n","export default __webpack_public_path__ + \"static/media/wK.1fe87bb0.svg\";","export default __webpack_public_path__ + \"static/media/bK.b68dab78.svg\";","import React from \"react\";\nimport \"./index.css\";\nimport PuzzleParser from \"../../utils/puzzleParse\";\nimport Chess from \"chess.js\";\nimport wK from \"../../assets/images/wK.svg\";\nimport bK from \"../../assets/images/bK.svg\";\nimport {\n  BORDER_TYPE,\n  Chessboard,\n  COLOR,\n  INPUT_EVENT_TYPE,\n  MARKER_TYPE,\n} from \"../../utils/chessboard/Chessboard\";\nimport pieceSet from \"../../assets/images/chessboard-sprite-staunty.svg\";\n\nfunction Puzzle() {\n  const board = React.useRef();\n  const [solve, setSolve] = React.useState(\"Your turn\");\n  const puzzle = new PuzzleParser(\n    \"0000D,5rk1/1p3ppp/pq3b2/8/8/1P1Q1N2/P4PPP/3R2K1 w - - 2 27,d3d6 f8d8 d6d8 f6d8,1521,73,96,8483,advantage endgame,https://lichess.org/F8M8OS71#53\"\n  );\n  const [complete, setComplete] = React.useState(false);\n  const chess = Chess(puzzle.fen);\n  chess.move(puzzle.getCurrentMove());\n  puzzle.currentMove += 1;\n  const [playerColor] = React.useState(chess.turn());\n  const [move, setMove] = React.useState({});\n  const highlightMove = (from, to) => {\n    board.current.removeMarkers(undefined, MARKER_TYPE.square);\n    board.current.addMarker(from, MARKER_TYPE.square);\n    board.current.addMarker(to, MARKER_TYPE.square);\n  };\n  const onDrop = (source, destination) => {\n    let move = chess.move({\n      from: source,\n      to: destination,\n    });\n    if (move) {\n      let cMove = puzzle.getCurrentMove();\n      setMove(move);\n      if (cMove.from + cMove.to === source + destination) {\n        highlightMove(cMove.from, cMove.to);\n        puzzle.currentMove += 1;\n        setSolve(\"Correct\");\n        board.current.setPosition(chess.fen(), false);\n\n        if (!puzzle.complete()) {\n          setTimeout(() => {\n            let move = chess.move(puzzle.getCurrentMove());\n            board.current.setPosition(chess.fen(), false);\n            highlightMove(move.from, move.to);\n            puzzle.currentMove += 1;\n          }, 300);\n        }\n        setComplete(puzzle.complete());\n      } else {\n        setSolve(\"Incorrect\");\n        chess.undo();\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n  function onDragStart(source, piece, position, orientation) {\n    // do not pick up pieces if the game is over\n    if (chess.game_over() || puzzle.complete()) return false;\n    // only pick up pieces for White\n    if (!piece.includes(playerColor)) return false;\n  }\n\n  let props = {\n    setPosition: \"start\", // set as fen, \"start\" or \"empty\"\n    orientation: COLOR.white, // white on bottom\n    style: {\n      cssClass: \"default\",\n      showCoordinates: true, // show ranks and files\n      borderType: BORDER_TYPE.thin, // thin: thin border, frame: wide border with coordinates in it, none: no border\n      aspectRatio: 1, // height/width. Set to `undefined`, if you want to define it only in the css.\n      moveFromMarker: MARKER_TYPE.frame, // the marker used to mark the start square\n      moveToMarker: MARKER_TYPE.frame, // the marker used to mark the square where the figure is moving to\n    },\n    responsive: true, // resizes the board based on element size\n    animationDuration: 300, // pieces animation duration in milliseconds\n    sprite: {\n      url: pieceSet, // pieces and markers are stored as svg sprite\n      size: 40, // the sprite size, defaults to 40x40px\n      cache: true, // cache the sprite inline, in the HTML\n    },\n  };\n\n  React.useEffect(() => {\n    board.current = new Chessboard(document.getElementById(\"board\"), props);\n    board.current.setOrientation(playerColor);\n    board.current.setPosition(chess.fen());\n    board.current.enableMoveInput((event) => {\n      switch (event.type) {\n        case INPUT_EVENT_TYPE.moveStart:\n          // markPosibleMoves(event.square);\n          return true;\n        case INPUT_EVENT_TYPE.moveDone:\n          return onDrop(event.squareFrom, event.squareTo);\n        case INPUT_EVENT_TYPE.moveCanceled:\n      }\n    }, playerColor);\n\n    return () => {\n      board.current.destroy();\n    };\n  }, []);\n\n  const viewSolution = () => {\n    chess.move(puzzle.getCurrentMove());\n    board.current.position(chess.fen(), false);\n    puzzle.currentMove += 1;\n    setSolve(\"Retry\");\n    setComplete(true);\n  };\n\n  return (\n    <div className=\"puzzle two_column_layout\">\n      <div className=\"board__section two_column_layout__item\">\n        <div className=\"board__container\">\n          <div id=\"board\"></div>\n        </div>\n      </div>\n      <div className=\"puzzle__info align_self_stretch b_dark two_column_layout__item d_flex flex_column\">\n        <div\n          className={`puzzle__top ${\n            solve === \"Correct\" ? \"good\" : solve === \"Incorrect\" ? \"bad\" : \"\"\n          }`}\n        >\n          {solve === \"Correct\" && (\n            <>\n              <span className=\"material-icons\">done</span>\n              <div>\n                <span>{`${move.san} Is correct`}</span>\n                <small>{complete ? \"Sucess!\" : \"keep going..\"}</small>\n              </div>\n            </>\n          )}\n          {solve === \"Incorrect\" && (\n            <>\n              <span className=\"material-icons\">close</span>\n              <div>\n                <span>{`${move.san} Incorrect `}</span>\n                <small>try again</small>\n              </div>\n            </>\n          )}\n          {solve === \"Your turn\" && (\n            <>\n              <img\n                src={playerColor === \"w\" ? wK : bK}\n                alt={`${playerColor} to move`}\n                className=\"piece_icon\"\n              />\n              <div>\n                <span>Your turn</span>\n                <small>\n                  {playerColor === \"w\" ? \"white to play\" : \"black to play\"}\n                </small>\n              </div>\n            </>\n          )}\n          {solve === \"Retry\" && (\n            <>\n              <span className=\"material-icons\">autorenew</span>\n              <div>\n                <span>Retry</span>\n                <small>try again</small>\n              </div>\n            </>\n          )}\n        </div>\n        <div className=\"expand\">\n          <div className=\"card_dark\">\n            <div className=\"d_flex align_items_center justify_content_between\">\n              <h3>Opening</h3>\n              <span className=\"material-icons\">\n                keyboard_double_arrow_right\n              </span>\n            </div>\n            <span className=\"text__muted\">lorem</span>\n          </div>\n        </div>\n        <div className=\"d_flex\">\n          {complete ? (\n            <button className=\"active expand light_btn\">\n              <span className=\"material-icons\">east</span>\n            </button>\n          ) : (\n            <button\n              onClick={viewSolution}\n              className=\"expand d_flex justify_content_center align_items_center\"\n            >\n              <span className=\"material-icons\">help_outline</span>\n              &nbsp; view solution\n            </button>\n          )}\n          <button>\n            <span className=\"material-icons\">info</span>\n          </button>\n          <button>\n            <span className=\"material-icons\">settings</span>\n          </button>\n        </div>\n        <div className=\"tool_bar\">\n          <span className=\"material-icons\">settings</span>\n          <span className=\"material-icons\">settings</span>\n        </div>\n      </div>\n      <img src={pieceSet}/>\n    </div>\n  );\n}\n\nexport default Puzzle;\n","import React from \"react\";\nimport data from \"../../assets/data/category.json\";\nimport \"./index.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { APP_ROUTES } from \"../../utils/constants\";\n\nfunction Practice() {\n  const nagigator = useNavigate();\n  return (\n    <div className=\"practice\">\n      <h2 className=\"text_center\">Practice</h2>\n      <div className=\"text_center text_muted\">\n        Improve your chess by solving puzzles\n      </div>\n      <div className=\"practice__categories\">\n        {Object.keys(data).map((key, i) => {\n          return (\n            <React.Fragment key={i}>\n              <h2 className=\"category_name text_muted\">{key}</h2>\n              <div className={`category__items c${i}`}>\n                {data[key].map((item, i) => (\n                  <Card\n                    item={item}\n                    onClick={() => {\n                      nagigator({\n                        pathname: APP_ROUTES.lessons,\n                        search: \"\",\n                        hash: \"\",\n                        state: { fromPopup: true },\n                      });\n                    }}\n                  />\n                ))}\n              </div>\n            </React.Fragment>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Practice;\n\nconst Card = ({ item, onClick }) => {\n  return (\n    <div className=\"col-lg-3 col-md-2 col-12\" onClick={onClick}>\n      <div className=\"practice__card \">\n        <div>\n          <div className=\"practice__card__title\">{item.name}</div>\n          <div className=\"text_muted\">{item.description}</div>\n        </div>\n        <div>\n          <span className=\"material-icons\">arrow_forward_ios</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/wR.945bc261.svg\";","export default __webpack_public_path__ + \"static/media/wN.b09c8880.svg\";","export default __webpack_public_path__ + \"static/media/wB.987ef67f.svg\";","export default __webpack_public_path__ + \"static/media/wK.1fe87bb0.svg\";","export default __webpack_public_path__ + \"static/media/wQ.5855fbef.svg\";","export default __webpack_public_path__ + \"static/media/wP.ea86bf88.svg\";","export default __webpack_public_path__ + \"static/media/bR.ff8849ae.svg\";","export default __webpack_public_path__ + \"static/media/bN.d9247056.svg\";","export default __webpack_public_path__ + \"static/media/bB.0a6a98a0.svg\";","export default __webpack_public_path__ + \"static/media/bK.b68dab78.svg\";","export default __webpack_public_path__ + \"static/media/bQ.1161205c.svg\";","export default __webpack_public_path__ + \"static/media/bP.a71ad306.svg\";","import wr from \"../assets/pieces/wR.svg\";\nimport wn from \"../assets/pieces/wN.svg\";\nimport wb from \"../assets/pieces/wB.svg\";\nimport wk from \"../assets/pieces/wK.svg\";\nimport wq from \"../assets/pieces/wQ.svg\";\nimport wp from \"../assets/pieces/wP.svg\";\nimport br from \"../assets/pieces/bR.svg\";\nimport bn from \"../assets/pieces/bN.svg\";\nimport bb from \"../assets/pieces/bB.svg\";\nimport bk from \"../assets/pieces/bK.svg\";\nimport bq from \"../assets/pieces/bQ.svg\";\nimport bp from \"../assets/pieces/bP.svg\";\n\nconst pieceTheme = (piece) => {\n  return {\n    wb,\n    wk,\n    wn,\n    wp,\n    wr,\n    wq,\n    bb,\n    br,\n    bk,\n    bq,\n    bp,\n    bn,\n  }[piece];\n};\n\nexport default pieceTheme;\n","import React from \"react\";\nimport data from \"../../assets/data/basics.json\";\nimport \"./index.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport pieceTheme from \"../../utils/pieceTheme\";\nimport {APP_ROUTES} from '../../utils/constants'\n\nfunction Basics() {\n  const nagigator = useNavigate();\n  return (\n    <div className=\"practice basic\">\n      <h2 className=\"text_center\">Practice</h2>\n      <div className=\"text_center text_muted\">\n        Improve your chess by solving puzzles\n      </div>\n      <div className=\"practice__categories\">\n        {Object.keys(data).map((key, i) => {\n          return (\n            <React.Fragment key={i}>\n              <h2 className=\"category_name text_muted\">{key}</h2>\n              <div className={`category__items c${i}`}>\n                {data[key].map((item, i) => (\n                  <Card\n                    item={item}\n                    onClick={() => {\n                      nagigator({\n                        pathname: APP_ROUTES.lessons,\n                        search: \"\",\n                        hash: \"\",\n                        state: { fromPopup: true },\n                      });\n                    }}\n                  />\n                ))}\n              </div>\n            </React.Fragment>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Basics;\n\nconst Card = ({ item, onClick }) => {\n  return (\n    <div className=\"col-lg-3 col-md-2 col-12\" onClick={onClick}>\n      <div className=\"practice__card \">\n        <div>\n          <img src={pieceTheme(item.icon)} alt={item.name} className=\"practice_icon\" />\n        </div>\n        <div className=\"expand\">\n          <div className=\"practice__card__title\">{item.name}</div>\n          <div className=\"text_muted\">{item.description}</div>\n        </div>\n        <span className=\"material-icons\">arrow_forward_ios</span>\n      </div>\n    </div>\n  );\n};\n","\n\nexport const squareToIndex = (square) => {\n  const file = square.substr(0, 1).charCodeAt(0) - 97;\n  const rank = square.substr(1, 1) - 1;\n  return 8 * rank + file;\n};\n\nexport const drawArrow = (parent, p1, p2, sqSize) => {\n  let x1 = p1.x,\n    x2 = p2.x,\n    y1 = p1.y,\n    y2 = p2.y;\n  if (x1 === x2) {\n    x1 += sqSize / 2;\n    x2 += sqSize / 2;\n    y1 += sqSize / 2;\n    y2 += y1 > y2 ? sqSize : 0;\n  } else {\n    x1 += sqSize / 2;\n    x2 += x1 > x2 ? sqSize : 0;\n    y1 += sqSize / 2;\n    y2 += sqSize / 2;\n  }\n  let line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n  line.setAttribute(\"id\", \"line2\");\n  line.setAttribute(\"x1\", x1);\n  line.setAttribute(\"y1\", y1);\n  line.setAttribute(\"x2\", x2);\n  line.setAttribute(\"y2\", y2);\n  line.setAttribute(\"stroke\", \"#e8353566 \");\n  line.setAttribute(\"marker-end\", \"url(#arrowhead)\");\n  line.setAttribute(\"stroke-width\", \"10\");\n  line.setAttribute(\"stroke-linecap\", \"round\");\n  parent.appendChild(line);\n};\n","import React from \"react\";\nimport pieceTheme from \"../../utils/pieceTheme\";\nimport data from \"../../assets/data/basics.json\";\nimport {\n  BORDER_TYPE,\n  Chessboard,\n  COLOR,\n  INPUT_EVENT_TYPE,\n  MARKER_TYPE,\n} from \"../../utils/chessboard/Chessboard\";\nimport pieceSet from \"../../assets/images/chessboard-sprite-staunty.svg\";\nimport music from \"../../utils/gameSound\";\nimport Chess from \"chess.js\";\nimport rook from \"../../assets/data/rook.json\";\nimport { moveAnotation } from \"../../App\";\nimport { drawArrow, squareToIndex } from \"../../utils\";\n\nfunction PracticeLessons() {\n  let board = React.useRef();\n  let arrowState = [];\n  let highlightedSquare;\n  let arrowGroup = React.useRef();\n  let timeId;\n  const game = Chess();\n\n  const [currentLesson, setLesson] = React.useState(0);\n  const markPosibleMoves = (from) => {\n    let moves = game.moves({\n      square: from,\n      verbose: true,\n    });\n    board.current.removeMarkers(undefined, MARKER_TYPE.dot);\n    moves.forEach((move) => board.current.addMarker(move.to, MARKER_TYPE.dot));\n  };\n  const solveSucess = (sq) => {\n    if (sq === highlightedSquare) {\n      // board.current.addMarker(sq, moveAnotation);\n      board.current.removeMarkers(undefined, MARKER_TYPE.circle);\n    }\n  };\n  const randomMove = () => {\n    board.current.removeMarkers(undefined, undefined);\n    let moves = game.moves({\n      verbose: true,\n    });\n    let move = moves[Math.floor(Math.random() * moves.length)];\n    let newMove = game.remove(move.from);\n    moves.map((m) => {\n      board.current.addMarker(m.to, MARKER_TYPE.circle);\n    });\n    setTimeout(() => {\n      game.put(newMove, move.to);\n      board.current.setPosition(game.fen());\n      board.current.addMarker(move.from, MARKER_TYPE.square);\n      board.current.addMarker(move.to, MARKER_TYPE.square);\n      setTimeout(() => {\n        board.current.removeMarkers(undefined, MARKER_TYPE.circle);\n      }, 300);\n    }, 1500);\n\n    timeId = window.setTimeout(randomMove, 3000);\n  };\n  let onDrop = function (source, target) {\n    let moves = game.moves({\n      square: source,\n      verbose: true,\n    });\n    board.current.removeMarkers(undefined, MARKER_TYPE.dot);\n    solveSucess(target);\n    for (let i = 0; i < moves.length; i++) {\n      if (target === moves[i].to) {\n        let move = game.remove(source);\n        game.put(move, target);\n        music.move.play();\n        return true;\n      }\n    }\n\n    return false;\n  };\n  const drawArrows = () => {\n    arrowGroup.current.querySelectorAll(\"line\").forEach((line) => {\n      arrowGroup.current.removeChild(line);\n    });\n    arrowState.forEach((arrow) => {\n      let p1 = board.current.view.squareIndexToPoint(squareToIndex(arrow.from));\n      let p2 = board.current.view.squareIndexToPoint(squareToIndex(arrow.to));\n      drawArrow(arrowGroup.current, p1, p2, board.current.view.squareWidth);\n    });\n  };\n\n  const selectedCategory = \"Movement\";\n  const selectedItem = rook;\n  const updateLesson = (i) => {\n    setLesson(i);\n  };\n  const next = () => {\n    setLesson(Math.min(currentLesson + 1, selectedItem.lessons.length - 1));\n  };\n\n  const prev = () => {\n    setLesson(Math.max(currentLesson - 1, 0));\n  };\n  React.useEffect(() => {\n    const props = {\n      setPosition: \"start\", // set as fen, \"start\" or \"empty\"\n      orientation: COLOR.white, // white on bottom\n      style: {\n        cssClass: \"default\",\n        showCoordinates: true, // show ranks and files\n        borderType: BORDER_TYPE.thin, // thin: thin border, frame: wide border with coordinates in it, none: no border\n        aspectRatio: 1, // height/width. Set to `undefined`, if you want to define it only in the css.\n        moveFromMarker: MARKER_TYPE.frame, // the marker used to mark the start square\n        moveToMarker: MARKER_TYPE.frame, // the marker used to mark the square where the figure is moving to\n      },\n      responsive: true, // resizes the board based on element size\n      animationDuration: 300, // pieces animation duration in milliseconds\n      sprite: {\n        url: pieceSet, // pieces and markers are stored as svg sprite\n        size: 40, // the sprite size, defaults to 40x40px\n        cache: true, // cache the sprite inline, in the HTML\n      },\n    };\n    let fen = selectedItem.lessons[currentLesson].fen;\n    game.load(fen);\n    board.current = new Chessboard(document.getElementById(\"board\"), props);\n    board.current.setPosition(game.fen());\n    if (selectedItem.lessons[currentLesson].action !== false) {\n      board.current.enableMoveInput((event) => {\n        switch (event.type) {\n          case INPUT_EVENT_TYPE.moveStart:\n            markPosibleMoves(event.square);\n            return true;\n          case INPUT_EVENT_TYPE.moveDone:\n            return onDrop(event.squareFrom, event.squareTo);\n          case INPUT_EVENT_TYPE.moveCanceled:\n        }\n      }, COLOR.white);\n    }\n    arrowGroup.current = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"g\"\n    );\n    if (selectedItem.lessons[currentLesson].action === \"random_move\") {\n      timeId = window.setTimeout(randomMove, 2000);\n    } else if (selectedItem.lessons[currentLesson].action === \"try_easy\") {\n      let moves = game.moves({\n        verbose: true,\n      });\n      let rMove = moves[Math.floor(Math.random() * moves.length)];\n      highlightedSquare = rMove.to;\n      highlightedSquare &&\n        board.current.addMarker(highlightedSquare, MARKER_TYPE.circle);\n      arrowState = [\n        {\n          from: rMove.from,\n          to: rMove.to,\n        },\n      ];\n    } else if (selectedItem.lessons[currentLesson].action === \"try_hard\") {\n      if (!selectedItem.lessons[currentLesson].moveTo) {\n        let moves = game.moves({\n          verbose: true,\n        });\n        highlightedSquare = moves[Math.floor(Math.random() * moves.length)].to;\n      } else {\n        highlightedSquare = selectedItem.lessons[currentLesson].moveTo;\n      }\n      board.current.addMarker(highlightedSquare, MARKER_TYPE.circle);\n    }\n    arrowGroup.current.setAttribute(\"class\", \"arrows\");\n    board.current.view.svg.appendChild(arrowGroup.current);\n    // arrowState = selectedItem.lessons[currentLesson].arrows;\n    drawArrows();\n    // selectedItem.lessons[currentLesson].highlighted_squares.forEach((a) => {\n    //   board.current.addMarker(a, MARKER_TYPE.circle);\n    // });\n\n    return () => {\n      board.current.destroy();\n      window.clearTimeout(timeId);\n    };\n  }, [currentLesson]);\n\n  const openListItem = (id) => {\n    const expanded = document.querySelector(`.list__expand`);\n    const toExpand = document.querySelector(`#item-${id} ul`);\n    toExpand.classList.replace(\"colapsed\", \"list__expand\");\n    if (expanded) {\n      expanded.classList.replace(\"list__expand\", \"colapsed\");\n    }\n  };\n  return (\n    <div className=\"practice two_column_layout\">\n      <div className=\"board__section two_column_layout__item\">\n        <ul className=\"page\">\n          <li className=\"page__btn\" onClick={prev}>\n            <span className=\"material-icons\">chevron_left</span>\n          </li>\n          {selectedItem.lessons.map((lesson, i) => (\n            <li\n              onClick={() => updateLesson(i)}\n              className={`page__numbers ${\n                currentLesson === i ? \"active_item\" : \"\"\n              } `}\n            >\n              {i + 1}\n            </li>\n          ))}\n\n          <li className=\"page__btn\" onClick={next}>\n            <span className=\"material-icons\">chevron_right</span>\n          </li>\n        </ul>\n        <div className=\"board__container\">\n          <div id=\"board\"></div>\n        </div>\n        <p className=\"description\">\n          <span>{selectedItem.lessons[currentLesson].instruction}</span>\n        </p>\n      </div>\n      <div className=\"two_column_layout__item lessons_info\">\n        <div className=\"lessons_info__top\">\n          <img src={pieceTheme(\"wr\")} className=\"piece_icon\" />\n          <div>\n            <span className=\"d_block\">{selectedItem.name}</span>\n            <small>{selectedItem.description}</small>\n          </div>\n        </div>\n\n        <div>\n          {Object.keys(data).map((key, i) => (\n            <div\n              className={`tile ${\n                key === selectedCategory ? \"active_tile\" : \"\"\n              }`}\n              key={i}\n              onClick={() => openListItem(i)}\n              id={`item-${i}`}\n            >\n              {console.log(selectedCategory)}\n              <div>{key}</div>\n              <ul className=\"colapsed \">\n                {data[key].map((item) => (\n                  <li>{item.name}</li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PracticeLessons;\n","import {\n  BORDER_TYPE,\n  Chessboard,\n  COLOR,\n  INPUT_EVENT_TYPE,\n  MARKER_TYPE,\n  PIECE,\n  SQUARE_SELECT_TYPE,\n} from \"../chessboard/Chessboard\";\nimport pieceSet from \"../../assets/images/chessboard-sprite-staunty.svg\";\nimport { drawArrow, squareToIndex } from \"..\";\n\nexport const EDIT_MODE = {\n  move: \"move\",\n  erase: \"erase\",\n  wk: \"wk\",\n  wq: \"wq\",\n  wr: \"wr\",\n  wb: \"wb\",\n  wn: \"wn\",\n  wp: \"wp\",\n  bk: \"bk\",\n  bq: \"bq\",\n  br: \"br\",\n  bb: \"bb\",\n  bn: \"bn\",\n  bp: \"bp\",\n  mark: \"mark\",\n};\n\nexport class FenEditor {\n  arrowMarkers = [];\n  constructor(conf) {\n    this.editMode = EDIT_MODE.move;\n    this.fen = conf.fen;\n\n    this.marker = {\n      markerType: MARKER_TYPE.circle,\n    };\n    const props = {\n      position: this.fen || \"start\", // set as fen, \"start\" or \"empty\"\n      orientation: COLOR.white, // white on bottom\n      style: {\n        cssClass: \"default\",\n        showCoordinates: true, // show ranks and files\n        borderType: BORDER_TYPE.thin, // thin: thin border, frame: wide border with coordinates in it, none: no border\n        aspectRatio: 1, // height/width. Set to `undefined`, if you want to define it only in the css.\n        moveFromMarker: MARKER_TYPE.frame, // the marker used to mark the start square\n        moveToMarker: MARKER_TYPE.frame, // the marker used to mark the square where the figure is moving to\n      },\n      responsive: true, // resizes the board based on element size\n      animationDuration: 300, // pieces animation duration in milliseconds\n      sprite: {\n        url: pieceSet, // pieces and markers are stored as svg sprite\n        size: 40, // the sprite size, defaults to 40x40px\n        cache: true, // cache the sprite inline, in the HTML\n      },\n    };\n    this.board = new Chessboard(document.getElementById(conf.eleId), props);\n    this.arrowMarkersGroup = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"g\"\n    );\n    this.arrowMarkersGroup.setAttribute(\"class\", \"arrows\");\n    this.board.view.svg.appendChild(this.arrowMarkersGroup);\n    this.board.enableMoveInput((event) => {\n      if (this.editMode !== EDIT_MODE.move) {\n        return false;\n      }\n      switch (event.type) {\n        case INPUT_EVENT_TYPE.moveStart:\n          return true;\n        case INPUT_EVENT_TYPE.moveDone:\n          return true;\n        case INPUT_EVENT_TYPE.moveCanceled:\n      }\n    });\n    this.board.enableSquareSelect((event) => {\n      if (this.editMode === EDIT_MODE.mark) {\n        // if (event.type === SQUARE_SELECT_TYPE.primary) {\n        //   this.marker.markerType = MARKER_TYPE.circle;\n        // } else {\n        // }\n        const markersOnSquare = this.board.getMarkers(\n          event.square,\n          this.marker.markerType\n        );\n        if (markersOnSquare.length > 0) {\n          this.board.removeMarkers(event.square, this.marker.markerType);\n        } else {\n          this.board.addMarker(event.square, this.marker.markerType);\n        }\n      } else {\n        this.board.removeMarkers(undefined, MARKER_TYPE.circle);\n\n        if (this.editMode === EDIT_MODE.erase) {\n          this.board.setPiece(event.square, null);\n        } else if (this.editMode === EDIT_MODE.move) {\n        } else {\n          this.board.setPiece(event.square, this.editMode);\n        }\n        conf.onboardChange(this.board.getPosition());\n      }\n    });\n  }\n  setEditMode(mode) {\n    this.editMode = mode;\n  }\n  setMarker(color = \"\", type = \"\") {\n    this.marker.markerType = MARKER_TYPE[type];\n    this.marker.color = color;\n    console.log(type);\n  }\n  drawMarker() {\n    const drawArrows = () => {\n      console.log(this.arrowMarkers);\n      this.arrowMarkersGroup.querySelectorAll(\"line\").forEach((line) => {\n        this.arrowMarkersGroup.removeChild(line);\n      });\n      this.arrowMarkers.forEach((arrow) => {\n        let p1 = this.board.view.squareIndexToPoint(squareToIndex(arrow.from));\n        let p2 = this.board.view.squareIndexToPoint(squareToIndex(arrow.to));\n        drawArrow(this.arrowMarkersGroup, p1, p2, this.board.view.squareWidth);\n      });\n    };\n  }\n}\n// board.setPiece(\"e4\", PIECE.blackKnight)\nexport default FenEditor;\n","import React from \"react\";\nimport { MARKER_TYPE } from \"../../utils/chessboard/Chessboard\";\nimport FenEditor, { EDIT_MODE } from \"../../utils/fen_editor\";\nimport pieceTheme from \"../../utils/pieceTheme\";\nimport \"./index.css\";\n\nfunction BoardEditor() {\n  // b KQkq e3 0 1\n  let gameInfo = {\n    color: \"w\",\n    enPassant: \"-\",\n    fullMove: \"1\",\n    halfMove: \"0\",\n    bCL: \"q\",\n    bCS: \"k\",\n    wCL: \"Q\",\n    wCS: \"K\",\n    casling: \"KQkq\",\n  };\n  const [casling, setCasling] = React.useState({\n    Q: \"Q\",\n    K: \"K\",\n    q: \"q\",\n    k: \"k\",\n  });\n  const caslingChange = (e) => {\n    let v = e.target.value;\n    setCasling({ ...casling, [v]: e.target.checked ? v : \"\" });\n    genFen(fenEditor.current.board.getPosition());\n  };\n  let fenEditor = React.useRef();\n  const [editMode, setEditMode] = React.useState();\n  const [currentFen, setCurrentFen] = React.useState();\n  const updateEditMove = (mode) => {\n    setEditMode(mode);\n    fenEditor.current.setEditMode(mode);\n  };\n  const genFen = (position) => {\n    const s = gameInfo;\n    let casling_ = `${casling.K}${casling.Q}${casling.k}${casling.q}`;\n    console.log(casling);\n    return [\n      position,\n      s.color,\n      casling_ || \"-\",\n      s.enPassant,\n      s.halfMove,\n      s.fullMove,\n    ].join(\"  \");\n  };\n  const boardChange = (position) => {\n    setCurrentFen(genFen(position));\n  };\n  React.useEffect(() => {\n    const conf = {\n      eleId: \"board\",\n      fen: null,\n      onboardChange: boardChange,\n    };\n    fenEditor.current = new FenEditor(conf);\n    let _position = fenEditor.current.board.getPosition();\n    setCurrentFen(genFen(_position));\n    setEditMode(EDIT_MODE.move);\n    return () => fenEditor.current.board.destroy();\n  }, []);\n\n  return (\n    <div className=\"practice two_column_layout editor\">\n      <div className=\"board__section two_column_layout__item\">\n        <div className=\"board__container\">\n          <div id=\"board\"></div>\n        </div>\n      </div>\n      <div></div>\n      <div className=\"align_self_stretch b_dark two_column_layout__item d_flex flex_column\">\n        <div className=\"d_flex justify_content_between edit_mode\">\n          <button\n            className={`expand ${editMode === EDIT_MODE.move ? \"active\" : \"\"} `}\n            onClick={() => updateEditMove(EDIT_MODE.move)}\n          >\n            Move\n          </button>\n          <button\n            className={`expand ${\n              editMode === EDIT_MODE.erase ? \"active\" : \"\"\n            } `}\n            onClick={() => updateEditMove(EDIT_MODE.erase)}\n          >\n            Erase\n          </button>\n        </div>\n        <div className=\"pieces \">\n          <div className=\"d_flex justify_content_between\">\n            {[\"wk\", \"wq\", \"wr\", \"wb\", \"wn\", \"wp\"].map((p) => (\n              <button\n                onClick={() => updateEditMove(p)}\n                className={`expand ${editMode === p ? \"active\" : \"\"} `}\n              >\n                <img key={p} src={pieceTheme(p)} className=\"piece_icon\" />\n              </button>\n            ))}\n          </div>\n          <div className=\"d_flex justify_content_between\">\n            {[\"bk\", \"bq\", \"br\", \"bb\", \"bn\", \"bp\"].map((p) => (\n              <button\n                onClick={() => updateEditMove(p)}\n                className={`expand ${editMode === p ? \"active\" : \"\"} `}\n              >\n                <img key={p} src={pieceTheme(p)} className=\"piece_icon\" />\n              </button>\n            ))}\n          </div>\n        </div>\n        <div className=\"game_status\">\n          <div className=\"d_flex\">\n            <div>\n              <input\n                onChange={caslingChange}\n                id=\"w-0-0\"\n                type=\"checkbox\"\n                defaultChecked\n                value=\"K\"\n              />\n              <label htmlFor=\"w-0-0\">White O-O</label>\n            </div>\n            <div>\n              <input\n                onChange={caslingChange}\n                id=\"w-0-0-0\"\n                type=\"checkbox\"\n                defaultChecked\n                value=\"Q\"\n              />\n              <label htmlFor=\"w-0-0-0\">White O-O-O</label>\n            </div>\n          </div>\n          <div className=\"d_flex\">\n            <div>\n              <input\n                onChange={caslingChange}\n                id=\"b-0-0\"\n                type=\"checkbox\"\n                defaultChecked\n                value=\"k\"\n              />\n              <label htmlFor=\"b-0-0\">Black O-O</label>\n            </div>\n            <div>\n              <input\n                onChange={caslingChange}\n                id=\"b-0-0-0\"\n                type=\"checkbox\"\n                defaultChecked\n                value=\"q\"\n              />\n              <label htmlFor=\"b-0-0-0\">Black O-O-O</label>\n            </div>\n          </div>\n          <div>\n            <h5 className=\"to_play\">To Play</h5>\n            <div className=\"d_flex\">\n              <div>\n                <input type=\"radio\" checked id=\"w\" name=\"toPlay\" value=\"w\" />\n                <label for=\"w\">White</label>\n              </div>\n              <div>\n                <input type=\"radio\" id=\"\" name=\"toPlay\" value=\"b\" />\n                <label for=\"b\">black</label>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"mark\">\n          <div className=\"d_flex\">\n            <button\n              className={`expand ${\n                editMode === EDIT_MODE.mark ? \"active\" : \"\"\n              } `}\n              onClick={() => updateEditMove(EDIT_MODE.mark)}\n            >\n              Add Markers\n            </button>\n            <button\n              className=\"delete_btn\"\n              onClick={() => updateEditMove(EDIT_MODE.mark)}\n            >\n              Clear Markers\n            </button>\n          </div>\n\n          <div\n            className={`${\n              editMode !== EDIT_MODE.mark ? \"hidden\" : \"\"\n            } d_flex mark_options`}\n          >\n            <div className=\"d_flex flex_column justify_content_center align_items_center\">\n              <label htmlFor=\"color\">Marker Color</label>\n              <input type=\"color\" id=\"color\" value=\"#42ba96\" />\n            </div>\n            <div className=\"expand d_flex flex_column justify_content_center align_items_center\">\n              <label htmlFor=\"mark_type\">Marker Type</label>\n              <select\n                className=\"w_100\"\n                name=\"cars\"\n                id=\"mark_type\"\n                onChange={(e) => {\n                  fenEditor.current.setMarker(\"\", e.target.value);\n                }}\n              >\n                <option value=\"arrow\">&rarr; Arrow</option>\n                <option selected value=\"circle\">\n                  &#x25EF; Circle\n                </option>\n                <option value=\"dot\">&#x2b24; Dot</option>\n                <option value=\"frame\">&#x25A2; Frame</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"d-flex fen\">\n          <div className=\"d_flex align_items_center w_100 \">\n            <input className=\"w_100\" value={currentFen} />\n            <button>Share</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BoardEditor;\n","import Layout from \"./components/layout/layout\";\nimport Game from \"./components/playComputer/game\";\nimport \"./board.css\";\nimport Home from \"./components/home\";\nimport Puzzle from \"./components/puzzles\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Practice from \"./components/practice\";\nimport { APP_ROUTES } from \"./utils/constants\";\nimport Basics from \"./components/practice/basics\";\nimport PracticeLessons from \"./components/practice/practice\";\nimport BoardEditor from \"./components/boardEditor\";\nimport \"./assets/styles/cm-chessboard.css\";\nimport \"./assets/styles/main.css\";\n\nexport const moveAnotation = { class: \"anotateGood\", slice: \"anotation\" };\n\nfunction App() {\n  return (\n    <Layout>\n      <svg height=\"0\" width=\"0\">\n        <defs>\n          <marker\n            id=\"arrowhead\"\n            markerWidth=\"3\"\n            markerHeight=\"3.5\"\n            refX=\"0\"\n            refY=\"1.75\"\n            orient=\"auto\"\n          >\n            <polygon\n              points=\"0 0, 3 1.75, 0 3.5\"\n              fill=\"#e8353566 \"\n              stroke=\"none\"\n            />\n          </marker>\n        </defs>\n        <g id=\"anotation\" transform=\"\">\n          <circle cx=\"12\" cy=\"12\" r=\"12\" />\n          <path\n            fill=\"#fff\"\n            d=\"M9 21.035l-9-8.638 2.791-2.87 6.156 5.874 12.21-12.436 2.843 2.817z\"\n          />{\" \"}\n        </g>\n      </svg>\n\n      <Routes>\n        {/* {let resolved = useResolvedPath(to);\n  let match = useMatch({ path: resolved.pathname, end: true });} */}\n        <Route path={APP_ROUTES.playComputer} element={<Game />} />\n        <Route path={APP_ROUTES.puzzles} element={<Puzzle />} />\n        <Route path={APP_ROUTES.practice} element={<Practice />} />\n        <Route path={APP_ROUTES.basics} element={<Basics />} />\n        <Route path={APP_ROUTES.lessons} element={<PracticeLessons />} />\n        <Route path={APP_ROUTES.home} element={<Home />} />\n        <Route path={APP_ROUTES.boardEditor} element={<BoardEditor />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}